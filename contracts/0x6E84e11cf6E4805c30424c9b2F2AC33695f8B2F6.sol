contract main {




// =====================  Runtime code  =====================


#
#  - sub_88b5c7ec(?)
#
address stor0;
address stor1;
address stor2;
uint32 stor3;
address owner;
uint256 stor3;
mapping of uint256 stor4;
mapping of uint8 stor6;
mapping of uint256 stor7;
uint256 maxFee;

function maxFee() {
    return maxFee
}

function owner() {
    return address(owner)
}

function _fallback() payable {
    revert
}

function addListener(address arg1) {
    require calldata.size - 4 >= 32
    if address(owner) != msg.sender:
        revert with 0, 'Only owner'
    stor6[address(arg1)] = 1
}

function setOptions(uint256 arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    if address(owner) != msg.sender:
        revert with 0, 'Only owner'
    maxFee = arg2
}

function getProfit(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require ext_code.size(stor0)
    staticcall stor0.0x70a08231 with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0]
    return (arg2 / ext_call.return_data[0])
}

function returnTokenBalance(address arg1) payable {
    require calldata.size - 4 >= 32
    if address(owner) != msg.sender:
        revert with 0, 'Only owner'
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    mem[196 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor3), uint32(stor3), ext_call.return_data[0 len 28]
    call arg1 with:
       funct uint32(stor3)
         gas gas_remaining wei
        args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[260 len 4]
    if not return_data.size:
        if not ext_call.success:
            revert with 0, 'TransferHelper: TRANSFER_FAILED'
        if not unknown_0xa9059cbb(?????), Mask(224, 0, stor3):
            revert with 0, 'TransferHelper: TRANSFER_FAILED'
    else:
        mem[228 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper: TRANSFER_FAILED'
        if return_data.size:
            require return_data.size >= 32
            if not mem[228]:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
}

function returnBalance() payable {
    if address(owner) != msg.sender:
        revert with 0, 'Only owner'
    call address(owner) with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    if address(owner) != msg.sender:
        revert with 0, 'Only owner'
    require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
    staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    mem[196 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor3), uint32(stor3), ext_call.return_data[0 len 28]
    call 0xe9e7cea3dedca5984780bafc599bd69add087d56 with:
       funct uint32(stor3)
         gas gas_remaining wei
        args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[260 len 4]
    if not return_data.size:
        if not ext_call.success:
            revert with 0, 'TransferHelper: TRANSFER_FAILED'
        if not unknown_0xa9059cbb(?????), Mask(224, 0, stor3):
            revert with 0, 'TransferHelper: TRANSFER_FAILED'
        if address(owner) != msg.sender:
            revert with 0, 'Only owner'
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        mem[296 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor3), uint32(stor3), ext_call.return_data[0 len 28]
        call 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c with:
           funct uint32(stor3)
             gas gas_remaining wei
            args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[360 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if not unknown_0xa9059cbb(?????), Mask(224, 0, stor3):
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
        else:
            mem[328 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if return_data.size:
                require return_data.size >= 32
                if not mem[328]:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
    else:
        mem[228 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper: TRANSFER_FAILED'
        if return_data.size:
            require return_data.size >= 32
            if not mem[228]:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
        if address(owner) != msg.sender:
            revert with 0, 'Only owner'
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        mem[ceil32(return_data.size) + 297 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor3), uint32(stor3), ext_call.return_data[0 len 28]
        call 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c with:
           funct uint32(stor3)
             gas gas_remaining wei
            args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[ceil32(return_data.size) + 361 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if not unknown_0xa9059cbb(?????), Mask(224, 0, stor3):
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
        else:
            mem[ceil32(return_data.size) + 329 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 
                            'TransferHelper: TRANSFER_FAILED',
                            mem[(2 * ceil32(return_data.size)) + 398 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
            if return_data.size:
                require return_data.size >= 32
                if not mem[ceil32(return_data.size) + 329]:
                    revert with 0, 
                                'TransferHelper: TRANSFER_FAILED',
                                mem[(2 * ceil32(return_data.size)) + 398 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
}

function sub_bb030d37(?) payable {
    require calldata.size - 4 >= 128
    require arg1 <= 4294967296
    require arg1 + 36 <= calldata.size
    require arg1.length <= 4294967296 and arg1 + (32 * arg1.length) + 36 <= calldata.size
    mem[96] = arg1.length
    mem[128 len 32 * arg1.length] = call.data[arg1 + 36 len 32 * arg1.length]
    mem[(32 * arg1.length) + 128] = 0
    if not stor6[address(msg.sender)]:
        revert with 0, 'slave'
    mem[0] = arg2
    mem[32] = 7
    if stor7[address(arg2)]:
        emit Fee(stor7[address(arg2)]);
        require ext_code.size(stor0)
        staticcall stor0.0x70a08231 with:
                gas gas_remaining wei
               args arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0]
        emit Profit((10 * 10^6 * arg3 / ext_call.return_data[0]));
        if 10 * 10^6 * arg3 / ext_call.return_data[0] > stor7[address(arg2)]:
            mem[(32 * arg1.length) + 128] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[(32 * arg1.length) + 132] = arg4
            mem[(32 * arg1.length) + 164] = 0
            mem[(32 * arg1.length) + 228] = this.address
            mem[(32 * arg1.length) + 260] = block.timestamp
            mem[(32 * arg1.length) + 196] = 160
            mem[(32 * arg1.length) + 292] = arg1.length
            mem[(32 * arg1.length) + 324 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
            require ext_code.size(stor2)
            call stor2.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                 gas gas_remaining wei
                args arg4, 0, 160, address(this.address), block.timestamp, arg1.length, call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 324 len (32 * arg1.length) - floor32(arg1.length)]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require arg1.length - 1 < arg1.length
            stor4[mem[(32 * arg1.length - 1) + 140 len 20]] = 1
    else:
        require 0 < arg1.length
        _13 = mem[128]
        mem[(32 * arg1.length) + 132] = this.address
        require ext_code.size(address(_13))
        staticcall address(_13).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 1 < arg1.length
        require ext_code.size(mem[172 len 20])
        staticcall mem[172 len 20].0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        mem[(32 * arg1.length) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
        mem[(32 * arg1.length) + 132] = 10 * 10^6
        mem[(32 * arg1.length) + 164] = 0
        mem[(32 * arg1.length) + 228] = this.address
        mem[(32 * arg1.length) + 260] = block.timestamp
        mem[(32 * arg1.length) + 196] = 160
        mem[(32 * arg1.length) + 292] = arg1.length
        mem[(32 * arg1.length) + 324 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
        require ext_code.size(stor2)
        call stor2.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
             gas gas_remaining wei
            args 10 * 10^6, 0, 160, address(this.address), block.timestamp, arg1.length, call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 324 len (32 * arg1.length) - floor32(arg1.length)]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[(32 * arg1.length) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = (32 * arg1.length) + ceil32(return_data.size) + 128
        require return_data.size >= 32
        _7568 = mem[(32 * arg1.length) + 128 len 4], 0
        require mem[(32 * arg1.length) + 128 len 4], 0 <= 4294967296
        require mem[(32 * arg1.length) + 128 len 4], 0 + 32 <= return_data.size
        require mem[mem[(32 * arg1.length) + 128 len 4], 0 + (32 * arg1.length) + 128] <= 4294967296 and mem[(32 * arg1.length) + 128 len 4], 0 + (32 * mem[mem[(32 * arg1.length) + 128 len 4], 0 + (32 * arg1.length) + 128]) + 32 <= return_data.size
        mem[(32 * arg1.length) + ceil32(return_data.size) + 128] = mem[mem[(32 * arg1.length) + 128 len 4], 0 + (32 * arg1.length) + 128]
        _7573 = mem[_7568 + (32 * arg1.length) + 128]
        mem[(32 * arg1.length) + ceil32(return_data.size) + 160 len floor32(mem[_7568 + (32 * arg1.length) + 128])] = mem[_7568 + (32 * arg1.length) + 160 len floor32(mem[_7568 + (32 * arg1.length) + 128])]
        mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] = 2
        require 1 < arg1.length
        mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192] = mem[172 len 20]
        require 0 < arg1.length
        mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 224] = mem[140 len 20]
        require 1 < arg1.length
        require ext_code.size(mem[172 len 20])
        staticcall mem[172 len 20].0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 292] = arg2
        mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 324] = 0
        mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 256] = 68
        mem[64] = (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 356
        mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 292 len 28] = address(arg2) << 64
        mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 288 len 4] = unknown_0xa9059cbb(?????)
        mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 356 len 64] = unknown_0xa9059cbb(?????), address(arg2) << 64, 0, 0
        mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 448 len 4] = 0
        call mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] with:
             gas gas_remaining wei
            args 0, mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 420 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if not arg1.length:
                idx = 0
                while idx < 1:
                    require idx < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                    _30074 = mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                    require idx + 1 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                    _30088 = mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                    if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] == mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] < mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                        if not mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] == mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] < mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            if not mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30245 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                            mem[mem[64] + 52] = address(_30088)
                            _30246 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30248 = sha3(mem[_30246 + 32 len mem[_30246]])
                            mem[_30245 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30245 + 105] = stor1
                            mem[_30245 + 125] = _30248
                            mem[_30245 + 157] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                            mem[_30245 + 72] = 85
                            require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                            staticcall address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).getReserves() with:
                                    gas gas_remaining wei
                            mem[_30245 + 189 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            mem[_30245 + 193] = address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            require ext_code.size(address(_30074))
                            staticcall address(_30074).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            mem[_30245 + 189] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if address(_30074) == address(_30074):
                                if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30245 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30245 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30245 + 295 len 26]
                                if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30074) == address(_30074):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30245 + 189] = 0
                                            mem[64] = _30245 + 221
                                            mem[_30245 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30245 + 225] = 0
                                            mem[_30245 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30245 + 289] = this.address
                                            mem[_30245 + 321] = 128
                                            mem[_30245 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30245 + s + 385] = mem[_30245 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31381 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30245 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30245 + 221] = address(_30088)
                                                mem[_30245 + 241] = address(_31381)
                                                mem[_30245 + 189] = 40
                                                mem[_30245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 294] = stor1
                                                mem[_30245 + 314] = sha3(address(_30088), address(_31381))
                                                mem[_30245 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30245 + 261] = 85
                                                mem[_30245 + 378] = 0
                                                mem[64] = _30245 + 410
                                                mem[_30245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 414] = 0
                                                mem[_30245 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30245 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31381)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30245 + 510] = 128
                                                mem[_30245 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30245 + s + 574] = mem[_30245 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30088), address(_31381)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30245 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30245 + 241] = address(_30088)
                                                mem[_30245 + 189] = 40
                                                mem[_30245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 294] = stor1
                                                mem[_30245 + 314] = sha3(mem[_30245 + 221 len 20], address(_30088))
                                                mem[_30245 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30245 + 261] = 85
                                                _32996 = sha3(0, stor1, sha3(mem[_30245 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30245 + 378] = 0
                                                mem[64] = _30245 + 410
                                                mem[_30245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 414] = 0
                                                mem[_30245 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30245 + 478] = address(_32996)
                                                mem[_30245 + 510] = 128
                                                mem[_30245 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30245 + s + 574] = mem[_30245 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_32996), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30245 + 189] = 0
                                            mem[64] = _30245 + 221
                                            mem[_30245 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30245 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30245 + 257] = 0
                                            mem[_30245 + 289] = this.address
                                            mem[_30245 + 321] = 128
                                            mem[_30245 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30245 + s + 385] = mem[_30245 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31382 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30245 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30245 + 221] = address(_30088)
                                                mem[_30245 + 241] = address(_31382)
                                                mem[_30245 + 189] = 40
                                                mem[_30245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 294] = stor1
                                                mem[_30245 + 314] = sha3(address(_30088), address(_31382))
                                                mem[_30245 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30245 + 261] = 85
                                                mem[_30245 + 378] = 0
                                                mem[64] = _30245 + 410
                                                mem[_30245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30245 + 446] = 0
                                                mem[_30245 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31382)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30245 + 510] = 128
                                                mem[_30245 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30245 + s + 574] = mem[_30245 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30088), address(_31382)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30245 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30245 + 241] = address(_30088)
                                                mem[_30245 + 189] = 40
                                                mem[_30245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 294] = stor1
                                                mem[_30245 + 314] = sha3(mem[_30245 + 221 len 20], address(_30088))
                                                mem[_30245 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30245 + 261] = 85
                                                _33012 = sha3(0, stor1, sha3(mem[_30245 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30245 + 378] = 0
                                                mem[64] = _30245 + 410
                                                mem[_30245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30245 + 446] = 0
                                                mem[_30245 + 478] = address(_33012)
                                                mem[_30245 + 510] = 128
                                                mem[_30245 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30245 + s + 574] = mem[_30245 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_33012), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30074) == address(_30074):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30245 + 189] = 0
                                            mem[64] = _30245 + 221
                                            mem[_30245 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30245 + 225] = 0
                                            mem[_30245 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30245 + 289] = this.address
                                            mem[_30245 + 321] = 128
                                            mem[_30245 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30245 + s + 385] = mem[_30245 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31643 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30245 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30245 + 221] = address(_30088)
                                                mem[_30245 + 241] = address(_31643)
                                                mem[_30245 + 189] = 40
                                                mem[_30245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 294] = stor1
                                                mem[_30245 + 314] = sha3(address(_30088), address(_31643))
                                                mem[_30245 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30245 + 261] = 85
                                                mem[_30245 + 378] = 0
                                                mem[64] = _30245 + 410
                                                mem[_30245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 414] = 0
                                                mem[_30245 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30245 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31643)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30245 + 510] = 128
                                                mem[_30245 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30245 + s + 574] = mem[_30245 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30088), address(_31643)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30245 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30245 + 241] = address(_30088)
                                                mem[_30245 + 189] = 40
                                                mem[_30245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 294] = stor1
                                                mem[_30245 + 314] = sha3(mem[_30245 + 221 len 20], address(_30088))
                                                mem[_30245 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30245 + 261] = 85
                                                _34468 = sha3(0, stor1, sha3(mem[_30245 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30245 + 378] = 0
                                                mem[64] = _30245 + 410
                                                mem[_30245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 414] = 0
                                                mem[_30245 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30245 + 478] = address(_34468)
                                                mem[_30245 + 510] = 128
                                                mem[_30245 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30245 + s + 574] = mem[_30245 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_34468), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30245 + 189] = 0
                                            mem[64] = _30245 + 221
                                            mem[_30245 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30245 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30245 + 257] = 0
                                            mem[_30245 + 289] = this.address
                                            mem[_30245 + 321] = 128
                                            mem[_30245 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30245 + s + 385] = mem[_30245 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31644 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30245 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30245 + 221] = address(_30088)
                                                mem[_30245 + 241] = address(_31644)
                                                mem[_30245 + 189] = 40
                                                mem[_30245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 294] = stor1
                                                mem[_30245 + 314] = sha3(address(_30088), address(_31644))
                                                mem[_30245 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30245 + 261] = 85
                                                mem[_30245 + 378] = 0
                                                mem[64] = _30245 + 410
                                                mem[_30245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30245 + 446] = 0
                                                mem[_30245 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31644)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30245 + 510] = 128
                                                mem[_30245 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30245 + s + 574] = mem[_30245 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30088), address(_31644)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30245 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30245 + 241] = address(_30088)
                                                mem[_30245 + 189] = 40
                                                mem[_30245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 294] = stor1
                                                mem[_30245 + 314] = sha3(mem[_30245 + 221 len 20], address(_30088))
                                                mem[_30245 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30245 + 261] = 85
                                                _34484 = sha3(0, stor1, sha3(mem[_30245 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30245 + 378] = 0
                                                mem[64] = _30245 + 410
                                                mem[_30245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30245 + 446] = 0
                                                mem[_30245 + 478] = address(_34484)
                                                mem[_30245 + 510] = 128
                                                mem[_30245 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30245 + s + 574] = mem[_30245 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_34484), 128, 0
                            else:
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30245 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30245 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30245 + 295 len 26]
                                if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30074) == address(_30074):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30245 + 189] = 0
                                            mem[64] = _30245 + 221
                                            mem[_30245 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30245 + 225] = 0
                                            mem[_30245 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30245 + 289] = this.address
                                            mem[_30245 + 321] = 128
                                            mem[_30245 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30245 + s + 385] = mem[_30245 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31385 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30245 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30245 + 221] = address(_30088)
                                                mem[_30245 + 241] = address(_31385)
                                                mem[_30245 + 189] = 40
                                                mem[_30245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 294] = stor1
                                                mem[_30245 + 314] = sha3(address(_30088), address(_31385))
                                                mem[_30245 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30245 + 261] = 85
                                                mem[_30245 + 378] = 0
                                                mem[64] = _30245 + 410
                                                mem[_30245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 414] = 0
                                                mem[_30245 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30245 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31385)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30245 + 510] = 128
                                                mem[_30245 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30245 + s + 574] = mem[_30245 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30088), address(_31385)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30245 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30245 + 241] = address(_30088)
                                                mem[_30245 + 189] = 40
                                                mem[_30245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 294] = stor1
                                                mem[_30245 + 314] = sha3(mem[_30245 + 221 len 20], address(_30088))
                                                mem[_30245 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30245 + 261] = 85
                                                _33032 = sha3(0, stor1, sha3(mem[_30245 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30245 + 378] = 0
                                                mem[64] = _30245 + 410
                                                mem[_30245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 414] = 0
                                                mem[_30245 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30245 + 478] = address(_33032)
                                                mem[_30245 + 510] = 128
                                                mem[_30245 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30245 + s + 574] = mem[_30245 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_33032), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30245 + 189] = 0
                                            mem[64] = _30245 + 221
                                            mem[_30245 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30245 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30245 + 257] = 0
                                            mem[_30245 + 289] = this.address
                                            mem[_30245 + 321] = 128
                                            mem[_30245 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30245 + s + 385] = mem[_30245 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31386 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30245 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30245 + 221] = address(_30088)
                                                mem[_30245 + 241] = address(_31386)
                                                mem[_30245 + 189] = 40
                                                mem[_30245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 294] = stor1
                                                mem[_30245 + 314] = sha3(address(_30088), address(_31386))
                                                mem[_30245 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30245 + 261] = 85
                                                mem[_30245 + 378] = 0
                                                mem[64] = _30245 + 410
                                                mem[_30245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30245 + 446] = 0
                                                mem[_30245 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31386)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30245 + 510] = 128
                                                mem[_30245 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30245 + s + 574] = mem[_30245 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30088), address(_31386)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30245 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30245 + 241] = address(_30088)
                                                mem[_30245 + 189] = 40
                                                mem[_30245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 294] = stor1
                                                mem[_30245 + 314] = sha3(mem[_30245 + 221 len 20], address(_30088))
                                                mem[_30245 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30245 + 261] = 85
                                                _33048 = sha3(0, stor1, sha3(mem[_30245 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30245 + 378] = 0
                                                mem[64] = _30245 + 410
                                                mem[_30245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30245 + 446] = 0
                                                mem[_30245 + 478] = address(_33048)
                                                mem[_30245 + 510] = 128
                                                mem[_30245 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30245 + s + 574] = mem[_30245 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_33048), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30074) == address(_30074):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30245 + 189] = 0
                                            mem[64] = _30245 + 221
                                            mem[_30245 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30245 + 225] = 0
                                            mem[_30245 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30245 + 289] = this.address
                                            mem[_30245 + 321] = 128
                                            mem[_30245 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30245 + s + 385] = mem[_30245 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31651 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30245 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30245 + 221] = address(_30088)
                                                mem[_30245 + 241] = address(_31651)
                                                mem[_30245 + 189] = 40
                                                mem[_30245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 294] = stor1
                                                mem[_30245 + 314] = sha3(address(_30088), address(_31651))
                                                mem[_30245 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30245 + 261] = 85
                                                mem[_30245 + 378] = 0
                                                mem[64] = _30245 + 410
                                                mem[_30245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 414] = 0
                                                mem[_30245 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30245 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31651)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30245 + 510] = 128
                                                mem[_30245 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30245 + s + 574] = mem[_30245 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30088), address(_31651)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30245 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30245 + 241] = address(_30088)
                                                mem[_30245 + 189] = 40
                                                mem[_30245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 294] = stor1
                                                mem[_30245 + 314] = sha3(mem[_30245 + 221 len 20], address(_30088))
                                                mem[_30245 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30245 + 261] = 85
                                                _34500 = sha3(0, stor1, sha3(mem[_30245 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30245 + 378] = 0
                                                mem[64] = _30245 + 410
                                                mem[_30245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 414] = 0
                                                mem[_30245 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30245 + 478] = address(_34500)
                                                mem[_30245 + 510] = 128
                                                mem[_30245 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30245 + s + 574] = mem[_30245 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_34500), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30245 + 189] = 0
                                            mem[64] = _30245 + 221
                                            mem[_30245 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30245 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30245 + 257] = 0
                                            mem[_30245 + 289] = this.address
                                            mem[_30245 + 321] = 128
                                            mem[_30245 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30245 + s + 385] = mem[_30245 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31652 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30245 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30245 + 221] = address(_30088)
                                                mem[_30245 + 241] = address(_31652)
                                                mem[_30245 + 189] = 40
                                                mem[_30245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 294] = stor1
                                                mem[_30245 + 314] = sha3(address(_30088), address(_31652))
                                                mem[_30245 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30245 + 261] = 85
                                                mem[_30245 + 378] = 0
                                                mem[64] = _30245 + 410
                                                mem[_30245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30245 + 446] = 0
                                                mem[_30245 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31652)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30245 + 510] = 128
                                                mem[_30245 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30245 + s + 574] = mem[_30245 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30088), address(_31652)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30245 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30245 + 241] = address(_30088)
                                                mem[_30245 + 189] = 40
                                                mem[_30245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 294] = stor1
                                                mem[_30245 + 314] = sha3(mem[_30245 + 221 len 20], address(_30088))
                                                mem[_30245 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30245 + 261] = 85
                                                _34516 = sha3(0, stor1, sha3(mem[_30245 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30245 + 378] = 0
                                                mem[64] = _30245 + 410
                                                mem[_30245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30245 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30245 + 446] = 0
                                                mem[_30245 + 478] = address(_34516)
                                                mem[_30245 + 510] = 128
                                                mem[_30245 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30245 + s + 574] = mem[_30245 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30248, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_34516), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30253 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                            mem[mem[64] + 52] = address(_30074)
                            _30254 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30256 = sha3(mem[_30254 + 32 len mem[_30254]])
                            mem[_30253 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30253 + 105] = stor1
                            mem[_30253 + 125] = _30256
                            mem[_30253 + 157] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                            mem[_30253 + 72] = 85
                            require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                            staticcall address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).getReserves() with:
                                    gas gas_remaining wei
                            mem[_30253 + 189 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            mem[_30253 + 193] = address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            require ext_code.size(address(_30074))
                            staticcall address(_30074).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            mem[_30253 + 189] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if address(_30074) == address(_30074):
                                if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30253 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30253 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30253 + 295 len 26]
                                if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30074) == address(_30074):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30253 + 189] = 0
                                            mem[64] = _30253 + 221
                                            mem[_30253 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30253 + 225] = 0
                                            mem[_30253 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30253 + 289] = this.address
                                            mem[_30253 + 321] = 128
                                            mem[_30253 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30253 + s + 385] = mem[_30253 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31389 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30253 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30253 + 221] = address(_30088)
                                                mem[_30253 + 241] = address(_31389)
                                                mem[_30253 + 189] = 40
                                                mem[_30253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 294] = stor1
                                                mem[_30253 + 314] = sha3(address(_30088), address(_31389))
                                                mem[_30253 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30253 + 261] = 85
                                                mem[_30253 + 378] = 0
                                                mem[64] = _30253 + 410
                                                mem[_30253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 414] = 0
                                                mem[_30253 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30253 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31389)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30253 + 510] = 128
                                                mem[_30253 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30253 + s + 574] = mem[_30253 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30088), address(_31389)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30253 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30253 + 241] = address(_30088)
                                                mem[_30253 + 189] = 40
                                                mem[_30253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 294] = stor1
                                                mem[_30253 + 314] = sha3(mem[_30253 + 221 len 20], address(_30088))
                                                mem[_30253 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30253 + 261] = 85
                                                _33068 = sha3(0, stor1, sha3(mem[_30253 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30253 + 378] = 0
                                                mem[64] = _30253 + 410
                                                mem[_30253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 414] = 0
                                                mem[_30253 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30253 + 478] = address(_33068)
                                                mem[_30253 + 510] = 128
                                                mem[_30253 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30253 + s + 574] = mem[_30253 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_33068), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30253 + 189] = 0
                                            mem[64] = _30253 + 221
                                            mem[_30253 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30253 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30253 + 257] = 0
                                            mem[_30253 + 289] = this.address
                                            mem[_30253 + 321] = 128
                                            mem[_30253 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30253 + s + 385] = mem[_30253 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31390 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30253 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30253 + 221] = address(_30088)
                                                mem[_30253 + 241] = address(_31390)
                                                mem[_30253 + 189] = 40
                                                mem[_30253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 294] = stor1
                                                mem[_30253 + 314] = sha3(address(_30088), address(_31390))
                                                mem[_30253 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30253 + 261] = 85
                                                mem[_30253 + 378] = 0
                                                mem[64] = _30253 + 410
                                                mem[_30253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30253 + 446] = 0
                                                mem[_30253 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31390)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30253 + 510] = 128
                                                mem[_30253 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30253 + s + 574] = mem[_30253 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30088), address(_31390)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30253 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30253 + 241] = address(_30088)
                                                mem[_30253 + 189] = 40
                                                mem[_30253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 294] = stor1
                                                mem[_30253 + 314] = sha3(mem[_30253 + 221 len 20], address(_30088))
                                                mem[_30253 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30253 + 261] = 85
                                                _33084 = sha3(0, stor1, sha3(mem[_30253 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30253 + 378] = 0
                                                mem[64] = _30253 + 410
                                                mem[_30253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30253 + 446] = 0
                                                mem[_30253 + 478] = address(_33084)
                                                mem[_30253 + 510] = 128
                                                mem[_30253 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30253 + s + 574] = mem[_30253 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_33084), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30074) == address(_30074):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30253 + 189] = 0
                                            mem[64] = _30253 + 221
                                            mem[_30253 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30253 + 225] = 0
                                            mem[_30253 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30253 + 289] = this.address
                                            mem[_30253 + 321] = 128
                                            mem[_30253 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30253 + s + 385] = mem[_30253 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31659 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30253 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30253 + 221] = address(_30088)
                                                mem[_30253 + 241] = address(_31659)
                                                mem[_30253 + 189] = 40
                                                mem[_30253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 294] = stor1
                                                mem[_30253 + 314] = sha3(address(_30088), address(_31659))
                                                mem[_30253 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30253 + 261] = 85
                                                mem[_30253 + 378] = 0
                                                mem[64] = _30253 + 410
                                                mem[_30253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 414] = 0
                                                mem[_30253 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30253 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31659)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30253 + 510] = 128
                                                mem[_30253 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30253 + s + 574] = mem[_30253 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30088), address(_31659)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30253 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30253 + 241] = address(_30088)
                                                mem[_30253 + 189] = 40
                                                mem[_30253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 294] = stor1
                                                mem[_30253 + 314] = sha3(mem[_30253 + 221 len 20], address(_30088))
                                                mem[_30253 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30253 + 261] = 85
                                                _34532 = sha3(0, stor1, sha3(mem[_30253 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30253 + 378] = 0
                                                mem[64] = _30253 + 410
                                                mem[_30253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 414] = 0
                                                mem[_30253 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30253 + 478] = address(_34532)
                                                mem[_30253 + 510] = 128
                                                mem[_30253 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30253 + s + 574] = mem[_30253 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_34532), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30253 + 189] = 0
                                            mem[64] = _30253 + 221
                                            mem[_30253 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30253 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30253 + 257] = 0
                                            mem[_30253 + 289] = this.address
                                            mem[_30253 + 321] = 128
                                            mem[_30253 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30253 + s + 385] = mem[_30253 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31660 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30253 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30253 + 221] = address(_30088)
                                                mem[_30253 + 241] = address(_31660)
                                                mem[_30253 + 189] = 40
                                                mem[_30253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 294] = stor1
                                                mem[_30253 + 314] = sha3(address(_30088), address(_31660))
                                                mem[_30253 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30253 + 261] = 85
                                                mem[_30253 + 378] = 0
                                                mem[64] = _30253 + 410
                                                mem[_30253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30253 + 446] = 0
                                                mem[_30253 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31660)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30253 + 510] = 128
                                                mem[_30253 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30253 + s + 574] = mem[_30253 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30088), address(_31660)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30253 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30253 + 241] = address(_30088)
                                                mem[_30253 + 189] = 40
                                                mem[_30253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 294] = stor1
                                                mem[_30253 + 314] = sha3(mem[_30253 + 221 len 20], address(_30088))
                                                mem[_30253 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30253 + 261] = 85
                                                _34548 = sha3(0, stor1, sha3(mem[_30253 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30253 + 378] = 0
                                                mem[64] = _30253 + 410
                                                mem[_30253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30253 + 446] = 0
                                                mem[_30253 + 478] = address(_34548)
                                                mem[_30253 + 510] = 128
                                                mem[_30253 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30253 + s + 574] = mem[_30253 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_34548), 128, 0
                            else:
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30253 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30253 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30253 + 295 len 26]
                                if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30074) == address(_30074):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30253 + 189] = 0
                                            mem[64] = _30253 + 221
                                            mem[_30253 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30253 + 225] = 0
                                            mem[_30253 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30253 + 289] = this.address
                                            mem[_30253 + 321] = 128
                                            mem[_30253 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30253 + s + 385] = mem[_30253 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31393 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30253 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30253 + 221] = address(_30088)
                                                mem[_30253 + 241] = address(_31393)
                                                mem[_30253 + 189] = 40
                                                mem[_30253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 294] = stor1
                                                mem[_30253 + 314] = sha3(address(_30088), address(_31393))
                                                mem[_30253 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30253 + 261] = 85
                                                mem[_30253 + 378] = 0
                                                mem[64] = _30253 + 410
                                                mem[_30253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 414] = 0
                                                mem[_30253 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30253 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31393)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30253 + 510] = 128
                                                mem[_30253 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30253 + s + 574] = mem[_30253 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30088), address(_31393)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30253 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30253 + 241] = address(_30088)
                                                mem[_30253 + 189] = 40
                                                mem[_30253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 294] = stor1
                                                mem[_30253 + 314] = sha3(mem[_30253 + 221 len 20], address(_30088))
                                                mem[_30253 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30253 + 261] = 85
                                                _33104 = sha3(0, stor1, sha3(mem[_30253 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30253 + 378] = 0
                                                mem[64] = _30253 + 410
                                                mem[_30253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 414] = 0
                                                mem[_30253 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30253 + 478] = address(_33104)
                                                mem[_30253 + 510] = 128
                                                mem[_30253 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30253 + s + 574] = mem[_30253 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_33104), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30253 + 189] = 0
                                            mem[64] = _30253 + 221
                                            mem[_30253 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30253 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30253 + 257] = 0
                                            mem[_30253 + 289] = this.address
                                            mem[_30253 + 321] = 128
                                            mem[_30253 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30253 + s + 385] = mem[_30253 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31394 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30253 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30253 + 221] = address(_30088)
                                                mem[_30253 + 241] = address(_31394)
                                                mem[_30253 + 189] = 40
                                                mem[_30253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 294] = stor1
                                                mem[_30253 + 314] = sha3(address(_30088), address(_31394))
                                                mem[_30253 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30253 + 261] = 85
                                                mem[_30253 + 378] = 0
                                                mem[64] = _30253 + 410
                                                mem[_30253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30253 + 446] = 0
                                                mem[_30253 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31394)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30253 + 510] = 128
                                                mem[_30253 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30253 + s + 574] = mem[_30253 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30088), address(_31394)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30253 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30253 + 241] = address(_30088)
                                                mem[_30253 + 189] = 40
                                                mem[_30253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 294] = stor1
                                                mem[_30253 + 314] = sha3(mem[_30253 + 221 len 20], address(_30088))
                                                mem[_30253 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30253 + 261] = 85
                                                _33120 = sha3(0, stor1, sha3(mem[_30253 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30253 + 378] = 0
                                                mem[64] = _30253 + 410
                                                mem[_30253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30253 + 446] = 0
                                                mem[_30253 + 478] = address(_33120)
                                                mem[_30253 + 510] = 128
                                                mem[_30253 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30253 + s + 574] = mem[_30253 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_33120), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30074) == address(_30074):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30253 + 189] = 0
                                            mem[64] = _30253 + 221
                                            mem[_30253 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30253 + 225] = 0
                                            mem[_30253 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30253 + 289] = this.address
                                            mem[_30253 + 321] = 128
                                            mem[_30253 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30253 + s + 385] = mem[_30253 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31667 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30253 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30253 + 221] = address(_30088)
                                                mem[_30253 + 241] = address(_31667)
                                                mem[_30253 + 189] = 40
                                                mem[_30253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 294] = stor1
                                                mem[_30253 + 314] = sha3(address(_30088), address(_31667))
                                                mem[_30253 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30253 + 261] = 85
                                                mem[_30253 + 378] = 0
                                                mem[64] = _30253 + 410
                                                mem[_30253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 414] = 0
                                                mem[_30253 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30253 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31667)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30253 + 510] = 128
                                                mem[_30253 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30253 + s + 574] = mem[_30253 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30088), address(_31667)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30253 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30253 + 241] = address(_30088)
                                                mem[_30253 + 189] = 40
                                                mem[_30253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 294] = stor1
                                                mem[_30253 + 314] = sha3(mem[_30253 + 221 len 20], address(_30088))
                                                mem[_30253 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30253 + 261] = 85
                                                _34564 = sha3(0, stor1, sha3(mem[_30253 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30253 + 378] = 0
                                                mem[64] = _30253 + 410
                                                mem[_30253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 414] = 0
                                                mem[_30253 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30253 + 478] = address(_34564)
                                                mem[_30253 + 510] = 128
                                                mem[_30253 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30253 + s + 574] = mem[_30253 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_34564), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30253 + 189] = 0
                                            mem[64] = _30253 + 221
                                            mem[_30253 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30253 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30253 + 257] = 0
                                            mem[_30253 + 289] = this.address
                                            mem[_30253 + 321] = 128
                                            mem[_30253 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30253 + s + 385] = mem[_30253 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31668 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30253 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30253 + 221] = address(_30088)
                                                mem[_30253 + 241] = address(_31668)
                                                mem[_30253 + 189] = 40
                                                mem[_30253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 294] = stor1
                                                mem[_30253 + 314] = sha3(address(_30088), address(_31668))
                                                mem[_30253 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30253 + 261] = 85
                                                mem[_30253 + 378] = 0
                                                mem[64] = _30253 + 410
                                                mem[_30253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30253 + 446] = 0
                                                mem[_30253 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31668)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30253 + 510] = 128
                                                mem[_30253 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30253 + s + 574] = mem[_30253 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30088), address(_31668)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30253 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30253 + 241] = address(_30088)
                                                mem[_30253 + 189] = 40
                                                mem[_30253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 294] = stor1
                                                mem[_30253 + 314] = sha3(mem[_30253 + 221 len 20], address(_30088))
                                                mem[_30253 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30253 + 261] = 85
                                                _34580 = sha3(0, stor1, sha3(mem[_30253 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30253 + 378] = 0
                                                mem[64] = _30253 + 410
                                                mem[_30253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30253 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30253 + 446] = 0
                                                mem[_30253 + 478] = address(_34580)
                                                mem[_30253 + 510] = 128
                                                mem[_30253 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30253 + s + 574] = mem[_30253 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30256, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_34580), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] == mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] < mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            if not mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30261 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                            mem[mem[64] + 52] = address(_30088)
                            _30262 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30264 = sha3(mem[_30262 + 32 len mem[_30262]])
                            mem[_30261 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30261 + 105] = stor1
                            mem[_30261 + 125] = _30264
                            mem[_30261 + 157] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                            mem[_30261 + 72] = 85
                            require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                            staticcall address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).getReserves() with:
                                    gas gas_remaining wei
                            mem[_30261 + 189 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            mem[_30261 + 193] = address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            require ext_code.size(address(_30074))
                            staticcall address(_30074).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            mem[_30261 + 189] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if address(_30074) == address(_30088):
                                if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30261 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30261 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30261 + 295 len 26]
                                if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30074) == address(_30088):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30261 + 189] = 0
                                            mem[64] = _30261 + 221
                                            mem[_30261 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30261 + 225] = 0
                                            mem[_30261 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30261 + 289] = this.address
                                            mem[_30261 + 321] = 128
                                            mem[_30261 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30261 + s + 385] = mem[_30261 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31397 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30261 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30261 + 221] = address(_30088)
                                                mem[_30261 + 241] = address(_31397)
                                                mem[_30261 + 189] = 40
                                                mem[_30261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 294] = stor1
                                                mem[_30261 + 314] = sha3(address(_30088), address(_31397))
                                                mem[_30261 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30261 + 261] = 85
                                                mem[_30261 + 378] = 0
                                                mem[64] = _30261 + 410
                                                mem[_30261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 414] = 0
                                                mem[_30261 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30261 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31397)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30261 + 510] = 128
                                                mem[_30261 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30261 + s + 574] = mem[_30261 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30088), address(_31397)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30261 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30261 + 241] = address(_30088)
                                                mem[_30261 + 189] = 40
                                                mem[_30261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 294] = stor1
                                                mem[_30261 + 314] = sha3(mem[_30261 + 221 len 20], address(_30088))
                                                mem[_30261 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30261 + 261] = 85
                                                _33140 = sha3(0, stor1, sha3(mem[_30261 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30261 + 378] = 0
                                                mem[64] = _30261 + 410
                                                mem[_30261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 414] = 0
                                                mem[_30261 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30261 + 478] = address(_33140)
                                                mem[_30261 + 510] = 128
                                                mem[_30261 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30261 + s + 574] = mem[_30261 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_33140), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30261 + 189] = 0
                                            mem[64] = _30261 + 221
                                            mem[_30261 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30261 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30261 + 257] = 0
                                            mem[_30261 + 289] = this.address
                                            mem[_30261 + 321] = 128
                                            mem[_30261 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30261 + s + 385] = mem[_30261 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31398 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30261 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30261 + 221] = address(_30088)
                                                mem[_30261 + 241] = address(_31398)
                                                mem[_30261 + 189] = 40
                                                mem[_30261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 294] = stor1
                                                mem[_30261 + 314] = sha3(address(_30088), address(_31398))
                                                mem[_30261 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30261 + 261] = 85
                                                mem[_30261 + 378] = 0
                                                mem[64] = _30261 + 410
                                                mem[_30261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30261 + 446] = 0
                                                mem[_30261 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31398)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30261 + 510] = 128
                                                mem[_30261 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30261 + s + 574] = mem[_30261 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30088), address(_31398)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30261 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30261 + 241] = address(_30088)
                                                mem[_30261 + 189] = 40
                                                mem[_30261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 294] = stor1
                                                mem[_30261 + 314] = sha3(mem[_30261 + 221 len 20], address(_30088))
                                                mem[_30261 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30261 + 261] = 85
                                                _33156 = sha3(0, stor1, sha3(mem[_30261 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30261 + 378] = 0
                                                mem[64] = _30261 + 410
                                                mem[_30261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30261 + 446] = 0
                                                mem[_30261 + 478] = address(_33156)
                                                mem[_30261 + 510] = 128
                                                mem[_30261 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30261 + s + 574] = mem[_30261 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_33156), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30074) == address(_30088):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30261 + 189] = 0
                                            mem[64] = _30261 + 221
                                            mem[_30261 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30261 + 225] = 0
                                            mem[_30261 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30261 + 289] = this.address
                                            mem[_30261 + 321] = 128
                                            mem[_30261 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30261 + s + 385] = mem[_30261 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31675 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30261 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30261 + 221] = address(_30088)
                                                mem[_30261 + 241] = address(_31675)
                                                mem[_30261 + 189] = 40
                                                mem[_30261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 294] = stor1
                                                mem[_30261 + 314] = sha3(address(_30088), address(_31675))
                                                mem[_30261 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30261 + 261] = 85
                                                mem[_30261 + 378] = 0
                                                mem[64] = _30261 + 410
                                                mem[_30261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 414] = 0
                                                mem[_30261 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30261 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31675)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30261 + 510] = 128
                                                mem[_30261 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30261 + s + 574] = mem[_30261 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30088), address(_31675)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30261 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30261 + 241] = address(_30088)
                                                mem[_30261 + 189] = 40
                                                mem[_30261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 294] = stor1
                                                mem[_30261 + 314] = sha3(mem[_30261 + 221 len 20], address(_30088))
                                                mem[_30261 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30261 + 261] = 85
                                                _34596 = sha3(0, stor1, sha3(mem[_30261 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30261 + 378] = 0
                                                mem[64] = _30261 + 410
                                                mem[_30261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 414] = 0
                                                mem[_30261 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30261 + 478] = address(_34596)
                                                mem[_30261 + 510] = 128
                                                mem[_30261 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30261 + s + 574] = mem[_30261 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_34596), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30261 + 189] = 0
                                            mem[64] = _30261 + 221
                                            mem[_30261 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30261 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30261 + 257] = 0
                                            mem[_30261 + 289] = this.address
                                            mem[_30261 + 321] = 128
                                            mem[_30261 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30261 + s + 385] = mem[_30261 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31676 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30261 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30261 + 221] = address(_30088)
                                                mem[_30261 + 241] = address(_31676)
                                                mem[_30261 + 189] = 40
                                                mem[_30261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 294] = stor1
                                                mem[_30261 + 314] = sha3(address(_30088), address(_31676))
                                                mem[_30261 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30261 + 261] = 85
                                                mem[_30261 + 378] = 0
                                                mem[64] = _30261 + 410
                                                mem[_30261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30261 + 446] = 0
                                                mem[_30261 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31676)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30261 + 510] = 128
                                                mem[_30261 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30261 + s + 574] = mem[_30261 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30088), address(_31676)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30261 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30261 + 241] = address(_30088)
                                                mem[_30261 + 189] = 40
                                                mem[_30261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 294] = stor1
                                                mem[_30261 + 314] = sha3(mem[_30261 + 221 len 20], address(_30088))
                                                mem[_30261 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30261 + 261] = 85
                                                _34612 = sha3(0, stor1, sha3(mem[_30261 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30261 + 378] = 0
                                                mem[64] = _30261 + 410
                                                mem[_30261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30261 + 446] = 0
                                                mem[_30261 + 478] = address(_34612)
                                                mem[_30261 + 510] = 128
                                                mem[_30261 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30261 + s + 574] = mem[_30261 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_34612), 128, 0
                            else:
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30261 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30261 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30261 + 295 len 26]
                                if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30074) == address(_30088):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30261 + 189] = 0
                                            mem[64] = _30261 + 221
                                            mem[_30261 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30261 + 225] = 0
                                            mem[_30261 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30261 + 289] = this.address
                                            mem[_30261 + 321] = 128
                                            mem[_30261 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30261 + s + 385] = mem[_30261 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31401 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30261 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30261 + 221] = address(_30088)
                                                mem[_30261 + 241] = address(_31401)
                                                mem[_30261 + 189] = 40
                                                mem[_30261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 294] = stor1
                                                mem[_30261 + 314] = sha3(address(_30088), address(_31401))
                                                mem[_30261 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30261 + 261] = 85
                                                mem[_30261 + 378] = 0
                                                mem[64] = _30261 + 410
                                                mem[_30261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 414] = 0
                                                mem[_30261 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30261 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31401)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30261 + 510] = 128
                                                mem[_30261 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30261 + s + 574] = mem[_30261 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30088), address(_31401)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30261 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30261 + 241] = address(_30088)
                                                mem[_30261 + 189] = 40
                                                mem[_30261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 294] = stor1
                                                mem[_30261 + 314] = sha3(mem[_30261 + 221 len 20], address(_30088))
                                                mem[_30261 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30261 + 261] = 85
                                                _33176 = sha3(0, stor1, sha3(mem[_30261 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30261 + 378] = 0
                                                mem[64] = _30261 + 410
                                                mem[_30261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 414] = 0
                                                mem[_30261 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30261 + 478] = address(_33176)
                                                mem[_30261 + 510] = 128
                                                mem[_30261 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30261 + s + 574] = mem[_30261 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_33176), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30261 + 189] = 0
                                            mem[64] = _30261 + 221
                                            mem[_30261 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30261 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30261 + 257] = 0
                                            mem[_30261 + 289] = this.address
                                            mem[_30261 + 321] = 128
                                            mem[_30261 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30261 + s + 385] = mem[_30261 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31402 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30261 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30261 + 221] = address(_30088)
                                                mem[_30261 + 241] = address(_31402)
                                                mem[_30261 + 189] = 40
                                                mem[_30261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 294] = stor1
                                                mem[_30261 + 314] = sha3(address(_30088), address(_31402))
                                                mem[_30261 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30261 + 261] = 85
                                                mem[_30261 + 378] = 0
                                                mem[64] = _30261 + 410
                                                mem[_30261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30261 + 446] = 0
                                                mem[_30261 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31402)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30261 + 510] = 128
                                                mem[_30261 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30261 + s + 574] = mem[_30261 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30088), address(_31402)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30261 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30261 + 241] = address(_30088)
                                                mem[_30261 + 189] = 40
                                                mem[_30261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 294] = stor1
                                                mem[_30261 + 314] = sha3(mem[_30261 + 221 len 20], address(_30088))
                                                mem[_30261 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30261 + 261] = 85
                                                _33192 = sha3(0, stor1, sha3(mem[_30261 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30261 + 378] = 0
                                                mem[64] = _30261 + 410
                                                mem[_30261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30261 + 446] = 0
                                                mem[_30261 + 478] = address(_33192)
                                                mem[_30261 + 510] = 128
                                                mem[_30261 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30261 + s + 574] = mem[_30261 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_33192), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30074) == address(_30088):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30261 + 189] = 0
                                            mem[64] = _30261 + 221
                                            mem[_30261 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30261 + 225] = 0
                                            mem[_30261 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30261 + 289] = this.address
                                            mem[_30261 + 321] = 128
                                            mem[_30261 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30261 + s + 385] = mem[_30261 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31683 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30261 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30261 + 221] = address(_30088)
                                                mem[_30261 + 241] = address(_31683)
                                                mem[_30261 + 189] = 40
                                                mem[_30261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 294] = stor1
                                                mem[_30261 + 314] = sha3(address(_30088), address(_31683))
                                                mem[_30261 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30261 + 261] = 85
                                                mem[_30261 + 378] = 0
                                                mem[64] = _30261 + 410
                                                mem[_30261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 414] = 0
                                                mem[_30261 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30261 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31683)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30261 + 510] = 128
                                                mem[_30261 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30261 + s + 574] = mem[_30261 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30088), address(_31683)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30261 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30261 + 241] = address(_30088)
                                                mem[_30261 + 189] = 40
                                                mem[_30261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 294] = stor1
                                                mem[_30261 + 314] = sha3(mem[_30261 + 221 len 20], address(_30088))
                                                mem[_30261 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30261 + 261] = 85
                                                _34628 = sha3(0, stor1, sha3(mem[_30261 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30261 + 378] = 0
                                                mem[64] = _30261 + 410
                                                mem[_30261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 414] = 0
                                                mem[_30261 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30261 + 478] = address(_34628)
                                                mem[_30261 + 510] = 128
                                                mem[_30261 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30261 + s + 574] = mem[_30261 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_34628), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30261 + 189] = 0
                                            mem[64] = _30261 + 221
                                            mem[_30261 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30261 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30261 + 257] = 0
                                            mem[_30261 + 289] = this.address
                                            mem[_30261 + 321] = 128
                                            mem[_30261 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30261 + s + 385] = mem[_30261 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31684 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30261 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30261 + 221] = address(_30088)
                                                mem[_30261 + 241] = address(_31684)
                                                mem[_30261 + 189] = 40
                                                mem[_30261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 294] = stor1
                                                mem[_30261 + 314] = sha3(address(_30088), address(_31684))
                                                mem[_30261 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30261 + 261] = 85
                                                mem[_30261 + 378] = 0
                                                mem[64] = _30261 + 410
                                                mem[_30261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30261 + 446] = 0
                                                mem[_30261 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31684)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30261 + 510] = 128
                                                mem[_30261 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30261 + s + 574] = mem[_30261 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30088), address(_31684)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30261 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30261 + 241] = address(_30088)
                                                mem[_30261 + 189] = 40
                                                mem[_30261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 294] = stor1
                                                mem[_30261 + 314] = sha3(mem[_30261 + 221 len 20], address(_30088))
                                                mem[_30261 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30261 + 261] = 85
                                                _34644 = sha3(0, stor1, sha3(mem[_30261 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30261 + 378] = 0
                                                mem[64] = _30261 + 410
                                                mem[_30261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30261 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30261 + 446] = 0
                                                mem[_30261 + 478] = address(_34644)
                                                mem[_30261 + 510] = 128
                                                mem[_30261 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30261 + s + 574] = mem[_30261 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30264, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_34644), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30269 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                            mem[mem[64] + 52] = address(_30074)
                            _30270 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30272 = sha3(mem[_30270 + 32 len mem[_30270]])
                            mem[_30269 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30269 + 105] = stor1
                            mem[_30269 + 125] = _30272
                            mem[_30269 + 157] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                            mem[_30269 + 72] = 85
                            require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                            staticcall address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).getReserves() with:
                                    gas gas_remaining wei
                            mem[_30269 + 189 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            mem[_30269 + 193] = address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            require ext_code.size(address(_30074))
                            staticcall address(_30074).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            mem[_30269 + 189] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if address(_30074) == address(_30088):
                                if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30269 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30269 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30269 + 295 len 26]
                                if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30074) == address(_30088):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30269 + 189] = 0
                                            mem[64] = _30269 + 221
                                            mem[_30269 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30269 + 225] = 0
                                            mem[_30269 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30269 + 289] = this.address
                                            mem[_30269 + 321] = 128
                                            mem[_30269 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30269 + s + 385] = mem[_30269 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31405 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30269 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30269 + 221] = address(_30088)
                                                mem[_30269 + 241] = address(_31405)
                                                mem[_30269 + 189] = 40
                                                mem[_30269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 294] = stor1
                                                mem[_30269 + 314] = sha3(address(_30088), address(_31405))
                                                mem[_30269 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30269 + 261] = 85
                                                mem[_30269 + 378] = 0
                                                mem[64] = _30269 + 410
                                                mem[_30269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 414] = 0
                                                mem[_30269 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30269 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31405)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30269 + 510] = 128
                                                mem[_30269 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30269 + s + 574] = mem[_30269 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30088), address(_31405)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30269 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30269 + 241] = address(_30088)
                                                mem[_30269 + 189] = 40
                                                mem[_30269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 294] = stor1
                                                mem[_30269 + 314] = sha3(mem[_30269 + 221 len 20], address(_30088))
                                                mem[_30269 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30269 + 261] = 85
                                                _33212 = sha3(0, stor1, sha3(mem[_30269 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30269 + 378] = 0
                                                mem[64] = _30269 + 410
                                                mem[_30269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 414] = 0
                                                mem[_30269 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30269 + 478] = address(_33212)
                                                mem[_30269 + 510] = 128
                                                mem[_30269 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30269 + s + 574] = mem[_30269 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_33212), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30269 + 189] = 0
                                            mem[64] = _30269 + 221
                                            mem[_30269 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30269 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30269 + 257] = 0
                                            mem[_30269 + 289] = this.address
                                            mem[_30269 + 321] = 128
                                            mem[_30269 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30269 + s + 385] = mem[_30269 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31406 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30269 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30269 + 221] = address(_30088)
                                                mem[_30269 + 241] = address(_31406)
                                                mem[_30269 + 189] = 40
                                                mem[_30269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 294] = stor1
                                                mem[_30269 + 314] = sha3(address(_30088), address(_31406))
                                                mem[_30269 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30269 + 261] = 85
                                                mem[_30269 + 378] = 0
                                                mem[64] = _30269 + 410
                                                mem[_30269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30269 + 446] = 0
                                                mem[_30269 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31406)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30269 + 510] = 128
                                                mem[_30269 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30269 + s + 574] = mem[_30269 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30088), address(_31406)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30269 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30269 + 241] = address(_30088)
                                                mem[_30269 + 189] = 40
                                                mem[_30269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 294] = stor1
                                                mem[_30269 + 314] = sha3(mem[_30269 + 221 len 20], address(_30088))
                                                mem[_30269 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30269 + 261] = 85
                                                _33228 = sha3(0, stor1, sha3(mem[_30269 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30269 + 378] = 0
                                                mem[64] = _30269 + 410
                                                mem[_30269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30269 + 446] = 0
                                                mem[_30269 + 478] = address(_33228)
                                                mem[_30269 + 510] = 128
                                                mem[_30269 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30269 + s + 574] = mem[_30269 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_33228), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30074) == address(_30088):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30269 + 189] = 0
                                            mem[64] = _30269 + 221
                                            mem[_30269 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30269 + 225] = 0
                                            mem[_30269 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30269 + 289] = this.address
                                            mem[_30269 + 321] = 128
                                            mem[_30269 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30269 + s + 385] = mem[_30269 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31691 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30269 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30269 + 221] = address(_30088)
                                                mem[_30269 + 241] = address(_31691)
                                                mem[_30269 + 189] = 40
                                                mem[_30269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 294] = stor1
                                                mem[_30269 + 314] = sha3(address(_30088), address(_31691))
                                                mem[_30269 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30269 + 261] = 85
                                                mem[_30269 + 378] = 0
                                                mem[64] = _30269 + 410
                                                mem[_30269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 414] = 0
                                                mem[_30269 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30269 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31691)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30269 + 510] = 128
                                                mem[_30269 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30269 + s + 574] = mem[_30269 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30088), address(_31691)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30269 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30269 + 241] = address(_30088)
                                                mem[_30269 + 189] = 40
                                                mem[_30269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 294] = stor1
                                                mem[_30269 + 314] = sha3(mem[_30269 + 221 len 20], address(_30088))
                                                mem[_30269 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30269 + 261] = 85
                                                _34660 = sha3(0, stor1, sha3(mem[_30269 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30269 + 378] = 0
                                                mem[64] = _30269 + 410
                                                mem[_30269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 414] = 0
                                                mem[_30269 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30269 + 478] = address(_34660)
                                                mem[_30269 + 510] = 128
                                                mem[_30269 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30269 + s + 574] = mem[_30269 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_34660), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30269 + 189] = 0
                                            mem[64] = _30269 + 221
                                            mem[_30269 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30269 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30269 + 257] = 0
                                            mem[_30269 + 289] = this.address
                                            mem[_30269 + 321] = 128
                                            mem[_30269 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30269 + s + 385] = mem[_30269 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31692 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30269 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30269 + 221] = address(_30088)
                                                mem[_30269 + 241] = address(_31692)
                                                mem[_30269 + 189] = 40
                                                mem[_30269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 294] = stor1
                                                mem[_30269 + 314] = sha3(address(_30088), address(_31692))
                                                mem[_30269 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30269 + 261] = 85
                                                mem[_30269 + 378] = 0
                                                mem[64] = _30269 + 410
                                                mem[_30269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30269 + 446] = 0
                                                mem[_30269 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31692)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30269 + 510] = 128
                                                mem[_30269 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30269 + s + 574] = mem[_30269 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30088), address(_31692)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30269 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30269 + 241] = address(_30088)
                                                mem[_30269 + 189] = 40
                                                mem[_30269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 294] = stor1
                                                mem[_30269 + 314] = sha3(mem[_30269 + 221 len 20], address(_30088))
                                                mem[_30269 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30269 + 261] = 85
                                                _34676 = sha3(0, stor1, sha3(mem[_30269 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30269 + 378] = 0
                                                mem[64] = _30269 + 410
                                                mem[_30269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30269 + 446] = 0
                                                mem[_30269 + 478] = address(_34676)
                                                mem[_30269 + 510] = 128
                                                mem[_30269 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30269 + s + 574] = mem[_30269 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_34676), 128, 0
                            else:
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30269 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30269 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30269 + 295 len 26]
                                if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30074) == address(_30088):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30269 + 189] = 0
                                            mem[64] = _30269 + 221
                                            mem[_30269 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30269 + 225] = 0
                                            mem[_30269 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30269 + 289] = this.address
                                            mem[_30269 + 321] = 128
                                            mem[_30269 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30269 + s + 385] = mem[_30269 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31409 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30269 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30269 + 221] = address(_30088)
                                                mem[_30269 + 241] = address(_31409)
                                                mem[_30269 + 189] = 40
                                                mem[_30269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 294] = stor1
                                                mem[_30269 + 314] = sha3(address(_30088), address(_31409))
                                                mem[_30269 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30269 + 261] = 85
                                                mem[_30269 + 378] = 0
                                                mem[64] = _30269 + 410
                                                mem[_30269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 414] = 0
                                                mem[_30269 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30269 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31409)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30269 + 510] = 128
                                                mem[_30269 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30269 + s + 574] = mem[_30269 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30088), address(_31409)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30269 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30269 + 241] = address(_30088)
                                                mem[_30269 + 189] = 40
                                                mem[_30269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 294] = stor1
                                                mem[_30269 + 314] = sha3(mem[_30269 + 221 len 20], address(_30088))
                                                mem[_30269 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30269 + 261] = 85
                                                _33248 = sha3(0, stor1, sha3(mem[_30269 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30269 + 378] = 0
                                                mem[64] = _30269 + 410
                                                mem[_30269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 414] = 0
                                                mem[_30269 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30269 + 478] = address(_33248)
                                                mem[_30269 + 510] = 128
                                                mem[_30269 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30269 + s + 574] = mem[_30269 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_33248), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30269 + 189] = 0
                                            mem[64] = _30269 + 221
                                            mem[_30269 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30269 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30269 + 257] = 0
                                            mem[_30269 + 289] = this.address
                                            mem[_30269 + 321] = 128
                                            mem[_30269 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30269 + s + 385] = mem[_30269 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31410 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30269 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30269 + 221] = address(_30088)
                                                mem[_30269 + 241] = address(_31410)
                                                mem[_30269 + 189] = 40
                                                mem[_30269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 294] = stor1
                                                mem[_30269 + 314] = sha3(address(_30088), address(_31410))
                                                mem[_30269 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30269 + 261] = 85
                                                mem[_30269 + 378] = 0
                                                mem[64] = _30269 + 410
                                                mem[_30269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30269 + 446] = 0
                                                mem[_30269 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31410)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30269 + 510] = 128
                                                mem[_30269 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30269 + s + 574] = mem[_30269 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30088), address(_31410)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30269 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30269 + 241] = address(_30088)
                                                mem[_30269 + 189] = 40
                                                mem[_30269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 294] = stor1
                                                mem[_30269 + 314] = sha3(mem[_30269 + 221 len 20], address(_30088))
                                                mem[_30269 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30269 + 261] = 85
                                                _33264 = sha3(0, stor1, sha3(mem[_30269 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30269 + 378] = 0
                                                mem[64] = _30269 + 410
                                                mem[_30269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30269 + 446] = 0
                                                mem[_30269 + 478] = address(_33264)
                                                mem[_30269 + 510] = 128
                                                mem[_30269 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30269 + s + 574] = mem[_30269 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_33264), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30074) == address(_30088):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30269 + 189] = 0
                                            mem[64] = _30269 + 221
                                            mem[_30269 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30269 + 225] = 0
                                            mem[_30269 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30269 + 289] = this.address
                                            mem[_30269 + 321] = 128
                                            mem[_30269 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30269 + s + 385] = mem[_30269 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31699 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30269 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30269 + 221] = address(_30088)
                                                mem[_30269 + 241] = address(_31699)
                                                mem[_30269 + 189] = 40
                                                mem[_30269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 294] = stor1
                                                mem[_30269 + 314] = sha3(address(_30088), address(_31699))
                                                mem[_30269 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30269 + 261] = 85
                                                mem[_30269 + 378] = 0
                                                mem[64] = _30269 + 410
                                                mem[_30269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 414] = 0
                                                mem[_30269 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30269 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31699)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30269 + 510] = 128
                                                mem[_30269 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30269 + s + 574] = mem[_30269 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30088), address(_31699)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30269 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30269 + 241] = address(_30088)
                                                mem[_30269 + 189] = 40
                                                mem[_30269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 294] = stor1
                                                mem[_30269 + 314] = sha3(mem[_30269 + 221 len 20], address(_30088))
                                                mem[_30269 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30269 + 261] = 85
                                                _34692 = sha3(0, stor1, sha3(mem[_30269 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30269 + 378] = 0
                                                mem[64] = _30269 + 410
                                                mem[_30269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 414] = 0
                                                mem[_30269 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30269 + 478] = address(_34692)
                                                mem[_30269 + 510] = 128
                                                mem[_30269 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30269 + s + 574] = mem[_30269 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_34692), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30269 + 189] = 0
                                            mem[64] = _30269 + 221
                                            mem[_30269 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30269 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30269 + 257] = 0
                                            mem[_30269 + 289] = this.address
                                            mem[_30269 + 321] = 128
                                            mem[_30269 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30269 + s + 385] = mem[_30269 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31700 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30088) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30269 + 292 len 29]
                                            if address(_30088) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30088):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30269 + 221] = address(_30088)
                                                mem[_30269 + 241] = address(_31700)
                                                mem[_30269 + 189] = 40
                                                mem[_30269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 294] = stor1
                                                mem[_30269 + 314] = sha3(address(_30088), address(_31700))
                                                mem[_30269 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30269 + 261] = 85
                                                mem[_30269 + 378] = 0
                                                mem[64] = _30269 + 410
                                                mem[_30269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30269 + 446] = 0
                                                mem[_30269 + 478] = address(sha3(0, stor1, sha3(address(_30088), address(_31700)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30269 + 510] = 128
                                                mem[_30269 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30269 + s + 574] = mem[_30269 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30088), address(_31700)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30269 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30269 + 241] = address(_30088)
                                                mem[_30269 + 189] = 40
                                                mem[_30269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 294] = stor1
                                                mem[_30269 + 314] = sha3(mem[_30269 + 221 len 20], address(_30088))
                                                mem[_30269 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30269 + 261] = 85
                                                _34708 = sha3(0, stor1, sha3(mem[_30269 + 221 len 20], address(_30088)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30269 + 378] = 0
                                                mem[64] = _30269 + 410
                                                mem[_30269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30269 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30269 + 446] = 0
                                                mem[_30269 + 478] = address(_34708)
                                                mem[_30269 + 510] = 128
                                                mem[_30269 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30269 + s + 574] = mem[_30269 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30272, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_34708), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
            else:
                require arg1.length >= 32
                if not mem[128]:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
                idx = 0
                while idx < 1:
                    require idx < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                    _30077 = mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                    require idx + 1 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                    _30092 = mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                    if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] == mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] < mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                        if not mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] == mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] < mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            if not mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30277 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                            mem[mem[64] + 52] = address(_30092)
                            _30278 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30280 = sha3(mem[_30278 + 32 len mem[_30278]])
                            mem[_30277 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30277 + 105] = stor1
                            mem[_30277 + 125] = _30280
                            mem[_30277 + 157] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                            mem[_30277 + 72] = 85
                            require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                            staticcall address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).getReserves() with:
                                    gas gas_remaining wei
                            mem[_30277 + 189 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            mem[_30277 + 193] = address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            require ext_code.size(address(_30077))
                            staticcall address(_30077).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            mem[_30277 + 189] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if address(_30077) == address(_30077):
                                if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30277 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30277 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30277 + 295 len 26]
                                if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30077) == address(_30077):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30277 + 189] = 0
                                            mem[64] = _30277 + 221
                                            mem[_30277 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30277 + 225] = 0
                                            mem[_30277 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30277 + 289] = this.address
                                            mem[_30277 + 321] = 128
                                            mem[_30277 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30277 + s + 385] = mem[_30277 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31413 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30277 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30277 + 221] = address(_30092)
                                                mem[_30277 + 241] = address(_31413)
                                                mem[_30277 + 189] = 40
                                                mem[_30277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 294] = stor1
                                                mem[_30277 + 314] = sha3(address(_30092), address(_31413))
                                                mem[_30277 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30277 + 261] = 85
                                                mem[_30277 + 378] = 0
                                                mem[64] = _30277 + 410
                                                mem[_30277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 414] = 0
                                                mem[_30277 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30277 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31413)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30277 + 510] = 128
                                                mem[_30277 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30277 + s + 574] = mem[_30277 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30092), address(_31413)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30277 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30277 + 241] = address(_30092)
                                                mem[_30277 + 189] = 40
                                                mem[_30277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 294] = stor1
                                                mem[_30277 + 314] = sha3(mem[_30277 + 221 len 20], address(_30092))
                                                mem[_30277 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30277 + 261] = 85
                                                _33284 = sha3(0, stor1, sha3(mem[_30277 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30277 + 378] = 0
                                                mem[64] = _30277 + 410
                                                mem[_30277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 414] = 0
                                                mem[_30277 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30277 + 478] = address(_33284)
                                                mem[_30277 + 510] = 128
                                                mem[_30277 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30277 + s + 574] = mem[_30277 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_33284), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30277 + 189] = 0
                                            mem[64] = _30277 + 221
                                            mem[_30277 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30277 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30277 + 257] = 0
                                            mem[_30277 + 289] = this.address
                                            mem[_30277 + 321] = 128
                                            mem[_30277 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30277 + s + 385] = mem[_30277 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31414 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30277 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30277 + 221] = address(_30092)
                                                mem[_30277 + 241] = address(_31414)
                                                mem[_30277 + 189] = 40
                                                mem[_30277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 294] = stor1
                                                mem[_30277 + 314] = sha3(address(_30092), address(_31414))
                                                mem[_30277 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30277 + 261] = 85
                                                mem[_30277 + 378] = 0
                                                mem[64] = _30277 + 410
                                                mem[_30277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30277 + 446] = 0
                                                mem[_30277 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31414)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30277 + 510] = 128
                                                mem[_30277 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30277 + s + 574] = mem[_30277 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30092), address(_31414)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30277 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30277 + 241] = address(_30092)
                                                mem[_30277 + 189] = 40
                                                mem[_30277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 294] = stor1
                                                mem[_30277 + 314] = sha3(mem[_30277 + 221 len 20], address(_30092))
                                                mem[_30277 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30277 + 261] = 85
                                                _33300 = sha3(0, stor1, sha3(mem[_30277 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30277 + 378] = 0
                                                mem[64] = _30277 + 410
                                                mem[_30277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30277 + 446] = 0
                                                mem[_30277 + 478] = address(_33300)
                                                mem[_30277 + 510] = 128
                                                mem[_30277 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30277 + s + 574] = mem[_30277 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_33300), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30077) == address(_30077):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30277 + 189] = 0
                                            mem[64] = _30277 + 221
                                            mem[_30277 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30277 + 225] = 0
                                            mem[_30277 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30277 + 289] = this.address
                                            mem[_30277 + 321] = 128
                                            mem[_30277 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30277 + s + 385] = mem[_30277 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31707 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30277 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30277 + 221] = address(_30092)
                                                mem[_30277 + 241] = address(_31707)
                                                mem[_30277 + 189] = 40
                                                mem[_30277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 294] = stor1
                                                mem[_30277 + 314] = sha3(address(_30092), address(_31707))
                                                mem[_30277 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30277 + 261] = 85
                                                mem[_30277 + 378] = 0
                                                mem[64] = _30277 + 410
                                                mem[_30277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 414] = 0
                                                mem[_30277 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30277 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31707)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30277 + 510] = 128
                                                mem[_30277 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30277 + s + 574] = mem[_30277 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30092), address(_31707)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30277 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30277 + 241] = address(_30092)
                                                mem[_30277 + 189] = 40
                                                mem[_30277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 294] = stor1
                                                mem[_30277 + 314] = sha3(mem[_30277 + 221 len 20], address(_30092))
                                                mem[_30277 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30277 + 261] = 85
                                                _34724 = sha3(0, stor1, sha3(mem[_30277 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30277 + 378] = 0
                                                mem[64] = _30277 + 410
                                                mem[_30277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 414] = 0
                                                mem[_30277 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30277 + 478] = address(_34724)
                                                mem[_30277 + 510] = 128
                                                mem[_30277 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30277 + s + 574] = mem[_30277 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_34724), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30277 + 189] = 0
                                            mem[64] = _30277 + 221
                                            mem[_30277 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30277 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30277 + 257] = 0
                                            mem[_30277 + 289] = this.address
                                            mem[_30277 + 321] = 128
                                            mem[_30277 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30277 + s + 385] = mem[_30277 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31708 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30277 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30277 + 221] = address(_30092)
                                                mem[_30277 + 241] = address(_31708)
                                                mem[_30277 + 189] = 40
                                                mem[_30277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 294] = stor1
                                                mem[_30277 + 314] = sha3(address(_30092), address(_31708))
                                                mem[_30277 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30277 + 261] = 85
                                                mem[_30277 + 378] = 0
                                                mem[64] = _30277 + 410
                                                mem[_30277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30277 + 446] = 0
                                                mem[_30277 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31708)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30277 + 510] = 128
                                                mem[_30277 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30277 + s + 574] = mem[_30277 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30092), address(_31708)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30277 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30277 + 241] = address(_30092)
                                                mem[_30277 + 189] = 40
                                                mem[_30277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 294] = stor1
                                                mem[_30277 + 314] = sha3(mem[_30277 + 221 len 20], address(_30092))
                                                mem[_30277 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30277 + 261] = 85
                                                _34740 = sha3(0, stor1, sha3(mem[_30277 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30277 + 378] = 0
                                                mem[64] = _30277 + 410
                                                mem[_30277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30277 + 446] = 0
                                                mem[_30277 + 478] = address(_34740)
                                                mem[_30277 + 510] = 128
                                                mem[_30277 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30277 + s + 574] = mem[_30277 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_34740), 128, 0
                            else:
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30277 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30277 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30277 + 295 len 26]
                                if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30077) == address(_30077):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30277 + 189] = 0
                                            mem[64] = _30277 + 221
                                            mem[_30277 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30277 + 225] = 0
                                            mem[_30277 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30277 + 289] = this.address
                                            mem[_30277 + 321] = 128
                                            mem[_30277 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30277 + s + 385] = mem[_30277 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31417 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30277 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30277 + 221] = address(_30092)
                                                mem[_30277 + 241] = address(_31417)
                                                mem[_30277 + 189] = 40
                                                mem[_30277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 294] = stor1
                                                mem[_30277 + 314] = sha3(address(_30092), address(_31417))
                                                mem[_30277 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30277 + 261] = 85
                                                mem[_30277 + 378] = 0
                                                mem[64] = _30277 + 410
                                                mem[_30277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 414] = 0
                                                mem[_30277 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30277 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31417)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30277 + 510] = 128
                                                mem[_30277 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30277 + s + 574] = mem[_30277 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30092), address(_31417)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30277 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30277 + 241] = address(_30092)
                                                mem[_30277 + 189] = 40
                                                mem[_30277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 294] = stor1
                                                mem[_30277 + 314] = sha3(mem[_30277 + 221 len 20], address(_30092))
                                                mem[_30277 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30277 + 261] = 85
                                                _33320 = sha3(0, stor1, sha3(mem[_30277 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30277 + 378] = 0
                                                mem[64] = _30277 + 410
                                                mem[_30277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 414] = 0
                                                mem[_30277 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30277 + 478] = address(_33320)
                                                mem[_30277 + 510] = 128
                                                mem[_30277 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30277 + s + 574] = mem[_30277 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_33320), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30277 + 189] = 0
                                            mem[64] = _30277 + 221
                                            mem[_30277 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30277 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30277 + 257] = 0
                                            mem[_30277 + 289] = this.address
                                            mem[_30277 + 321] = 128
                                            mem[_30277 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30277 + s + 385] = mem[_30277 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31418 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30277 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30277 + 221] = address(_30092)
                                                mem[_30277 + 241] = address(_31418)
                                                mem[_30277 + 189] = 40
                                                mem[_30277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 294] = stor1
                                                mem[_30277 + 314] = sha3(address(_30092), address(_31418))
                                                mem[_30277 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30277 + 261] = 85
                                                mem[_30277 + 378] = 0
                                                mem[64] = _30277 + 410
                                                mem[_30277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30277 + 446] = 0
                                                mem[_30277 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31418)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30277 + 510] = 128
                                                mem[_30277 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30277 + s + 574] = mem[_30277 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30092), address(_31418)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30277 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30277 + 241] = address(_30092)
                                                mem[_30277 + 189] = 40
                                                mem[_30277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 294] = stor1
                                                mem[_30277 + 314] = sha3(mem[_30277 + 221 len 20], address(_30092))
                                                mem[_30277 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30277 + 261] = 85
                                                _33336 = sha3(0, stor1, sha3(mem[_30277 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30277 + 378] = 0
                                                mem[64] = _30277 + 410
                                                mem[_30277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30277 + 446] = 0
                                                mem[_30277 + 478] = address(_33336)
                                                mem[_30277 + 510] = 128
                                                mem[_30277 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30277 + s + 574] = mem[_30277 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_33336), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30077) == address(_30077):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30277 + 189] = 0
                                            mem[64] = _30277 + 221
                                            mem[_30277 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30277 + 225] = 0
                                            mem[_30277 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30277 + 289] = this.address
                                            mem[_30277 + 321] = 128
                                            mem[_30277 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30277 + s + 385] = mem[_30277 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31715 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30277 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30277 + 221] = address(_30092)
                                                mem[_30277 + 241] = address(_31715)
                                                mem[_30277 + 189] = 40
                                                mem[_30277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 294] = stor1
                                                mem[_30277 + 314] = sha3(address(_30092), address(_31715))
                                                mem[_30277 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30277 + 261] = 85
                                                mem[_30277 + 378] = 0
                                                mem[64] = _30277 + 410
                                                mem[_30277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 414] = 0
                                                mem[_30277 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30277 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31715)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30277 + 510] = 128
                                                mem[_30277 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30277 + s + 574] = mem[_30277 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30092), address(_31715)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30277 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30277 + 241] = address(_30092)
                                                mem[_30277 + 189] = 40
                                                mem[_30277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 294] = stor1
                                                mem[_30277 + 314] = sha3(mem[_30277 + 221 len 20], address(_30092))
                                                mem[_30277 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30277 + 261] = 85
                                                _34756 = sha3(0, stor1, sha3(mem[_30277 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30277 + 378] = 0
                                                mem[64] = _30277 + 410
                                                mem[_30277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 414] = 0
                                                mem[_30277 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30277 + 478] = address(_34756)
                                                mem[_30277 + 510] = 128
                                                mem[_30277 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30277 + s + 574] = mem[_30277 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_34756), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30277 + 189] = 0
                                            mem[64] = _30277 + 221
                                            mem[_30277 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30277 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30277 + 257] = 0
                                            mem[_30277 + 289] = this.address
                                            mem[_30277 + 321] = 128
                                            mem[_30277 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30277 + s + 385] = mem[_30277 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31716 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30277 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30277 + 221] = address(_30092)
                                                mem[_30277 + 241] = address(_31716)
                                                mem[_30277 + 189] = 40
                                                mem[_30277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 294] = stor1
                                                mem[_30277 + 314] = sha3(address(_30092), address(_31716))
                                                mem[_30277 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30277 + 261] = 85
                                                mem[_30277 + 378] = 0
                                                mem[64] = _30277 + 410
                                                mem[_30277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30277 + 446] = 0
                                                mem[_30277 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31716)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30277 + 510] = 128
                                                mem[_30277 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30277 + s + 574] = mem[_30277 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30092), address(_31716)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30277 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30277 + 241] = address(_30092)
                                                mem[_30277 + 189] = 40
                                                mem[_30277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 294] = stor1
                                                mem[_30277 + 314] = sha3(mem[_30277 + 221 len 20], address(_30092))
                                                mem[_30277 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30277 + 261] = 85
                                                _34772 = sha3(0, stor1, sha3(mem[_30277 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30277 + 378] = 0
                                                mem[64] = _30277 + 410
                                                mem[_30277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30277 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30277 + 446] = 0
                                                mem[_30277 + 478] = address(_34772)
                                                mem[_30277 + 510] = 128
                                                mem[_30277 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30277 + s + 574] = mem[_30277 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30280, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_34772), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30285 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                            mem[mem[64] + 52] = address(_30077)
                            _30286 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30288 = sha3(mem[_30286 + 32 len mem[_30286]])
                            mem[_30285 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30285 + 105] = stor1
                            mem[_30285 + 125] = _30288
                            mem[_30285 + 157] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                            mem[_30285 + 72] = 85
                            require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                            staticcall address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).getReserves() with:
                                    gas gas_remaining wei
                            mem[_30285 + 189 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            mem[_30285 + 193] = address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            require ext_code.size(address(_30077))
                            staticcall address(_30077).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            mem[_30285 + 189] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if address(_30077) == address(_30077):
                                if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30285 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30285 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30285 + 295 len 26]
                                if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30077) == address(_30077):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30285 + 189] = 0
                                            mem[64] = _30285 + 221
                                            mem[_30285 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30285 + 225] = 0
                                            mem[_30285 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30285 + 289] = this.address
                                            mem[_30285 + 321] = 128
                                            mem[_30285 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30285 + s + 385] = mem[_30285 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31421 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30285 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30285 + 221] = address(_30092)
                                                mem[_30285 + 241] = address(_31421)
                                                mem[_30285 + 189] = 40
                                                mem[_30285 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 294] = stor1
                                                mem[_30285 + 314] = sha3(address(_30092), address(_31421))
                                                mem[_30285 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30285 + 261] = 85
                                                mem[_30285 + 378] = 0
                                                mem[64] = _30285 + 410
                                                mem[_30285 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 414] = 0
                                                mem[_30285 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30285 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31421)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30285 + 510] = 128
                                                mem[_30285 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30285 + s + 574] = mem[_30285 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30092), address(_31421)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30285 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30285 + 241] = address(_30092)
                                                mem[_30285 + 189] = 40
                                                mem[_30285 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 294] = stor1
                                                mem[_30285 + 314] = sha3(mem[_30285 + 221 len 20], address(_30092))
                                                mem[_30285 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30285 + 261] = 85
                                                _33356 = sha3(0, stor1, sha3(mem[_30285 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30285 + 378] = 0
                                                mem[64] = _30285 + 410
                                                mem[_30285 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 414] = 0
                                                mem[_30285 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30285 + 478] = address(_33356)
                                                mem[_30285 + 510] = 128
                                                mem[_30285 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30285 + s + 574] = mem[_30285 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_33356), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30285 + 189] = 0
                                            mem[64] = _30285 + 221
                                            mem[_30285 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30285 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30285 + 257] = 0
                                            mem[_30285 + 289] = this.address
                                            mem[_30285 + 321] = 128
                                            mem[_30285 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30285 + s + 385] = mem[_30285 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31422 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30285 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30285 + 221] = address(_30092)
                                                mem[_30285 + 241] = address(_31422)
                                                mem[_30285 + 189] = 40
                                                mem[_30285 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 294] = stor1
                                                mem[_30285 + 314] = sha3(address(_30092), address(_31422))
                                                mem[_30285 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30285 + 261] = 85
                                                mem[_30285 + 378] = 0
                                                mem[64] = _30285 + 410
                                                mem[_30285 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30285 + 446] = 0
                                                mem[_30285 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31422)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30285 + 510] = 128
                                                mem[_30285 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30285 + s + 574] = mem[_30285 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30092), address(_31422)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30285 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30285 + 241] = address(_30092)
                                                mem[_30285 + 189] = 40
                                                mem[_30285 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 294] = stor1
                                                mem[_30285 + 314] = sha3(mem[_30285 + 221 len 20], address(_30092))
                                                mem[_30285 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30285 + 261] = 85
                                                _33372 = sha3(0, stor1, sha3(mem[_30285 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30285 + 378] = 0
                                                mem[64] = _30285 + 410
                                                mem[_30285 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30285 + 446] = 0
                                                mem[_30285 + 478] = address(_33372)
                                                mem[_30285 + 510] = 128
                                                mem[_30285 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30285 + s + 574] = mem[_30285 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_33372), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30077) == address(_30077):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30285 + 189] = 0
                                            mem[64] = _30285 + 221
                                            mem[_30285 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30285 + 225] = 0
                                            mem[_30285 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30285 + 289] = this.address
                                            mem[_30285 + 321] = 128
                                            mem[_30285 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30285 + s + 385] = mem[_30285 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31723 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30285 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30285 + 221] = address(_30092)
                                                mem[_30285 + 241] = address(_31723)
                                                mem[_30285 + 189] = 40
                                                mem[_30285 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 294] = stor1
                                                mem[_30285 + 314] = sha3(address(_30092), address(_31723))
                                                mem[_30285 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30285 + 261] = 85
                                                mem[_30285 + 378] = 0
                                                mem[64] = _30285 + 410
                                                mem[_30285 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 414] = 0
                                                mem[_30285 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30285 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31723)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30285 + 510] = 128
                                                mem[_30285 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30285 + s + 574] = mem[_30285 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30092), address(_31723)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30285 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30285 + 241] = address(_30092)
                                                mem[_30285 + 189] = 40
                                                mem[_30285 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 294] = stor1
                                                mem[_30285 + 314] = sha3(mem[_30285 + 221 len 20], address(_30092))
                                                mem[_30285 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30285 + 261] = 85
                                                _34788 = sha3(0, stor1, sha3(mem[_30285 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30285 + 378] = 0
                                                mem[64] = _30285 + 410
                                                mem[_30285 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 414] = 0
                                                mem[_30285 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30285 + 478] = address(_34788)
                                                mem[_30285 + 510] = 128
                                                mem[_30285 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30285 + s + 574] = mem[_30285 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_34788), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30285 + 189] = 0
                                            mem[64] = _30285 + 221
                                            mem[_30285 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30285 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30285 + 257] = 0
                                            mem[_30285 + 289] = this.address
                                            mem[_30285 + 321] = 128
                                            mem[_30285 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30285 + s + 385] = mem[_30285 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31724 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30285 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30285 + 221] = address(_30092)
                                                mem[_30285 + 241] = address(_31724)
                                                mem[_30285 + 189] = 40
                                                mem[_30285 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 294] = stor1
                                                mem[_30285 + 314] = sha3(address(_30092), address(_31724))
                                                mem[_30285 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30285 + 261] = 85
                                                mem[_30285 + 378] = 0
                                                mem[64] = _30285 + 410
                                                mem[_30285 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30285 + 446] = 0
                                                mem[_30285 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31724)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30285 + 510] = 128
                                                mem[_30285 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30285 + s + 574] = mem[_30285 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30092), address(_31724)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30285 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30285 + 241] = address(_30092)
                                                mem[_30285 + 189] = 40
                                                mem[_30285 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 294] = stor1
                                                mem[_30285 + 314] = sha3(mem[_30285 + 221 len 20], address(_30092))
                                                mem[_30285 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30285 + 261] = 85
                                                _34804 = sha3(0, stor1, sha3(mem[_30285 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30285 + 378] = 0
                                                mem[64] = _30285 + 410
                                                mem[_30285 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30285 + 446] = 0
                                                mem[_30285 + 478] = address(_34804)
                                                mem[_30285 + 510] = 128
                                                mem[_30285 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30285 + s + 574] = mem[_30285 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_34804), 128, 0
                            else:
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30285 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30285 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30285 + 295 len 26]
                                if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30077) == address(_30077):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30285 + 189] = 0
                                            mem[64] = _30285 + 221
                                            mem[_30285 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30285 + 225] = 0
                                            mem[_30285 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30285 + 289] = this.address
                                            mem[_30285 + 321] = 128
                                            mem[_30285 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30285 + s + 385] = mem[_30285 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31425 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30285 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30285 + 221] = address(_30092)
                                                mem[_30285 + 241] = address(_31425)
                                                mem[_30285 + 189] = 40
                                                mem[_30285 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 294] = stor1
                                                mem[_30285 + 314] = sha3(address(_30092), address(_31425))
                                                mem[_30285 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30285 + 261] = 85
                                                mem[_30285 + 378] = 0
                                                mem[64] = _30285 + 410
                                                mem[_30285 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 414] = 0
                                                mem[_30285 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30285 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31425)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30285 + 510] = 128
                                                mem[_30285 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30285 + s + 574] = mem[_30285 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30092), address(_31425)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30285 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30285 + 241] = address(_30092)
                                                mem[_30285 + 189] = 40
                                                mem[_30285 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 294] = stor1
                                                mem[_30285 + 314] = sha3(mem[_30285 + 221 len 20], address(_30092))
                                                mem[_30285 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30285 + 261] = 85
                                                _33392 = sha3(0, stor1, sha3(mem[_30285 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30285 + 378] = 0
                                                mem[64] = _30285 + 410
                                                mem[_30285 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 414] = 0
                                                mem[_30285 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30285 + 478] = address(_33392)
                                                mem[_30285 + 510] = 128
                                                mem[_30285 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30285 + s + 574] = mem[_30285 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_33392), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30285 + 189] = 0
                                            mem[64] = _30285 + 221
                                            mem[_30285 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30285 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30285 + 257] = 0
                                            mem[_30285 + 289] = this.address
                                            mem[_30285 + 321] = 128
                                            mem[_30285 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30285 + s + 385] = mem[_30285 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31426 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30285 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30285 + 221] = address(_30092)
                                                mem[_30285 + 241] = address(_31426)
                                                mem[_30285 + 189] = 40
                                                mem[_30285 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 294] = stor1
                                                mem[_30285 + 314] = sha3(address(_30092), address(_31426))
                                                mem[_30285 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30285 + 261] = 85
                                                mem[_30285 + 378] = 0
                                                mem[64] = _30285 + 410
                                                mem[_30285 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30285 + 446] = 0
                                                mem[_30285 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31426)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30285 + 510] = 128
                                                mem[_30285 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30285 + s + 574] = mem[_30285 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30092), address(_31426)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30285 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30285 + 241] = address(_30092)
                                                mem[_30285 + 189] = 40
                                                mem[_30285 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 294] = stor1
                                                mem[_30285 + 314] = sha3(mem[_30285 + 221 len 20], address(_30092))
                                                mem[_30285 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30285 + 261] = 85
                                                _33408 = sha3(0, stor1, sha3(mem[_30285 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30285 + 378] = 0
                                                mem[64] = _30285 + 410
                                                mem[_30285 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30285 + 446] = 0
                                                mem[_30285 + 478] = address(_33408)
                                                mem[_30285 + 510] = 128
                                                mem[_30285 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30285 + s + 574] = mem[_30285 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_33408), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30077) == address(_30077):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30285 + 189] = 0
                                            mem[64] = _30285 + 221
                                            mem[_30285 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30285 + 225] = 0
                                            mem[_30285 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30285 + 289] = this.address
                                            mem[_30285 + 321] = 128
                                            mem[_30285 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30285 + s + 385] = mem[_30285 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31731 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30285 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30285 + 221] = address(_30092)
                                                mem[_30285 + 241] = address(_31731)
                                                mem[_30285 + 189] = 40
                                                mem[_30285 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 294] = stor1
                                                mem[_30285 + 314] = sha3(address(_30092), address(_31731))
                                                mem[_30285 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30285 + 261] = 85
                                                mem[_30285 + 378] = 0
                                                mem[64] = _30285 + 410
                                                mem[_30285 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 414] = 0
                                                mem[_30285 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30285 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31731)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30285 + 510] = 128
                                                mem[_30285 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30285 + s + 574] = mem[_30285 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30092), address(_31731)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30285 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30285 + 241] = address(_30092)
                                                mem[_30285 + 189] = 40
                                                mem[_30285 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 294] = stor1
                                                mem[_30285 + 314] = sha3(mem[_30285 + 221 len 20], address(_30092))
                                                mem[_30285 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30285 + 261] = 85
                                                _34820 = sha3(0, stor1, sha3(mem[_30285 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30285 + 378] = 0
                                                mem[64] = _30285 + 410
                                                mem[_30285 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 414] = 0
                                                mem[_30285 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30285 + 478] = address(_34820)
                                                mem[_30285 + 510] = 128
                                                mem[_30285 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30285 + s + 574] = mem[_30285 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_34820), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30285 + 189] = 0
                                            mem[64] = _30285 + 221
                                            mem[_30285 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30285 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30285 + 257] = 0
                                            mem[_30285 + 289] = this.address
                                            mem[_30285 + 321] = 128
                                            mem[_30285 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30285 + s + 385] = mem[_30285 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31732 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30285 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30285 + 221] = address(_30092)
                                                mem[_30285 + 241] = address(_31732)
                                                mem[_30285 + 189] = 40
                                                mem[_30285 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 294] = stor1
                                                mem[_30285 + 314] = sha3(address(_30092), address(_31732))
                                                mem[_30285 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30285 + 261] = 85
                                                mem[_30285 + 378] = 0
                                                mem[64] = _30285 + 410
                                                mem[_30285 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30285 + 446] = 0
                                                mem[_30285 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31732)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30285 + 510] = 128
                                                mem[_30285 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30285 + s + 574] = mem[_30285 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30092), address(_31732)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30285 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30285 + 241] = address(_30092)
                                                mem[_30285 + 189] = 40
                                                mem[_30285 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 294] = stor1
                                                mem[_30285 + 314] = sha3(mem[_30285 + 221 len 20], address(_30092))
                                                mem[_30285 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30285 + 261] = 85
                                                _34836 = sha3(0, stor1, sha3(mem[_30285 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30285 + 378] = 0
                                                mem[64] = _30285 + 410
                                                mem[_30285 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30285 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30285 + 446] = 0
                                                mem[_30285 + 478] = address(_34836)
                                                mem[_30285 + 510] = 128
                                                mem[_30285 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30285 + s + 574] = mem[_30285 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30288, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_34836), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] == mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] < mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            if not mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30293 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                            mem[mem[64] + 52] = address(_30092)
                            _30294 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30296 = sha3(mem[_30294 + 32 len mem[_30294]])
                            mem[_30293 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30293 + 105] = stor1
                            mem[_30293 + 125] = _30296
                            mem[_30293 + 157] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                            mem[_30293 + 72] = 85
                            require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                            staticcall address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).getReserves() with:
                                    gas gas_remaining wei
                            mem[_30293 + 189 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            mem[_30293 + 193] = address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            require ext_code.size(address(_30077))
                            staticcall address(_30077).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            mem[_30293 + 189] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if address(_30077) == address(_30092):
                                if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30293 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30293 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30293 + 295 len 26]
                                if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30077) == address(_30092):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30293 + 189] = 0
                                            mem[64] = _30293 + 221
                                            mem[_30293 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30293 + 225] = 0
                                            mem[_30293 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30293 + 289] = this.address
                                            mem[_30293 + 321] = 128
                                            mem[_30293 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30293 + s + 385] = mem[_30293 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31429 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30293 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30293 + 221] = address(_30092)
                                                mem[_30293 + 241] = address(_31429)
                                                mem[_30293 + 189] = 40
                                                mem[_30293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 294] = stor1
                                                mem[_30293 + 314] = sha3(address(_30092), address(_31429))
                                                mem[_30293 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30293 + 261] = 85
                                                mem[_30293 + 378] = 0
                                                mem[64] = _30293 + 410
                                                mem[_30293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 414] = 0
                                                mem[_30293 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30293 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31429)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30293 + 510] = 128
                                                mem[_30293 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30293 + s + 574] = mem[_30293 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30092), address(_31429)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30293 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30293 + 241] = address(_30092)
                                                mem[_30293 + 189] = 40
                                                mem[_30293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 294] = stor1
                                                mem[_30293 + 314] = sha3(mem[_30293 + 221 len 20], address(_30092))
                                                mem[_30293 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30293 + 261] = 85
                                                _33428 = sha3(0, stor1, sha3(mem[_30293 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30293 + 378] = 0
                                                mem[64] = _30293 + 410
                                                mem[_30293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 414] = 0
                                                mem[_30293 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30293 + 478] = address(_33428)
                                                mem[_30293 + 510] = 128
                                                mem[_30293 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30293 + s + 574] = mem[_30293 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_33428), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30293 + 189] = 0
                                            mem[64] = _30293 + 221
                                            mem[_30293 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30293 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30293 + 257] = 0
                                            mem[_30293 + 289] = this.address
                                            mem[_30293 + 321] = 128
                                            mem[_30293 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30293 + s + 385] = mem[_30293 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31430 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30293 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30293 + 221] = address(_30092)
                                                mem[_30293 + 241] = address(_31430)
                                                mem[_30293 + 189] = 40
                                                mem[_30293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 294] = stor1
                                                mem[_30293 + 314] = sha3(address(_30092), address(_31430))
                                                mem[_30293 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30293 + 261] = 85
                                                mem[_30293 + 378] = 0
                                                mem[64] = _30293 + 410
                                                mem[_30293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30293 + 446] = 0
                                                mem[_30293 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31430)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30293 + 510] = 128
                                                mem[_30293 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30293 + s + 574] = mem[_30293 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30092), address(_31430)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30293 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30293 + 241] = address(_30092)
                                                mem[_30293 + 189] = 40
                                                mem[_30293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 294] = stor1
                                                mem[_30293 + 314] = sha3(mem[_30293 + 221 len 20], address(_30092))
                                                mem[_30293 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30293 + 261] = 85
                                                _33444 = sha3(0, stor1, sha3(mem[_30293 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30293 + 378] = 0
                                                mem[64] = _30293 + 410
                                                mem[_30293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30293 + 446] = 0
                                                mem[_30293 + 478] = address(_33444)
                                                mem[_30293 + 510] = 128
                                                mem[_30293 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30293 + s + 574] = mem[_30293 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_33444), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30077) == address(_30092):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30293 + 189] = 0
                                            mem[64] = _30293 + 221
                                            mem[_30293 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30293 + 225] = 0
                                            mem[_30293 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30293 + 289] = this.address
                                            mem[_30293 + 321] = 128
                                            mem[_30293 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30293 + s + 385] = mem[_30293 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31739 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30293 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30293 + 221] = address(_30092)
                                                mem[_30293 + 241] = address(_31739)
                                                mem[_30293 + 189] = 40
                                                mem[_30293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 294] = stor1
                                                mem[_30293 + 314] = sha3(address(_30092), address(_31739))
                                                mem[_30293 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30293 + 261] = 85
                                                mem[_30293 + 378] = 0
                                                mem[64] = _30293 + 410
                                                mem[_30293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 414] = 0
                                                mem[_30293 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30293 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31739)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30293 + 510] = 128
                                                mem[_30293 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30293 + s + 574] = mem[_30293 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30092), address(_31739)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30293 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30293 + 241] = address(_30092)
                                                mem[_30293 + 189] = 40
                                                mem[_30293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 294] = stor1
                                                mem[_30293 + 314] = sha3(mem[_30293 + 221 len 20], address(_30092))
                                                mem[_30293 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30293 + 261] = 85
                                                _34852 = sha3(0, stor1, sha3(mem[_30293 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30293 + 378] = 0
                                                mem[64] = _30293 + 410
                                                mem[_30293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 414] = 0
                                                mem[_30293 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30293 + 478] = address(_34852)
                                                mem[_30293 + 510] = 128
                                                mem[_30293 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30293 + s + 574] = mem[_30293 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_34852), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30293 + 189] = 0
                                            mem[64] = _30293 + 221
                                            mem[_30293 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30293 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30293 + 257] = 0
                                            mem[_30293 + 289] = this.address
                                            mem[_30293 + 321] = 128
                                            mem[_30293 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30293 + s + 385] = mem[_30293 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31740 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30293 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30293 + 221] = address(_30092)
                                                mem[_30293 + 241] = address(_31740)
                                                mem[_30293 + 189] = 40
                                                mem[_30293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 294] = stor1
                                                mem[_30293 + 314] = sha3(address(_30092), address(_31740))
                                                mem[_30293 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30293 + 261] = 85
                                                mem[_30293 + 378] = 0
                                                mem[64] = _30293 + 410
                                                mem[_30293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30293 + 446] = 0
                                                mem[_30293 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31740)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30293 + 510] = 128
                                                mem[_30293 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30293 + s + 574] = mem[_30293 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30092), address(_31740)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30293 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30293 + 241] = address(_30092)
                                                mem[_30293 + 189] = 40
                                                mem[_30293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 294] = stor1
                                                mem[_30293 + 314] = sha3(mem[_30293 + 221 len 20], address(_30092))
                                                mem[_30293 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30293 + 261] = 85
                                                _34868 = sha3(0, stor1, sha3(mem[_30293 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30293 + 378] = 0
                                                mem[64] = _30293 + 410
                                                mem[_30293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30293 + 446] = 0
                                                mem[_30293 + 478] = address(_34868)
                                                mem[_30293 + 510] = 128
                                                mem[_30293 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30293 + s + 574] = mem[_30293 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_34868), 128, 0
                            else:
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30293 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30293 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30293 + 295 len 26]
                                if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30077) == address(_30092):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30293 + 189] = 0
                                            mem[64] = _30293 + 221
                                            mem[_30293 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30293 + 225] = 0
                                            mem[_30293 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30293 + 289] = this.address
                                            mem[_30293 + 321] = 128
                                            mem[_30293 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30293 + s + 385] = mem[_30293 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31433 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30293 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30293 + 221] = address(_30092)
                                                mem[_30293 + 241] = address(_31433)
                                                mem[_30293 + 189] = 40
                                                mem[_30293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 294] = stor1
                                                mem[_30293 + 314] = sha3(address(_30092), address(_31433))
                                                mem[_30293 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30293 + 261] = 85
                                                mem[_30293 + 378] = 0
                                                mem[64] = _30293 + 410
                                                mem[_30293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 414] = 0
                                                mem[_30293 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30293 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31433)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30293 + 510] = 128
                                                mem[_30293 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30293 + s + 574] = mem[_30293 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30092), address(_31433)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30293 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30293 + 241] = address(_30092)
                                                mem[_30293 + 189] = 40
                                                mem[_30293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 294] = stor1
                                                mem[_30293 + 314] = sha3(mem[_30293 + 221 len 20], address(_30092))
                                                mem[_30293 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30293 + 261] = 85
                                                _33464 = sha3(0, stor1, sha3(mem[_30293 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30293 + 378] = 0
                                                mem[64] = _30293 + 410
                                                mem[_30293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 414] = 0
                                                mem[_30293 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30293 + 478] = address(_33464)
                                                mem[_30293 + 510] = 128
                                                mem[_30293 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30293 + s + 574] = mem[_30293 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_33464), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30293 + 189] = 0
                                            mem[64] = _30293 + 221
                                            mem[_30293 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30293 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30293 + 257] = 0
                                            mem[_30293 + 289] = this.address
                                            mem[_30293 + 321] = 128
                                            mem[_30293 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30293 + s + 385] = mem[_30293 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31434 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30293 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30293 + 221] = address(_30092)
                                                mem[_30293 + 241] = address(_31434)
                                                mem[_30293 + 189] = 40
                                                mem[_30293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 294] = stor1
                                                mem[_30293 + 314] = sha3(address(_30092), address(_31434))
                                                mem[_30293 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30293 + 261] = 85
                                                mem[_30293 + 378] = 0
                                                mem[64] = _30293 + 410
                                                mem[_30293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30293 + 446] = 0
                                                mem[_30293 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31434)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30293 + 510] = 128
                                                mem[_30293 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30293 + s + 574] = mem[_30293 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30092), address(_31434)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30293 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30293 + 241] = address(_30092)
                                                mem[_30293 + 189] = 40
                                                mem[_30293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 294] = stor1
                                                mem[_30293 + 314] = sha3(mem[_30293 + 221 len 20], address(_30092))
                                                mem[_30293 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30293 + 261] = 85
                                                _33480 = sha3(0, stor1, sha3(mem[_30293 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30293 + 378] = 0
                                                mem[64] = _30293 + 410
                                                mem[_30293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30293 + 446] = 0
                                                mem[_30293 + 478] = address(_33480)
                                                mem[_30293 + 510] = 128
                                                mem[_30293 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30293 + s + 574] = mem[_30293 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_33480), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30077) == address(_30092):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30293 + 189] = 0
                                            mem[64] = _30293 + 221
                                            mem[_30293 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30293 + 225] = 0
                                            mem[_30293 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30293 + 289] = this.address
                                            mem[_30293 + 321] = 128
                                            mem[_30293 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30293 + s + 385] = mem[_30293 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31747 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30293 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30293 + 221] = address(_30092)
                                                mem[_30293 + 241] = address(_31747)
                                                mem[_30293 + 189] = 40
                                                mem[_30293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 294] = stor1
                                                mem[_30293 + 314] = sha3(address(_30092), address(_31747))
                                                mem[_30293 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30293 + 261] = 85
                                                mem[_30293 + 378] = 0
                                                mem[64] = _30293 + 410
                                                mem[_30293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 414] = 0
                                                mem[_30293 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30293 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31747)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30293 + 510] = 128
                                                mem[_30293 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30293 + s + 574] = mem[_30293 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30092), address(_31747)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30293 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30293 + 241] = address(_30092)
                                                mem[_30293 + 189] = 40
                                                mem[_30293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 294] = stor1
                                                mem[_30293 + 314] = sha3(mem[_30293 + 221 len 20], address(_30092))
                                                mem[_30293 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30293 + 261] = 85
                                                _34884 = sha3(0, stor1, sha3(mem[_30293 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30293 + 378] = 0
                                                mem[64] = _30293 + 410
                                                mem[_30293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 414] = 0
                                                mem[_30293 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30293 + 478] = address(_34884)
                                                mem[_30293 + 510] = 128
                                                mem[_30293 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30293 + s + 574] = mem[_30293 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_34884), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30293 + 189] = 0
                                            mem[64] = _30293 + 221
                                            mem[_30293 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30293 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30293 + 257] = 0
                                            mem[_30293 + 289] = this.address
                                            mem[_30293 + 321] = 128
                                            mem[_30293 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30293 + s + 385] = mem[_30293 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31748 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30293 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30293 + 221] = address(_30092)
                                                mem[_30293 + 241] = address(_31748)
                                                mem[_30293 + 189] = 40
                                                mem[_30293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 294] = stor1
                                                mem[_30293 + 314] = sha3(address(_30092), address(_31748))
                                                mem[_30293 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30293 + 261] = 85
                                                mem[_30293 + 378] = 0
                                                mem[64] = _30293 + 410
                                                mem[_30293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30293 + 446] = 0
                                                mem[_30293 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31748)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30293 + 510] = 128
                                                mem[_30293 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30293 + s + 574] = mem[_30293 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30092), address(_31748)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30293 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30293 + 241] = address(_30092)
                                                mem[_30293 + 189] = 40
                                                mem[_30293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 294] = stor1
                                                mem[_30293 + 314] = sha3(mem[_30293 + 221 len 20], address(_30092))
                                                mem[_30293 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30293 + 261] = 85
                                                _34900 = sha3(0, stor1, sha3(mem[_30293 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30293 + 378] = 0
                                                mem[64] = _30293 + 410
                                                mem[_30293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30293 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30293 + 446] = 0
                                                mem[_30293 + 478] = address(_34900)
                                                mem[_30293 + 510] = 128
                                                mem[_30293 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30293 + s + 574] = mem[_30293 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30296, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_34900), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30301 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                            mem[mem[64] + 52] = address(_30077)
                            _30302 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30304 = sha3(mem[_30302 + 32 len mem[_30302]])
                            mem[_30301 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30301 + 105] = stor1
                            mem[_30301 + 125] = _30304
                            mem[_30301 + 157] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                            mem[_30301 + 72] = 85
                            require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                            staticcall address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).getReserves() with:
                                    gas gas_remaining wei
                            mem[_30301 + 189 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            mem[_30301 + 193] = address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            require ext_code.size(address(_30077))
                            staticcall address(_30077).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            mem[_30301 + 189] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if address(_30077) == address(_30092):
                                if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30301 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30301 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30301 + 295 len 26]
                                if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30077) == address(_30092):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30301 + 189] = 0
                                            mem[64] = _30301 + 221
                                            mem[_30301 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30301 + 225] = 0
                                            mem[_30301 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30301 + 289] = this.address
                                            mem[_30301 + 321] = 128
                                            mem[_30301 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30301 + s + 385] = mem[_30301 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31437 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30301 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30301 + 221] = address(_30092)
                                                mem[_30301 + 241] = address(_31437)
                                                mem[_30301 + 189] = 40
                                                mem[_30301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 294] = stor1
                                                mem[_30301 + 314] = sha3(address(_30092), address(_31437))
                                                mem[_30301 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30301 + 261] = 85
                                                mem[_30301 + 378] = 0
                                                mem[64] = _30301 + 410
                                                mem[_30301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 414] = 0
                                                mem[_30301 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30301 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31437)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30301 + 510] = 128
                                                mem[_30301 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30301 + s + 574] = mem[_30301 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30092), address(_31437)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30301 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30301 + 241] = address(_30092)
                                                mem[_30301 + 189] = 40
                                                mem[_30301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 294] = stor1
                                                mem[_30301 + 314] = sha3(mem[_30301 + 221 len 20], address(_30092))
                                                mem[_30301 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30301 + 261] = 85
                                                _33500 = sha3(0, stor1, sha3(mem[_30301 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30301 + 378] = 0
                                                mem[64] = _30301 + 410
                                                mem[_30301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 414] = 0
                                                mem[_30301 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30301 + 478] = address(_33500)
                                                mem[_30301 + 510] = 128
                                                mem[_30301 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30301 + s + 574] = mem[_30301 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_33500), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30301 + 189] = 0
                                            mem[64] = _30301 + 221
                                            mem[_30301 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30301 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30301 + 257] = 0
                                            mem[_30301 + 289] = this.address
                                            mem[_30301 + 321] = 128
                                            mem[_30301 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30301 + s + 385] = mem[_30301 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31438 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30301 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30301 + 221] = address(_30092)
                                                mem[_30301 + 241] = address(_31438)
                                                mem[_30301 + 189] = 40
                                                mem[_30301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 294] = stor1
                                                mem[_30301 + 314] = sha3(address(_30092), address(_31438))
                                                mem[_30301 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30301 + 261] = 85
                                                mem[_30301 + 378] = 0
                                                mem[64] = _30301 + 410
                                                mem[_30301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30301 + 446] = 0
                                                mem[_30301 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31438)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30301 + 510] = 128
                                                mem[_30301 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30301 + s + 574] = mem[_30301 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30092), address(_31438)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30301 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30301 + 241] = address(_30092)
                                                mem[_30301 + 189] = 40
                                                mem[_30301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 294] = stor1
                                                mem[_30301 + 314] = sha3(mem[_30301 + 221 len 20], address(_30092))
                                                mem[_30301 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30301 + 261] = 85
                                                _33516 = sha3(0, stor1, sha3(mem[_30301 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30301 + 378] = 0
                                                mem[64] = _30301 + 410
                                                mem[_30301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30301 + 446] = 0
                                                mem[_30301 + 478] = address(_33516)
                                                mem[_30301 + 510] = 128
                                                mem[_30301 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30301 + s + 574] = mem[_30301 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_33516), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30077) == address(_30092):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30301 + 189] = 0
                                            mem[64] = _30301 + 221
                                            mem[_30301 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30301 + 225] = 0
                                            mem[_30301 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30301 + 289] = this.address
                                            mem[_30301 + 321] = 128
                                            mem[_30301 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30301 + s + 385] = mem[_30301 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31755 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30301 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30301 + 221] = address(_30092)
                                                mem[_30301 + 241] = address(_31755)
                                                mem[_30301 + 189] = 40
                                                mem[_30301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 294] = stor1
                                                mem[_30301 + 314] = sha3(address(_30092), address(_31755))
                                                mem[_30301 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30301 + 261] = 85
                                                mem[_30301 + 378] = 0
                                                mem[64] = _30301 + 410
                                                mem[_30301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 414] = 0
                                                mem[_30301 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30301 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31755)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30301 + 510] = 128
                                                mem[_30301 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30301 + s + 574] = mem[_30301 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30092), address(_31755)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30301 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30301 + 241] = address(_30092)
                                                mem[_30301 + 189] = 40
                                                mem[_30301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 294] = stor1
                                                mem[_30301 + 314] = sha3(mem[_30301 + 221 len 20], address(_30092))
                                                mem[_30301 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30301 + 261] = 85
                                                _34916 = sha3(0, stor1, sha3(mem[_30301 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30301 + 378] = 0
                                                mem[64] = _30301 + 410
                                                mem[_30301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 414] = 0
                                                mem[_30301 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30301 + 478] = address(_34916)
                                                mem[_30301 + 510] = 128
                                                mem[_30301 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30301 + s + 574] = mem[_30301 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_34916), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30301 + 189] = 0
                                            mem[64] = _30301 + 221
                                            mem[_30301 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30301 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30301 + 257] = 0
                                            mem[_30301 + 289] = this.address
                                            mem[_30301 + 321] = 128
                                            mem[_30301 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30301 + s + 385] = mem[_30301 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31756 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30301 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30301 + 221] = address(_30092)
                                                mem[_30301 + 241] = address(_31756)
                                                mem[_30301 + 189] = 40
                                                mem[_30301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 294] = stor1
                                                mem[_30301 + 314] = sha3(address(_30092), address(_31756))
                                                mem[_30301 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30301 + 261] = 85
                                                mem[_30301 + 378] = 0
                                                mem[64] = _30301 + 410
                                                mem[_30301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30301 + 446] = 0
                                                mem[_30301 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31756)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30301 + 510] = 128
                                                mem[_30301 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30301 + s + 574] = mem[_30301 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30092), address(_31756)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30301 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30301 + 241] = address(_30092)
                                                mem[_30301 + 189] = 40
                                                mem[_30301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 294] = stor1
                                                mem[_30301 + 314] = sha3(mem[_30301 + 221 len 20], address(_30092))
                                                mem[_30301 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30301 + 261] = 85
                                                _34932 = sha3(0, stor1, sha3(mem[_30301 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30301 + 378] = 0
                                                mem[64] = _30301 + 410
                                                mem[_30301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30301 + 446] = 0
                                                mem[_30301 + 478] = address(_34932)
                                                mem[_30301 + 510] = 128
                                                mem[_30301 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30301 + s + 574] = mem[_30301 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_34932), 128, 0
                            else:
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30301 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30301 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30301 + 295 len 26]
                                if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30077) == address(_30092):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30301 + 189] = 0
                                            mem[64] = _30301 + 221
                                            mem[_30301 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30301 + 225] = 0
                                            mem[_30301 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30301 + 289] = this.address
                                            mem[_30301 + 321] = 128
                                            mem[_30301 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30301 + s + 385] = mem[_30301 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31441 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30301 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30301 + 221] = address(_30092)
                                                mem[_30301 + 241] = address(_31441)
                                                mem[_30301 + 189] = 40
                                                mem[_30301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 294] = stor1
                                                mem[_30301 + 314] = sha3(address(_30092), address(_31441))
                                                mem[_30301 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30301 + 261] = 85
                                                mem[_30301 + 378] = 0
                                                mem[64] = _30301 + 410
                                                mem[_30301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 414] = 0
                                                mem[_30301 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30301 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31441)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30301 + 510] = 128
                                                mem[_30301 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30301 + s + 574] = mem[_30301 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30092), address(_31441)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30301 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30301 + 241] = address(_30092)
                                                mem[_30301 + 189] = 40
                                                mem[_30301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 294] = stor1
                                                mem[_30301 + 314] = sha3(mem[_30301 + 221 len 20], address(_30092))
                                                mem[_30301 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30301 + 261] = 85
                                                _33536 = sha3(0, stor1, sha3(mem[_30301 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30301 + 378] = 0
                                                mem[64] = _30301 + 410
                                                mem[_30301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 414] = 0
                                                mem[_30301 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30301 + 478] = address(_33536)
                                                mem[_30301 + 510] = 128
                                                mem[_30301 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30301 + s + 574] = mem[_30301 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_33536), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30301 + 189] = 0
                                            mem[64] = _30301 + 221
                                            mem[_30301 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30301 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30301 + 257] = 0
                                            mem[_30301 + 289] = this.address
                                            mem[_30301 + 321] = 128
                                            mem[_30301 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30301 + s + 385] = mem[_30301 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31442 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30301 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30301 + 221] = address(_30092)
                                                mem[_30301 + 241] = address(_31442)
                                                mem[_30301 + 189] = 40
                                                mem[_30301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 294] = stor1
                                                mem[_30301 + 314] = sha3(address(_30092), address(_31442))
                                                mem[_30301 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30301 + 261] = 85
                                                mem[_30301 + 378] = 0
                                                mem[64] = _30301 + 410
                                                mem[_30301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30301 + 446] = 0
                                                mem[_30301 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31442)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30301 + 510] = 128
                                                mem[_30301 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30301 + s + 574] = mem[_30301 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30092), address(_31442)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30301 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30301 + 241] = address(_30092)
                                                mem[_30301 + 189] = 40
                                                mem[_30301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 294] = stor1
                                                mem[_30301 + 314] = sha3(mem[_30301 + 221 len 20], address(_30092))
                                                mem[_30301 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30301 + 261] = 85
                                                _33552 = sha3(0, stor1, sha3(mem[_30301 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30301 + 378] = 0
                                                mem[64] = _30301 + 410
                                                mem[_30301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30301 + 446] = 0
                                                mem[_30301 + 478] = address(_33552)
                                                mem[_30301 + 510] = 128
                                                mem[_30301 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30301 + s + 574] = mem[_30301 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_33552), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30077) == address(_30092):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30301 + 189] = 0
                                            mem[64] = _30301 + 221
                                            mem[_30301 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30301 + 225] = 0
                                            mem[_30301 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30301 + 289] = this.address
                                            mem[_30301 + 321] = 128
                                            mem[_30301 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30301 + s + 385] = mem[_30301 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31763 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30301 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30301 + 221] = address(_30092)
                                                mem[_30301 + 241] = address(_31763)
                                                mem[_30301 + 189] = 40
                                                mem[_30301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 294] = stor1
                                                mem[_30301 + 314] = sha3(address(_30092), address(_31763))
                                                mem[_30301 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30301 + 261] = 85
                                                mem[_30301 + 378] = 0
                                                mem[64] = _30301 + 410
                                                mem[_30301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 414] = 0
                                                mem[_30301 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30301 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31763)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30301 + 510] = 128
                                                mem[_30301 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30301 + s + 574] = mem[_30301 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30092), address(_31763)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30301 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30301 + 241] = address(_30092)
                                                mem[_30301 + 189] = 40
                                                mem[_30301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 294] = stor1
                                                mem[_30301 + 314] = sha3(mem[_30301 + 221 len 20], address(_30092))
                                                mem[_30301 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30301 + 261] = 85
                                                _34948 = sha3(0, stor1, sha3(mem[_30301 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30301 + 378] = 0
                                                mem[64] = _30301 + 410
                                                mem[_30301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 414] = 0
                                                mem[_30301 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30301 + 478] = address(_34948)
                                                mem[_30301 + 510] = 128
                                                mem[_30301 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30301 + s + 574] = mem[_30301 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_34948), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30301 + 189] = 0
                                            mem[64] = _30301 + 221
                                            mem[_30301 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30301 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30301 + 257] = 0
                                            mem[_30301 + 289] = this.address
                                            mem[_30301 + 321] = 128
                                            mem[_30301 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30301 + s + 385] = mem[_30301 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31764 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30092) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30301 + 292 len 29]
                                            if address(_30092) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30092):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30301 + 221] = address(_30092)
                                                mem[_30301 + 241] = address(_31764)
                                                mem[_30301 + 189] = 40
                                                mem[_30301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 294] = stor1
                                                mem[_30301 + 314] = sha3(address(_30092), address(_31764))
                                                mem[_30301 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30301 + 261] = 85
                                                mem[_30301 + 378] = 0
                                                mem[64] = _30301 + 410
                                                mem[_30301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30301 + 446] = 0
                                                mem[_30301 + 478] = address(sha3(0, stor1, sha3(address(_30092), address(_31764)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30301 + 510] = 128
                                                mem[_30301 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30301 + s + 574] = mem[_30301 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30092), address(_31764)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30301 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30301 + 241] = address(_30092)
                                                mem[_30301 + 189] = 40
                                                mem[_30301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 294] = stor1
                                                mem[_30301 + 314] = sha3(mem[_30301 + 221 len 20], address(_30092))
                                                mem[_30301 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30301 + 261] = 85
                                                _34964 = sha3(0, stor1, sha3(mem[_30301 + 221 len 20], address(_30092)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30301 + 378] = 0
                                                mem[64] = _30301 + 410
                                                mem[_30301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30301 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30301 + 446] = 0
                                                mem[_30301 + 478] = address(_34964)
                                                mem[_30301 + 510] = 128
                                                mem[_30301 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30301 + s + 574] = mem[_30301 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30304, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_34964), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
        else:
            mem[64] = (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 357
            mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 356] = return_data.size
            mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 388 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if not return_data.size:
                idx = 0
                while idx < 1:
                    require idx < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                    _30080 = mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                    require idx + 1 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                    _30096 = mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                    if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] == mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] < mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                        if not mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] == mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] < mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            if not mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30309 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                            mem[mem[64] + 52] = address(_30096)
                            _30310 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30312 = sha3(mem[_30310 + 32 len mem[_30310]])
                            mem[_30309 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30309 + 105] = stor1
                            mem[_30309 + 125] = _30312
                            mem[_30309 + 157] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                            mem[_30309 + 72] = 85
                            require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                            staticcall address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).getReserves() with:
                                    gas gas_remaining wei
                            mem[_30309 + 189 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            mem[_30309 + 193] = address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            require ext_code.size(address(_30080))
                            staticcall address(_30080).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            mem[_30309 + 189] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if address(_30080) == address(_30080):
                                if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30309 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30309 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30309 + 295 len 26]
                                if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30080) == address(_30080):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30309 + 189] = 0
                                            mem[64] = _30309 + 221
                                            mem[_30309 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30309 + 225] = 0
                                            mem[_30309 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30309 + 289] = this.address
                                            mem[_30309 + 321] = 128
                                            mem[_30309 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30309 + s + 385] = mem[_30309 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31445 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30309 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30309 + 221] = address(_30096)
                                                mem[_30309 + 241] = address(_31445)
                                                mem[_30309 + 189] = 40
                                                mem[_30309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 294] = stor1
                                                mem[_30309 + 314] = sha3(address(_30096), address(_31445))
                                                mem[_30309 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30309 + 261] = 85
                                                mem[_30309 + 378] = 0
                                                mem[64] = _30309 + 410
                                                mem[_30309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 414] = 0
                                                mem[_30309 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30309 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31445)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30309 + 510] = 128
                                                mem[_30309 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30309 + s + 574] = mem[_30309 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30096), address(_31445)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30309 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30309 + 241] = address(_30096)
                                                mem[_30309 + 189] = 40
                                                mem[_30309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 294] = stor1
                                                mem[_30309 + 314] = sha3(mem[_30309 + 221 len 20], address(_30096))
                                                mem[_30309 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30309 + 261] = 85
                                                _33572 = sha3(0, stor1, sha3(mem[_30309 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30309 + 378] = 0
                                                mem[64] = _30309 + 410
                                                mem[_30309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 414] = 0
                                                mem[_30309 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30309 + 478] = address(_33572)
                                                mem[_30309 + 510] = 128
                                                mem[_30309 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30309 + s + 574] = mem[_30309 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_33572), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30309 + 189] = 0
                                            mem[64] = _30309 + 221
                                            mem[_30309 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30309 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30309 + 257] = 0
                                            mem[_30309 + 289] = this.address
                                            mem[_30309 + 321] = 128
                                            mem[_30309 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30309 + s + 385] = mem[_30309 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31446 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30309 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30309 + 221] = address(_30096)
                                                mem[_30309 + 241] = address(_31446)
                                                mem[_30309 + 189] = 40
                                                mem[_30309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 294] = stor1
                                                mem[_30309 + 314] = sha3(address(_30096), address(_31446))
                                                mem[_30309 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30309 + 261] = 85
                                                mem[_30309 + 378] = 0
                                                mem[64] = _30309 + 410
                                                mem[_30309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30309 + 446] = 0
                                                mem[_30309 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31446)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30309 + 510] = 128
                                                mem[_30309 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30309 + s + 574] = mem[_30309 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30096), address(_31446)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30309 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30309 + 241] = address(_30096)
                                                mem[_30309 + 189] = 40
                                                mem[_30309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 294] = stor1
                                                mem[_30309 + 314] = sha3(mem[_30309 + 221 len 20], address(_30096))
                                                mem[_30309 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30309 + 261] = 85
                                                _33588 = sha3(0, stor1, sha3(mem[_30309 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30309 + 378] = 0
                                                mem[64] = _30309 + 410
                                                mem[_30309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30309 + 446] = 0
                                                mem[_30309 + 478] = address(_33588)
                                                mem[_30309 + 510] = 128
                                                mem[_30309 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30309 + s + 574] = mem[_30309 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_33588), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30080) == address(_30080):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30309 + 189] = 0
                                            mem[64] = _30309 + 221
                                            mem[_30309 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30309 + 225] = 0
                                            mem[_30309 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30309 + 289] = this.address
                                            mem[_30309 + 321] = 128
                                            mem[_30309 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30309 + s + 385] = mem[_30309 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31771 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30309 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30309 + 221] = address(_30096)
                                                mem[_30309 + 241] = address(_31771)
                                                mem[_30309 + 189] = 40
                                                mem[_30309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 294] = stor1
                                                mem[_30309 + 314] = sha3(address(_30096), address(_31771))
                                                mem[_30309 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30309 + 261] = 85
                                                mem[_30309 + 378] = 0
                                                mem[64] = _30309 + 410
                                                mem[_30309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 414] = 0
                                                mem[_30309 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30309 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31771)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30309 + 510] = 128
                                                mem[_30309 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30309 + s + 574] = mem[_30309 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30096), address(_31771)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30309 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30309 + 241] = address(_30096)
                                                mem[_30309 + 189] = 40
                                                mem[_30309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 294] = stor1
                                                mem[_30309 + 314] = sha3(mem[_30309 + 221 len 20], address(_30096))
                                                mem[_30309 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30309 + 261] = 85
                                                _34980 = sha3(0, stor1, sha3(mem[_30309 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30309 + 378] = 0
                                                mem[64] = _30309 + 410
                                                mem[_30309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 414] = 0
                                                mem[_30309 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30309 + 478] = address(_34980)
                                                mem[_30309 + 510] = 128
                                                mem[_30309 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30309 + s + 574] = mem[_30309 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_34980), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30309 + 189] = 0
                                            mem[64] = _30309 + 221
                                            mem[_30309 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30309 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30309 + 257] = 0
                                            mem[_30309 + 289] = this.address
                                            mem[_30309 + 321] = 128
                                            mem[_30309 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30309 + s + 385] = mem[_30309 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31772 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30309 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30309 + 221] = address(_30096)
                                                mem[_30309 + 241] = address(_31772)
                                                mem[_30309 + 189] = 40
                                                mem[_30309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 294] = stor1
                                                mem[_30309 + 314] = sha3(address(_30096), address(_31772))
                                                mem[_30309 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30309 + 261] = 85
                                                mem[_30309 + 378] = 0
                                                mem[64] = _30309 + 410
                                                mem[_30309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30309 + 446] = 0
                                                mem[_30309 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31772)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30309 + 510] = 128
                                                mem[_30309 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30309 + s + 574] = mem[_30309 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30096), address(_31772)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30309 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30309 + 241] = address(_30096)
                                                mem[_30309 + 189] = 40
                                                mem[_30309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 294] = stor1
                                                mem[_30309 + 314] = sha3(mem[_30309 + 221 len 20], address(_30096))
                                                mem[_30309 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30309 + 261] = 85
                                                _34996 = sha3(0, stor1, sha3(mem[_30309 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30309 + 378] = 0
                                                mem[64] = _30309 + 410
                                                mem[_30309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30309 + 446] = 0
                                                mem[_30309 + 478] = address(_34996)
                                                mem[_30309 + 510] = 128
                                                mem[_30309 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30309 + s + 574] = mem[_30309 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_34996), 128, 0
                            else:
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30309 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30309 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30309 + 295 len 26]
                                if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30080) == address(_30080):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30309 + 189] = 0
                                            mem[64] = _30309 + 221
                                            mem[_30309 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30309 + 225] = 0
                                            mem[_30309 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30309 + 289] = this.address
                                            mem[_30309 + 321] = 128
                                            mem[_30309 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30309 + s + 385] = mem[_30309 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31449 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30309 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30309 + 221] = address(_30096)
                                                mem[_30309 + 241] = address(_31449)
                                                mem[_30309 + 189] = 40
                                                mem[_30309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 294] = stor1
                                                mem[_30309 + 314] = sha3(address(_30096), address(_31449))
                                                mem[_30309 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30309 + 261] = 85
                                                mem[_30309 + 378] = 0
                                                mem[64] = _30309 + 410
                                                mem[_30309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 414] = 0
                                                mem[_30309 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30309 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31449)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30309 + 510] = 128
                                                mem[_30309 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30309 + s + 574] = mem[_30309 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30096), address(_31449)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30309 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30309 + 241] = address(_30096)
                                                mem[_30309 + 189] = 40
                                                mem[_30309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 294] = stor1
                                                mem[_30309 + 314] = sha3(mem[_30309 + 221 len 20], address(_30096))
                                                mem[_30309 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30309 + 261] = 85
                                                _33608 = sha3(0, stor1, sha3(mem[_30309 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30309 + 378] = 0
                                                mem[64] = _30309 + 410
                                                mem[_30309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 414] = 0
                                                mem[_30309 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30309 + 478] = address(_33608)
                                                mem[_30309 + 510] = 128
                                                mem[_30309 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30309 + s + 574] = mem[_30309 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_33608), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30309 + 189] = 0
                                            mem[64] = _30309 + 221
                                            mem[_30309 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30309 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30309 + 257] = 0
                                            mem[_30309 + 289] = this.address
                                            mem[_30309 + 321] = 128
                                            mem[_30309 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30309 + s + 385] = mem[_30309 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31450 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30309 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30309 + 221] = address(_30096)
                                                mem[_30309 + 241] = address(_31450)
                                                mem[_30309 + 189] = 40
                                                mem[_30309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 294] = stor1
                                                mem[_30309 + 314] = sha3(address(_30096), address(_31450))
                                                mem[_30309 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30309 + 261] = 85
                                                mem[_30309 + 378] = 0
                                                mem[64] = _30309 + 410
                                                mem[_30309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30309 + 446] = 0
                                                mem[_30309 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31450)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30309 + 510] = 128
                                                mem[_30309 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30309 + s + 574] = mem[_30309 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30096), address(_31450)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30309 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30309 + 241] = address(_30096)
                                                mem[_30309 + 189] = 40
                                                mem[_30309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 294] = stor1
                                                mem[_30309 + 314] = sha3(mem[_30309 + 221 len 20], address(_30096))
                                                mem[_30309 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30309 + 261] = 85
                                                _33624 = sha3(0, stor1, sha3(mem[_30309 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30309 + 378] = 0
                                                mem[64] = _30309 + 410
                                                mem[_30309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30309 + 446] = 0
                                                mem[_30309 + 478] = address(_33624)
                                                mem[_30309 + 510] = 128
                                                mem[_30309 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30309 + s + 574] = mem[_30309 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_33624), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30080) == address(_30080):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30309 + 189] = 0
                                            mem[64] = _30309 + 221
                                            mem[_30309 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30309 + 225] = 0
                                            mem[_30309 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30309 + 289] = this.address
                                            mem[_30309 + 321] = 128
                                            mem[_30309 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30309 + s + 385] = mem[_30309 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31779 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30309 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30309 + 221] = address(_30096)
                                                mem[_30309 + 241] = address(_31779)
                                                mem[_30309 + 189] = 40
                                                mem[_30309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 294] = stor1
                                                mem[_30309 + 314] = sha3(address(_30096), address(_31779))
                                                mem[_30309 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30309 + 261] = 85
                                                mem[_30309 + 378] = 0
                                                mem[64] = _30309 + 410
                                                mem[_30309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 414] = 0
                                                mem[_30309 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30309 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31779)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30309 + 510] = 128
                                                mem[_30309 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30309 + s + 574] = mem[_30309 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30096), address(_31779)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30309 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30309 + 241] = address(_30096)
                                                mem[_30309 + 189] = 40
                                                mem[_30309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 294] = stor1
                                                mem[_30309 + 314] = sha3(mem[_30309 + 221 len 20], address(_30096))
                                                mem[_30309 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30309 + 261] = 85
                                                _35012 = sha3(0, stor1, sha3(mem[_30309 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30309 + 378] = 0
                                                mem[64] = _30309 + 410
                                                mem[_30309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 414] = 0
                                                mem[_30309 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30309 + 478] = address(_35012)
                                                mem[_30309 + 510] = 128
                                                mem[_30309 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30309 + s + 574] = mem[_30309 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_35012), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30309 + 189] = 0
                                            mem[64] = _30309 + 221
                                            mem[_30309 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30309 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30309 + 257] = 0
                                            mem[_30309 + 289] = this.address
                                            mem[_30309 + 321] = 128
                                            mem[_30309 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30309 + s + 385] = mem[_30309 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31780 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30309 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30309 + 221] = address(_30096)
                                                mem[_30309 + 241] = address(_31780)
                                                mem[_30309 + 189] = 40
                                                mem[_30309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 294] = stor1
                                                mem[_30309 + 314] = sha3(address(_30096), address(_31780))
                                                mem[_30309 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30309 + 261] = 85
                                                mem[_30309 + 378] = 0
                                                mem[64] = _30309 + 410
                                                mem[_30309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30309 + 446] = 0
                                                mem[_30309 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31780)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30309 + 510] = 128
                                                mem[_30309 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30309 + s + 574] = mem[_30309 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30096), address(_31780)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30309 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30309 + 241] = address(_30096)
                                                mem[_30309 + 189] = 40
                                                mem[_30309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 294] = stor1
                                                mem[_30309 + 314] = sha3(mem[_30309 + 221 len 20], address(_30096))
                                                mem[_30309 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30309 + 261] = 85
                                                _35028 = sha3(0, stor1, sha3(mem[_30309 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30309 + 378] = 0
                                                mem[64] = _30309 + 410
                                                mem[_30309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30309 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30309 + 446] = 0
                                                mem[_30309 + 478] = address(_35028)
                                                mem[_30309 + 510] = 128
                                                mem[_30309 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30309 + s + 574] = mem[_30309 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30312, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_35028), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30317 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                            mem[mem[64] + 52] = address(_30080)
                            _30318 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30320 = sha3(mem[_30318 + 32 len mem[_30318]])
                            mem[_30317 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30317 + 105] = stor1
                            mem[_30317 + 125] = _30320
                            mem[_30317 + 157] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                            mem[_30317 + 72] = 85
                            require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                            staticcall address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).getReserves() with:
                                    gas gas_remaining wei
                            mem[_30317 + 189 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            mem[_30317 + 193] = address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            require ext_code.size(address(_30080))
                            staticcall address(_30080).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            mem[_30317 + 189] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if address(_30080) == address(_30080):
                                if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30317 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30317 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30317 + 295 len 26]
                                if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30080) == address(_30080):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30317 + 189] = 0
                                            mem[64] = _30317 + 221
                                            mem[_30317 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30317 + 225] = 0
                                            mem[_30317 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30317 + 289] = this.address
                                            mem[_30317 + 321] = 128
                                            mem[_30317 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30317 + s + 385] = mem[_30317 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31453 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30317 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30317 + 221] = address(_30096)
                                                mem[_30317 + 241] = address(_31453)
                                                mem[_30317 + 189] = 40
                                                mem[_30317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 294] = stor1
                                                mem[_30317 + 314] = sha3(address(_30096), address(_31453))
                                                mem[_30317 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30317 + 261] = 85
                                                mem[_30317 + 378] = 0
                                                mem[64] = _30317 + 410
                                                mem[_30317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 414] = 0
                                                mem[_30317 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30317 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31453)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30317 + 510] = 128
                                                mem[_30317 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30317 + s + 574] = mem[_30317 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30096), address(_31453)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30317 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30317 + 241] = address(_30096)
                                                mem[_30317 + 189] = 40
                                                mem[_30317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 294] = stor1
                                                mem[_30317 + 314] = sha3(mem[_30317 + 221 len 20], address(_30096))
                                                mem[_30317 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30317 + 261] = 85
                                                _33644 = sha3(0, stor1, sha3(mem[_30317 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30317 + 378] = 0
                                                mem[64] = _30317 + 410
                                                mem[_30317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 414] = 0
                                                mem[_30317 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30317 + 478] = address(_33644)
                                                mem[_30317 + 510] = 128
                                                mem[_30317 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30317 + s + 574] = mem[_30317 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_33644), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30317 + 189] = 0
                                            mem[64] = _30317 + 221
                                            mem[_30317 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30317 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30317 + 257] = 0
                                            mem[_30317 + 289] = this.address
                                            mem[_30317 + 321] = 128
                                            mem[_30317 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30317 + s + 385] = mem[_30317 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31454 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30317 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30317 + 221] = address(_30096)
                                                mem[_30317 + 241] = address(_31454)
                                                mem[_30317 + 189] = 40
                                                mem[_30317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 294] = stor1
                                                mem[_30317 + 314] = sha3(address(_30096), address(_31454))
                                                mem[_30317 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30317 + 261] = 85
                                                mem[_30317 + 378] = 0
                                                mem[64] = _30317 + 410
                                                mem[_30317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30317 + 446] = 0
                                                mem[_30317 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31454)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30317 + 510] = 128
                                                mem[_30317 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30317 + s + 574] = mem[_30317 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30096), address(_31454)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30317 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30317 + 241] = address(_30096)
                                                mem[_30317 + 189] = 40
                                                mem[_30317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 294] = stor1
                                                mem[_30317 + 314] = sha3(mem[_30317 + 221 len 20], address(_30096))
                                                mem[_30317 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30317 + 261] = 85
                                                _33660 = sha3(0, stor1, sha3(mem[_30317 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30317 + 378] = 0
                                                mem[64] = _30317 + 410
                                                mem[_30317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30317 + 446] = 0
                                                mem[_30317 + 478] = address(_33660)
                                                mem[_30317 + 510] = 128
                                                mem[_30317 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30317 + s + 574] = mem[_30317 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_33660), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30080) == address(_30080):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30317 + 189] = 0
                                            mem[64] = _30317 + 221
                                            mem[_30317 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30317 + 225] = 0
                                            mem[_30317 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30317 + 289] = this.address
                                            mem[_30317 + 321] = 128
                                            mem[_30317 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30317 + s + 385] = mem[_30317 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31787 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30317 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30317 + 221] = address(_30096)
                                                mem[_30317 + 241] = address(_31787)
                                                mem[_30317 + 189] = 40
                                                mem[_30317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 294] = stor1
                                                mem[_30317 + 314] = sha3(address(_30096), address(_31787))
                                                mem[_30317 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30317 + 261] = 85
                                                mem[_30317 + 378] = 0
                                                mem[64] = _30317 + 410
                                                mem[_30317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 414] = 0
                                                mem[_30317 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30317 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31787)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30317 + 510] = 128
                                                mem[_30317 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30317 + s + 574] = mem[_30317 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30096), address(_31787)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30317 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30317 + 241] = address(_30096)
                                                mem[_30317 + 189] = 40
                                                mem[_30317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 294] = stor1
                                                mem[_30317 + 314] = sha3(mem[_30317 + 221 len 20], address(_30096))
                                                mem[_30317 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30317 + 261] = 85
                                                _35044 = sha3(0, stor1, sha3(mem[_30317 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30317 + 378] = 0
                                                mem[64] = _30317 + 410
                                                mem[_30317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 414] = 0
                                                mem[_30317 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30317 + 478] = address(_35044)
                                                mem[_30317 + 510] = 128
                                                mem[_30317 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30317 + s + 574] = mem[_30317 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_35044), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30317 + 189] = 0
                                            mem[64] = _30317 + 221
                                            mem[_30317 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30317 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30317 + 257] = 0
                                            mem[_30317 + 289] = this.address
                                            mem[_30317 + 321] = 128
                                            mem[_30317 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30317 + s + 385] = mem[_30317 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31788 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30317 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30317 + 221] = address(_30096)
                                                mem[_30317 + 241] = address(_31788)
                                                mem[_30317 + 189] = 40
                                                mem[_30317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 294] = stor1
                                                mem[_30317 + 314] = sha3(address(_30096), address(_31788))
                                                mem[_30317 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30317 + 261] = 85
                                                mem[_30317 + 378] = 0
                                                mem[64] = _30317 + 410
                                                mem[_30317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30317 + 446] = 0
                                                mem[_30317 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31788)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30317 + 510] = 128
                                                mem[_30317 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30317 + s + 574] = mem[_30317 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30096), address(_31788)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30317 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30317 + 241] = address(_30096)
                                                mem[_30317 + 189] = 40
                                                mem[_30317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 294] = stor1
                                                mem[_30317 + 314] = sha3(mem[_30317 + 221 len 20], address(_30096))
                                                mem[_30317 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30317 + 261] = 85
                                                _35060 = sha3(0, stor1, sha3(mem[_30317 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30317 + 378] = 0
                                                mem[64] = _30317 + 410
                                                mem[_30317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30317 + 446] = 0
                                                mem[_30317 + 478] = address(_35060)
                                                mem[_30317 + 510] = 128
                                                mem[_30317 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30317 + s + 574] = mem[_30317 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_35060), 128, 0
                            else:
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30317 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30317 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30317 + 295 len 26]
                                if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30080) == address(_30080):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30317 + 189] = 0
                                            mem[64] = _30317 + 221
                                            mem[_30317 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30317 + 225] = 0
                                            mem[_30317 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30317 + 289] = this.address
                                            mem[_30317 + 321] = 128
                                            mem[_30317 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30317 + s + 385] = mem[_30317 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31457 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30317 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30317 + 221] = address(_30096)
                                                mem[_30317 + 241] = address(_31457)
                                                mem[_30317 + 189] = 40
                                                mem[_30317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 294] = stor1
                                                mem[_30317 + 314] = sha3(address(_30096), address(_31457))
                                                mem[_30317 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30317 + 261] = 85
                                                mem[_30317 + 378] = 0
                                                mem[64] = _30317 + 410
                                                mem[_30317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 414] = 0
                                                mem[_30317 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30317 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31457)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30317 + 510] = 128
                                                mem[_30317 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30317 + s + 574] = mem[_30317 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30096), address(_31457)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30317 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30317 + 241] = address(_30096)
                                                mem[_30317 + 189] = 40
                                                mem[_30317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 294] = stor1
                                                mem[_30317 + 314] = sha3(mem[_30317 + 221 len 20], address(_30096))
                                                mem[_30317 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30317 + 261] = 85
                                                _33680 = sha3(0, stor1, sha3(mem[_30317 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30317 + 378] = 0
                                                mem[64] = _30317 + 410
                                                mem[_30317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 414] = 0
                                                mem[_30317 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30317 + 478] = address(_33680)
                                                mem[_30317 + 510] = 128
                                                mem[_30317 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30317 + s + 574] = mem[_30317 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_33680), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30317 + 189] = 0
                                            mem[64] = _30317 + 221
                                            mem[_30317 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30317 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30317 + 257] = 0
                                            mem[_30317 + 289] = this.address
                                            mem[_30317 + 321] = 128
                                            mem[_30317 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30317 + s + 385] = mem[_30317 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31458 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30317 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30317 + 221] = address(_30096)
                                                mem[_30317 + 241] = address(_31458)
                                                mem[_30317 + 189] = 40
                                                mem[_30317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 294] = stor1
                                                mem[_30317 + 314] = sha3(address(_30096), address(_31458))
                                                mem[_30317 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30317 + 261] = 85
                                                mem[_30317 + 378] = 0
                                                mem[64] = _30317 + 410
                                                mem[_30317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30317 + 446] = 0
                                                mem[_30317 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31458)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30317 + 510] = 128
                                                mem[_30317 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30317 + s + 574] = mem[_30317 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30096), address(_31458)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30317 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30317 + 241] = address(_30096)
                                                mem[_30317 + 189] = 40
                                                mem[_30317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 294] = stor1
                                                mem[_30317 + 314] = sha3(mem[_30317 + 221 len 20], address(_30096))
                                                mem[_30317 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30317 + 261] = 85
                                                _33696 = sha3(0, stor1, sha3(mem[_30317 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30317 + 378] = 0
                                                mem[64] = _30317 + 410
                                                mem[_30317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30317 + 446] = 0
                                                mem[_30317 + 478] = address(_33696)
                                                mem[_30317 + 510] = 128
                                                mem[_30317 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30317 + s + 574] = mem[_30317 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_33696), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30080) == address(_30080):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30317 + 189] = 0
                                            mem[64] = _30317 + 221
                                            mem[_30317 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30317 + 225] = 0
                                            mem[_30317 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30317 + 289] = this.address
                                            mem[_30317 + 321] = 128
                                            mem[_30317 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30317 + s + 385] = mem[_30317 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31795 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30317 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30317 + 221] = address(_30096)
                                                mem[_30317 + 241] = address(_31795)
                                                mem[_30317 + 189] = 40
                                                mem[_30317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 294] = stor1
                                                mem[_30317 + 314] = sha3(address(_30096), address(_31795))
                                                mem[_30317 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30317 + 261] = 85
                                                mem[_30317 + 378] = 0
                                                mem[64] = _30317 + 410
                                                mem[_30317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 414] = 0
                                                mem[_30317 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30317 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31795)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30317 + 510] = 128
                                                mem[_30317 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30317 + s + 574] = mem[_30317 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30096), address(_31795)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30317 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30317 + 241] = address(_30096)
                                                mem[_30317 + 189] = 40
                                                mem[_30317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 294] = stor1
                                                mem[_30317 + 314] = sha3(mem[_30317 + 221 len 20], address(_30096))
                                                mem[_30317 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30317 + 261] = 85
                                                _35076 = sha3(0, stor1, sha3(mem[_30317 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30317 + 378] = 0
                                                mem[64] = _30317 + 410
                                                mem[_30317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 414] = 0
                                                mem[_30317 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30317 + 478] = address(_35076)
                                                mem[_30317 + 510] = 128
                                                mem[_30317 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30317 + s + 574] = mem[_30317 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_35076), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30317 + 189] = 0
                                            mem[64] = _30317 + 221
                                            mem[_30317 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30317 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30317 + 257] = 0
                                            mem[_30317 + 289] = this.address
                                            mem[_30317 + 321] = 128
                                            mem[_30317 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30317 + s + 385] = mem[_30317 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31796 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30317 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30317 + 221] = address(_30096)
                                                mem[_30317 + 241] = address(_31796)
                                                mem[_30317 + 189] = 40
                                                mem[_30317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 294] = stor1
                                                mem[_30317 + 314] = sha3(address(_30096), address(_31796))
                                                mem[_30317 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30317 + 261] = 85
                                                mem[_30317 + 378] = 0
                                                mem[64] = _30317 + 410
                                                mem[_30317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30317 + 446] = 0
                                                mem[_30317 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31796)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30317 + 510] = 128
                                                mem[_30317 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30317 + s + 574] = mem[_30317 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30096), address(_31796)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30317 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30317 + 241] = address(_30096)
                                                mem[_30317 + 189] = 40
                                                mem[_30317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 294] = stor1
                                                mem[_30317 + 314] = sha3(mem[_30317 + 221 len 20], address(_30096))
                                                mem[_30317 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30317 + 261] = 85
                                                _35092 = sha3(0, stor1, sha3(mem[_30317 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30317 + 378] = 0
                                                mem[64] = _30317 + 410
                                                mem[_30317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30317 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30317 + 446] = 0
                                                mem[_30317 + 478] = address(_35092)
                                                mem[_30317 + 510] = 128
                                                mem[_30317 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30317 + s + 574] = mem[_30317 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30320, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_35092), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] == mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] < mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            if not mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30325 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                            mem[mem[64] + 52] = address(_30096)
                            _30326 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30328 = sha3(mem[_30326 + 32 len mem[_30326]])
                            mem[_30325 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30325 + 105] = stor1
                            mem[_30325 + 125] = _30328
                            mem[_30325 + 157] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                            mem[_30325 + 72] = 85
                            require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                            staticcall address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).getReserves() with:
                                    gas gas_remaining wei
                            mem[_30325 + 189 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            mem[_30325 + 193] = address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            require ext_code.size(address(_30080))
                            staticcall address(_30080).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            mem[_30325 + 189] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if address(_30080) == address(_30096):
                                if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30325 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30325 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30325 + 295 len 26]
                                if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30080) == address(_30096):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30325 + 189] = 0
                                            mem[64] = _30325 + 221
                                            mem[_30325 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30325 + 225] = 0
                                            mem[_30325 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30325 + 289] = this.address
                                            mem[_30325 + 321] = 128
                                            mem[_30325 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30325 + s + 385] = mem[_30325 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31461 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30325 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30325 + 221] = address(_30096)
                                                mem[_30325 + 241] = address(_31461)
                                                mem[_30325 + 189] = 40
                                                mem[_30325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 294] = stor1
                                                mem[_30325 + 314] = sha3(address(_30096), address(_31461))
                                                mem[_30325 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30325 + 261] = 85
                                                mem[_30325 + 378] = 0
                                                mem[64] = _30325 + 410
                                                mem[_30325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 414] = 0
                                                mem[_30325 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30325 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31461)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30325 + 510] = 128
                                                mem[_30325 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30325 + s + 574] = mem[_30325 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30096), address(_31461)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30325 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30325 + 241] = address(_30096)
                                                mem[_30325 + 189] = 40
                                                mem[_30325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 294] = stor1
                                                mem[_30325 + 314] = sha3(mem[_30325 + 221 len 20], address(_30096))
                                                mem[_30325 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30325 + 261] = 85
                                                _33716 = sha3(0, stor1, sha3(mem[_30325 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30325 + 378] = 0
                                                mem[64] = _30325 + 410
                                                mem[_30325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 414] = 0
                                                mem[_30325 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30325 + 478] = address(_33716)
                                                mem[_30325 + 510] = 128
                                                mem[_30325 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30325 + s + 574] = mem[_30325 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_33716), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30325 + 189] = 0
                                            mem[64] = _30325 + 221
                                            mem[_30325 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30325 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30325 + 257] = 0
                                            mem[_30325 + 289] = this.address
                                            mem[_30325 + 321] = 128
                                            mem[_30325 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30325 + s + 385] = mem[_30325 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31462 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30325 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30325 + 221] = address(_30096)
                                                mem[_30325 + 241] = address(_31462)
                                                mem[_30325 + 189] = 40
                                                mem[_30325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 294] = stor1
                                                mem[_30325 + 314] = sha3(address(_30096), address(_31462))
                                                mem[_30325 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30325 + 261] = 85
                                                mem[_30325 + 378] = 0
                                                mem[64] = _30325 + 410
                                                mem[_30325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30325 + 446] = 0
                                                mem[_30325 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31462)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30325 + 510] = 128
                                                mem[_30325 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30325 + s + 574] = mem[_30325 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30096), address(_31462)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30325 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30325 + 241] = address(_30096)
                                                mem[_30325 + 189] = 40
                                                mem[_30325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 294] = stor1
                                                mem[_30325 + 314] = sha3(mem[_30325 + 221 len 20], address(_30096))
                                                mem[_30325 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30325 + 261] = 85
                                                _33732 = sha3(0, stor1, sha3(mem[_30325 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30325 + 378] = 0
                                                mem[64] = _30325 + 410
                                                mem[_30325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30325 + 446] = 0
                                                mem[_30325 + 478] = address(_33732)
                                                mem[_30325 + 510] = 128
                                                mem[_30325 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30325 + s + 574] = mem[_30325 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_33732), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30080) == address(_30096):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30325 + 189] = 0
                                            mem[64] = _30325 + 221
                                            mem[_30325 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30325 + 225] = 0
                                            mem[_30325 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30325 + 289] = this.address
                                            mem[_30325 + 321] = 128
                                            mem[_30325 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30325 + s + 385] = mem[_30325 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31803 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30325 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30325 + 221] = address(_30096)
                                                mem[_30325 + 241] = address(_31803)
                                                mem[_30325 + 189] = 40
                                                mem[_30325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 294] = stor1
                                                mem[_30325 + 314] = sha3(address(_30096), address(_31803))
                                                mem[_30325 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30325 + 261] = 85
                                                mem[_30325 + 378] = 0
                                                mem[64] = _30325 + 410
                                                mem[_30325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 414] = 0
                                                mem[_30325 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30325 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31803)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30325 + 510] = 128
                                                mem[_30325 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30325 + s + 574] = mem[_30325 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30096), address(_31803)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30325 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30325 + 241] = address(_30096)
                                                mem[_30325 + 189] = 40
                                                mem[_30325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 294] = stor1
                                                mem[_30325 + 314] = sha3(mem[_30325 + 221 len 20], address(_30096))
                                                mem[_30325 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30325 + 261] = 85
                                                _35108 = sha3(0, stor1, sha3(mem[_30325 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30325 + 378] = 0
                                                mem[64] = _30325 + 410
                                                mem[_30325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 414] = 0
                                                mem[_30325 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30325 + 478] = address(_35108)
                                                mem[_30325 + 510] = 128
                                                mem[_30325 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30325 + s + 574] = mem[_30325 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_35108), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30325 + 189] = 0
                                            mem[64] = _30325 + 221
                                            mem[_30325 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30325 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30325 + 257] = 0
                                            mem[_30325 + 289] = this.address
                                            mem[_30325 + 321] = 128
                                            mem[_30325 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30325 + s + 385] = mem[_30325 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31804 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30325 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30325 + 221] = address(_30096)
                                                mem[_30325 + 241] = address(_31804)
                                                mem[_30325 + 189] = 40
                                                mem[_30325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 294] = stor1
                                                mem[_30325 + 314] = sha3(address(_30096), address(_31804))
                                                mem[_30325 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30325 + 261] = 85
                                                mem[_30325 + 378] = 0
                                                mem[64] = _30325 + 410
                                                mem[_30325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30325 + 446] = 0
                                                mem[_30325 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31804)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30325 + 510] = 128
                                                mem[_30325 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30325 + s + 574] = mem[_30325 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30096), address(_31804)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30325 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30325 + 241] = address(_30096)
                                                mem[_30325 + 189] = 40
                                                mem[_30325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 294] = stor1
                                                mem[_30325 + 314] = sha3(mem[_30325 + 221 len 20], address(_30096))
                                                mem[_30325 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30325 + 261] = 85
                                                _35124 = sha3(0, stor1, sha3(mem[_30325 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30325 + 378] = 0
                                                mem[64] = _30325 + 410
                                                mem[_30325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30325 + 446] = 0
                                                mem[_30325 + 478] = address(_35124)
                                                mem[_30325 + 510] = 128
                                                mem[_30325 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30325 + s + 574] = mem[_30325 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_35124), 128, 0
                            else:
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30325 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30325 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30325 + 295 len 26]
                                if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30080) == address(_30096):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30325 + 189] = 0
                                            mem[64] = _30325 + 221
                                            mem[_30325 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30325 + 225] = 0
                                            mem[_30325 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30325 + 289] = this.address
                                            mem[_30325 + 321] = 128
                                            mem[_30325 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30325 + s + 385] = mem[_30325 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31465 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30325 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30325 + 221] = address(_30096)
                                                mem[_30325 + 241] = address(_31465)
                                                mem[_30325 + 189] = 40
                                                mem[_30325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 294] = stor1
                                                mem[_30325 + 314] = sha3(address(_30096), address(_31465))
                                                mem[_30325 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30325 + 261] = 85
                                                mem[_30325 + 378] = 0
                                                mem[64] = _30325 + 410
                                                mem[_30325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 414] = 0
                                                mem[_30325 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30325 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31465)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30325 + 510] = 128
                                                mem[_30325 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30325 + s + 574] = mem[_30325 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30096), address(_31465)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30325 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30325 + 241] = address(_30096)
                                                mem[_30325 + 189] = 40
                                                mem[_30325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 294] = stor1
                                                mem[_30325 + 314] = sha3(mem[_30325 + 221 len 20], address(_30096))
                                                mem[_30325 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30325 + 261] = 85
                                                _33752 = sha3(0, stor1, sha3(mem[_30325 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30325 + 378] = 0
                                                mem[64] = _30325 + 410
                                                mem[_30325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 414] = 0
                                                mem[_30325 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30325 + 478] = address(_33752)
                                                mem[_30325 + 510] = 128
                                                mem[_30325 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30325 + s + 574] = mem[_30325 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_33752), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30325 + 189] = 0
                                            mem[64] = _30325 + 221
                                            mem[_30325 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30325 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30325 + 257] = 0
                                            mem[_30325 + 289] = this.address
                                            mem[_30325 + 321] = 128
                                            mem[_30325 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30325 + s + 385] = mem[_30325 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31466 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30325 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30325 + 221] = address(_30096)
                                                mem[_30325 + 241] = address(_31466)
                                                mem[_30325 + 189] = 40
                                                mem[_30325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 294] = stor1
                                                mem[_30325 + 314] = sha3(address(_30096), address(_31466))
                                                mem[_30325 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30325 + 261] = 85
                                                mem[_30325 + 378] = 0
                                                mem[64] = _30325 + 410
                                                mem[_30325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30325 + 446] = 0
                                                mem[_30325 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31466)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30325 + 510] = 128
                                                mem[_30325 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30325 + s + 574] = mem[_30325 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30096), address(_31466)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30325 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30325 + 241] = address(_30096)
                                                mem[_30325 + 189] = 40
                                                mem[_30325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 294] = stor1
                                                mem[_30325 + 314] = sha3(mem[_30325 + 221 len 20], address(_30096))
                                                mem[_30325 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30325 + 261] = 85
                                                _33768 = sha3(0, stor1, sha3(mem[_30325 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30325 + 378] = 0
                                                mem[64] = _30325 + 410
                                                mem[_30325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30325 + 446] = 0
                                                mem[_30325 + 478] = address(_33768)
                                                mem[_30325 + 510] = 128
                                                mem[_30325 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30325 + s + 574] = mem[_30325 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_33768), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30080) == address(_30096):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30325 + 189] = 0
                                            mem[64] = _30325 + 221
                                            mem[_30325 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30325 + 225] = 0
                                            mem[_30325 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30325 + 289] = this.address
                                            mem[_30325 + 321] = 128
                                            mem[_30325 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30325 + s + 385] = mem[_30325 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31811 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30325 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30325 + 221] = address(_30096)
                                                mem[_30325 + 241] = address(_31811)
                                                mem[_30325 + 189] = 40
                                                mem[_30325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 294] = stor1
                                                mem[_30325 + 314] = sha3(address(_30096), address(_31811))
                                                mem[_30325 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30325 + 261] = 85
                                                mem[_30325 + 378] = 0
                                                mem[64] = _30325 + 410
                                                mem[_30325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 414] = 0
                                                mem[_30325 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30325 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31811)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30325 + 510] = 128
                                                mem[_30325 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30325 + s + 574] = mem[_30325 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30096), address(_31811)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30325 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30325 + 241] = address(_30096)
                                                mem[_30325 + 189] = 40
                                                mem[_30325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 294] = stor1
                                                mem[_30325 + 314] = sha3(mem[_30325 + 221 len 20], address(_30096))
                                                mem[_30325 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30325 + 261] = 85
                                                _35140 = sha3(0, stor1, sha3(mem[_30325 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30325 + 378] = 0
                                                mem[64] = _30325 + 410
                                                mem[_30325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 414] = 0
                                                mem[_30325 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30325 + 478] = address(_35140)
                                                mem[_30325 + 510] = 128
                                                mem[_30325 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30325 + s + 574] = mem[_30325 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_35140), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30325 + 189] = 0
                                            mem[64] = _30325 + 221
                                            mem[_30325 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30325 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30325 + 257] = 0
                                            mem[_30325 + 289] = this.address
                                            mem[_30325 + 321] = 128
                                            mem[_30325 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30325 + s + 385] = mem[_30325 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31812 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30325 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30325 + 221] = address(_30096)
                                                mem[_30325 + 241] = address(_31812)
                                                mem[_30325 + 189] = 40
                                                mem[_30325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 294] = stor1
                                                mem[_30325 + 314] = sha3(address(_30096), address(_31812))
                                                mem[_30325 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30325 + 261] = 85
                                                mem[_30325 + 378] = 0
                                                mem[64] = _30325 + 410
                                                mem[_30325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30325 + 446] = 0
                                                mem[_30325 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31812)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30325 + 510] = 128
                                                mem[_30325 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30325 + s + 574] = mem[_30325 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30096), address(_31812)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30325 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30325 + 241] = address(_30096)
                                                mem[_30325 + 189] = 40
                                                mem[_30325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 294] = stor1
                                                mem[_30325 + 314] = sha3(mem[_30325 + 221 len 20], address(_30096))
                                                mem[_30325 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30325 + 261] = 85
                                                _35156 = sha3(0, stor1, sha3(mem[_30325 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30325 + 378] = 0
                                                mem[64] = _30325 + 410
                                                mem[_30325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30325 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30325 + 446] = 0
                                                mem[_30325 + 478] = address(_35156)
                                                mem[_30325 + 510] = 128
                                                mem[_30325 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30325 + s + 574] = mem[_30325 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30328, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_35156), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30333 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                            mem[mem[64] + 52] = address(_30080)
                            _30334 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30336 = sha3(mem[_30334 + 32 len mem[_30334]])
                            mem[_30333 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30333 + 105] = stor1
                            mem[_30333 + 125] = _30336
                            mem[_30333 + 157] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                            mem[_30333 + 72] = 85
                            require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                            staticcall address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).getReserves() with:
                                    gas gas_remaining wei
                            mem[_30333 + 189 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            mem[_30333 + 193] = address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            require ext_code.size(address(_30080))
                            staticcall address(_30080).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            mem[_30333 + 189] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if address(_30080) == address(_30096):
                                if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30333 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30333 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30333 + 295 len 26]
                                if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30080) == address(_30096):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30333 + 189] = 0
                                            mem[64] = _30333 + 221
                                            mem[_30333 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30333 + 225] = 0
                                            mem[_30333 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30333 + 289] = this.address
                                            mem[_30333 + 321] = 128
                                            mem[_30333 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30333 + s + 385] = mem[_30333 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31469 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30333 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30333 + 221] = address(_30096)
                                                mem[_30333 + 241] = address(_31469)
                                                mem[_30333 + 189] = 40
                                                mem[_30333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 294] = stor1
                                                mem[_30333 + 314] = sha3(address(_30096), address(_31469))
                                                mem[_30333 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30333 + 261] = 85
                                                mem[_30333 + 378] = 0
                                                mem[64] = _30333 + 410
                                                mem[_30333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 414] = 0
                                                mem[_30333 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30333 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31469)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30333 + 510] = 128
                                                mem[_30333 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30333 + s + 574] = mem[_30333 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30096), address(_31469)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30333 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30333 + 241] = address(_30096)
                                                mem[_30333 + 189] = 40
                                                mem[_30333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 294] = stor1
                                                mem[_30333 + 314] = sha3(mem[_30333 + 221 len 20], address(_30096))
                                                mem[_30333 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30333 + 261] = 85
                                                _33788 = sha3(0, stor1, sha3(mem[_30333 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30333 + 378] = 0
                                                mem[64] = _30333 + 410
                                                mem[_30333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 414] = 0
                                                mem[_30333 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30333 + 478] = address(_33788)
                                                mem[_30333 + 510] = 128
                                                mem[_30333 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30333 + s + 574] = mem[_30333 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_33788), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30333 + 189] = 0
                                            mem[64] = _30333 + 221
                                            mem[_30333 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30333 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30333 + 257] = 0
                                            mem[_30333 + 289] = this.address
                                            mem[_30333 + 321] = 128
                                            mem[_30333 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30333 + s + 385] = mem[_30333 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31470 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30333 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30333 + 221] = address(_30096)
                                                mem[_30333 + 241] = address(_31470)
                                                mem[_30333 + 189] = 40
                                                mem[_30333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 294] = stor1
                                                mem[_30333 + 314] = sha3(address(_30096), address(_31470))
                                                mem[_30333 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30333 + 261] = 85
                                                mem[_30333 + 378] = 0
                                                mem[64] = _30333 + 410
                                                mem[_30333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30333 + 446] = 0
                                                mem[_30333 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31470)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30333 + 510] = 128
                                                mem[_30333 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30333 + s + 574] = mem[_30333 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30096), address(_31470)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30333 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30333 + 241] = address(_30096)
                                                mem[_30333 + 189] = 40
                                                mem[_30333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 294] = stor1
                                                mem[_30333 + 314] = sha3(mem[_30333 + 221 len 20], address(_30096))
                                                mem[_30333 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30333 + 261] = 85
                                                _33804 = sha3(0, stor1, sha3(mem[_30333 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30333 + 378] = 0
                                                mem[64] = _30333 + 410
                                                mem[_30333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30333 + 446] = 0
                                                mem[_30333 + 478] = address(_33804)
                                                mem[_30333 + 510] = 128
                                                mem[_30333 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30333 + s + 574] = mem[_30333 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_33804), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30080) == address(_30096):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30333 + 189] = 0
                                            mem[64] = _30333 + 221
                                            mem[_30333 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30333 + 225] = 0
                                            mem[_30333 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30333 + 289] = this.address
                                            mem[_30333 + 321] = 128
                                            mem[_30333 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30333 + s + 385] = mem[_30333 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31819 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30333 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30333 + 221] = address(_30096)
                                                mem[_30333 + 241] = address(_31819)
                                                mem[_30333 + 189] = 40
                                                mem[_30333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 294] = stor1
                                                mem[_30333 + 314] = sha3(address(_30096), address(_31819))
                                                mem[_30333 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30333 + 261] = 85
                                                mem[_30333 + 378] = 0
                                                mem[64] = _30333 + 410
                                                mem[_30333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 414] = 0
                                                mem[_30333 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30333 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31819)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30333 + 510] = 128
                                                mem[_30333 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30333 + s + 574] = mem[_30333 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30096), address(_31819)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30333 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30333 + 241] = address(_30096)
                                                mem[_30333 + 189] = 40
                                                mem[_30333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 294] = stor1
                                                mem[_30333 + 314] = sha3(mem[_30333 + 221 len 20], address(_30096))
                                                mem[_30333 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30333 + 261] = 85
                                                _35172 = sha3(0, stor1, sha3(mem[_30333 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30333 + 378] = 0
                                                mem[64] = _30333 + 410
                                                mem[_30333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 414] = 0
                                                mem[_30333 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30333 + 478] = address(_35172)
                                                mem[_30333 + 510] = 128
                                                mem[_30333 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30333 + s + 574] = mem[_30333 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_35172), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30333 + 189] = 0
                                            mem[64] = _30333 + 221
                                            mem[_30333 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30333 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30333 + 257] = 0
                                            mem[_30333 + 289] = this.address
                                            mem[_30333 + 321] = 128
                                            mem[_30333 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30333 + s + 385] = mem[_30333 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31820 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30333 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30333 + 221] = address(_30096)
                                                mem[_30333 + 241] = address(_31820)
                                                mem[_30333 + 189] = 40
                                                mem[_30333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 294] = stor1
                                                mem[_30333 + 314] = sha3(address(_30096), address(_31820))
                                                mem[_30333 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30333 + 261] = 85
                                                mem[_30333 + 378] = 0
                                                mem[64] = _30333 + 410
                                                mem[_30333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30333 + 446] = 0
                                                mem[_30333 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31820)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30333 + 510] = 128
                                                mem[_30333 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30333 + s + 574] = mem[_30333 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30096), address(_31820)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30333 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30333 + 241] = address(_30096)
                                                mem[_30333 + 189] = 40
                                                mem[_30333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 294] = stor1
                                                mem[_30333 + 314] = sha3(mem[_30333 + 221 len 20], address(_30096))
                                                mem[_30333 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30333 + 261] = 85
                                                _35188 = sha3(0, stor1, sha3(mem[_30333 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30333 + 378] = 0
                                                mem[64] = _30333 + 410
                                                mem[_30333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30333 + 446] = 0
                                                mem[_30333 + 478] = address(_35188)
                                                mem[_30333 + 510] = 128
                                                mem[_30333 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30333 + s + 574] = mem[_30333 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_35188), 128, 0
                            else:
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30333 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30333 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30333 + 295 len 26]
                                if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30080) == address(_30096):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30333 + 189] = 0
                                            mem[64] = _30333 + 221
                                            mem[_30333 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30333 + 225] = 0
                                            mem[_30333 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30333 + 289] = this.address
                                            mem[_30333 + 321] = 128
                                            mem[_30333 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30333 + s + 385] = mem[_30333 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31473 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30333 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30333 + 221] = address(_30096)
                                                mem[_30333 + 241] = address(_31473)
                                                mem[_30333 + 189] = 40
                                                mem[_30333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 294] = stor1
                                                mem[_30333 + 314] = sha3(address(_30096), address(_31473))
                                                mem[_30333 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30333 + 261] = 85
                                                mem[_30333 + 378] = 0
                                                mem[64] = _30333 + 410
                                                mem[_30333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 414] = 0
                                                mem[_30333 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30333 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31473)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30333 + 510] = 128
                                                mem[_30333 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30333 + s + 574] = mem[_30333 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30096), address(_31473)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30333 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30333 + 241] = address(_30096)
                                                mem[_30333 + 189] = 40
                                                mem[_30333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 294] = stor1
                                                mem[_30333 + 314] = sha3(mem[_30333 + 221 len 20], address(_30096))
                                                mem[_30333 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30333 + 261] = 85
                                                _33824 = sha3(0, stor1, sha3(mem[_30333 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30333 + 378] = 0
                                                mem[64] = _30333 + 410
                                                mem[_30333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 414] = 0
                                                mem[_30333 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30333 + 478] = address(_33824)
                                                mem[_30333 + 510] = 128
                                                mem[_30333 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30333 + s + 574] = mem[_30333 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_33824), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30333 + 189] = 0
                                            mem[64] = _30333 + 221
                                            mem[_30333 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30333 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30333 + 257] = 0
                                            mem[_30333 + 289] = this.address
                                            mem[_30333 + 321] = 128
                                            mem[_30333 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30333 + s + 385] = mem[_30333 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31474 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30333 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30333 + 221] = address(_30096)
                                                mem[_30333 + 241] = address(_31474)
                                                mem[_30333 + 189] = 40
                                                mem[_30333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 294] = stor1
                                                mem[_30333 + 314] = sha3(address(_30096), address(_31474))
                                                mem[_30333 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30333 + 261] = 85
                                                mem[_30333 + 378] = 0
                                                mem[64] = _30333 + 410
                                                mem[_30333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30333 + 446] = 0
                                                mem[_30333 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31474)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30333 + 510] = 128
                                                mem[_30333 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30333 + s + 574] = mem[_30333 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30096), address(_31474)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30333 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30333 + 241] = address(_30096)
                                                mem[_30333 + 189] = 40
                                                mem[_30333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 294] = stor1
                                                mem[_30333 + 314] = sha3(mem[_30333 + 221 len 20], address(_30096))
                                                mem[_30333 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30333 + 261] = 85
                                                _33840 = sha3(0, stor1, sha3(mem[_30333 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30333 + 378] = 0
                                                mem[64] = _30333 + 410
                                                mem[_30333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30333 + 446] = 0
                                                mem[_30333 + 478] = address(_33840)
                                                mem[_30333 + 510] = 128
                                                mem[_30333 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30333 + s + 574] = mem[_30333 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_33840), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30080) == address(_30096):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30333 + 189] = 0
                                            mem[64] = _30333 + 221
                                            mem[_30333 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30333 + 225] = 0
                                            mem[_30333 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30333 + 289] = this.address
                                            mem[_30333 + 321] = 128
                                            mem[_30333 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30333 + s + 385] = mem[_30333 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31827 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30333 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30333 + 221] = address(_30096)
                                                mem[_30333 + 241] = address(_31827)
                                                mem[_30333 + 189] = 40
                                                mem[_30333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 294] = stor1
                                                mem[_30333 + 314] = sha3(address(_30096), address(_31827))
                                                mem[_30333 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30333 + 261] = 85
                                                mem[_30333 + 378] = 0
                                                mem[64] = _30333 + 410
                                                mem[_30333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 414] = 0
                                                mem[_30333 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30333 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31827)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30333 + 510] = 128
                                                mem[_30333 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30333 + s + 574] = mem[_30333 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30096), address(_31827)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30333 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30333 + 241] = address(_30096)
                                                mem[_30333 + 189] = 40
                                                mem[_30333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 294] = stor1
                                                mem[_30333 + 314] = sha3(mem[_30333 + 221 len 20], address(_30096))
                                                mem[_30333 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30333 + 261] = 85
                                                _35204 = sha3(0, stor1, sha3(mem[_30333 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30333 + 378] = 0
                                                mem[64] = _30333 + 410
                                                mem[_30333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 414] = 0
                                                mem[_30333 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30333 + 478] = address(_35204)
                                                mem[_30333 + 510] = 128
                                                mem[_30333 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30333 + s + 574] = mem[_30333 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_35204), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30333 + 189] = 0
                                            mem[64] = _30333 + 221
                                            mem[_30333 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30333 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30333 + 257] = 0
                                            mem[_30333 + 289] = this.address
                                            mem[_30333 + 321] = 128
                                            mem[_30333 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30333 + s + 385] = mem[_30333 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31828 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30096) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30333 + 292 len 29]
                                            if address(_30096) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30096):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30333 + 221] = address(_30096)
                                                mem[_30333 + 241] = address(_31828)
                                                mem[_30333 + 189] = 40
                                                mem[_30333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 294] = stor1
                                                mem[_30333 + 314] = sha3(address(_30096), address(_31828))
                                                mem[_30333 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30333 + 261] = 85
                                                mem[_30333 + 378] = 0
                                                mem[64] = _30333 + 410
                                                mem[_30333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30333 + 446] = 0
                                                mem[_30333 + 478] = address(sha3(0, stor1, sha3(address(_30096), address(_31828)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30333 + 510] = 128
                                                mem[_30333 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30333 + s + 574] = mem[_30333 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30096), address(_31828)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30333 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30333 + 241] = address(_30096)
                                                mem[_30333 + 189] = 40
                                                mem[_30333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 294] = stor1
                                                mem[_30333 + 314] = sha3(mem[_30333 + 221 len 20], address(_30096))
                                                mem[_30333 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30333 + 261] = 85
                                                _35220 = sha3(0, stor1, sha3(mem[_30333 + 221 len 20], address(_30096)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30333 + 378] = 0
                                                mem[64] = _30333 + 410
                                                mem[_30333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30333 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30333 + 446] = 0
                                                mem[_30333 + 478] = address(_35220)
                                                mem[_30333 + 510] = 128
                                                mem[_30333 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30333 + s + 574] = mem[_30333 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30336, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_35220), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
            else:
                require return_data.size >= 32
                if not mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 388]:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
                idx = 0
                while idx < 1:
                    require idx < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                    _30083 = mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                    require idx + 1 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                    _30100 = mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                    if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] == mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                        revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] < mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                        if not mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] == mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] < mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            if not mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30341 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                            mem[mem[64] + 52] = address(_30100)
                            _30342 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30344 = sha3(mem[_30342 + 32 len mem[_30342]])
                            mem[_30341 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30341 + 105] = stor1
                            mem[_30341 + 125] = _30344
                            mem[_30341 + 157] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                            mem[_30341 + 72] = 85
                            require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                            staticcall address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).getReserves() with:
                                    gas gas_remaining wei
                            mem[_30341 + 189 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            mem[_30341 + 193] = address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            require ext_code.size(address(_30083))
                            staticcall address(_30083).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            mem[_30341 + 189] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if address(_30083) == address(_30083):
                                if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30341 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30341 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30341 + 295 len 26]
                                if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30083) == address(_30083):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30341 + 189] = 0
                                            mem[64] = _30341 + 221
                                            mem[_30341 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30341 + 225] = 0
                                            mem[_30341 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30341 + 289] = this.address
                                            mem[_30341 + 321] = 128
                                            mem[_30341 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30341 + s + 385] = mem[_30341 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31477 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30341 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30341 + 221] = address(_30100)
                                                mem[_30341 + 241] = address(_31477)
                                                mem[_30341 + 189] = 40
                                                mem[_30341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 294] = stor1
                                                mem[_30341 + 314] = sha3(address(_30100), address(_31477))
                                                mem[_30341 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30341 + 261] = 85
                                                mem[_30341 + 378] = 0
                                                mem[64] = _30341 + 410
                                                mem[_30341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 414] = 0
                                                mem[_30341 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30341 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31477)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30341 + 510] = 128
                                                mem[_30341 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30341 + s + 574] = mem[_30341 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30100), address(_31477)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30341 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30341 + 241] = address(_30100)
                                                mem[_30341 + 189] = 40
                                                mem[_30341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 294] = stor1
                                                mem[_30341 + 314] = sha3(mem[_30341 + 221 len 20], address(_30100))
                                                mem[_30341 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30341 + 261] = 85
                                                _33860 = sha3(0, stor1, sha3(mem[_30341 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30341 + 378] = 0
                                                mem[64] = _30341 + 410
                                                mem[_30341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 414] = 0
                                                mem[_30341 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30341 + 478] = address(_33860)
                                                mem[_30341 + 510] = 128
                                                mem[_30341 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30341 + s + 574] = mem[_30341 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_33860), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30341 + 189] = 0
                                            mem[64] = _30341 + 221
                                            mem[_30341 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30341 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30341 + 257] = 0
                                            mem[_30341 + 289] = this.address
                                            mem[_30341 + 321] = 128
                                            mem[_30341 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30341 + s + 385] = mem[_30341 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31478 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30341 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30341 + 221] = address(_30100)
                                                mem[_30341 + 241] = address(_31478)
                                                mem[_30341 + 189] = 40
                                                mem[_30341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 294] = stor1
                                                mem[_30341 + 314] = sha3(address(_30100), address(_31478))
                                                mem[_30341 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30341 + 261] = 85
                                                mem[_30341 + 378] = 0
                                                mem[64] = _30341 + 410
                                                mem[_30341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30341 + 446] = 0
                                                mem[_30341 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31478)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30341 + 510] = 128
                                                mem[_30341 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30341 + s + 574] = mem[_30341 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30100), address(_31478)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30341 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30341 + 241] = address(_30100)
                                                mem[_30341 + 189] = 40
                                                mem[_30341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 294] = stor1
                                                mem[_30341 + 314] = sha3(mem[_30341 + 221 len 20], address(_30100))
                                                mem[_30341 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30341 + 261] = 85
                                                _33876 = sha3(0, stor1, sha3(mem[_30341 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30341 + 378] = 0
                                                mem[64] = _30341 + 410
                                                mem[_30341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30341 + 446] = 0
                                                mem[_30341 + 478] = address(_33876)
                                                mem[_30341 + 510] = 128
                                                mem[_30341 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30341 + s + 574] = mem[_30341 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_33876), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30083) == address(_30083):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30341 + 189] = 0
                                            mem[64] = _30341 + 221
                                            mem[_30341 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30341 + 225] = 0
                                            mem[_30341 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30341 + 289] = this.address
                                            mem[_30341 + 321] = 128
                                            mem[_30341 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30341 + s + 385] = mem[_30341 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31835 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30341 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30341 + 221] = address(_30100)
                                                mem[_30341 + 241] = address(_31835)
                                                mem[_30341 + 189] = 40
                                                mem[_30341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 294] = stor1
                                                mem[_30341 + 314] = sha3(address(_30100), address(_31835))
                                                mem[_30341 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30341 + 261] = 85
                                                mem[_30341 + 378] = 0
                                                mem[64] = _30341 + 410
                                                mem[_30341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 414] = 0
                                                mem[_30341 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30341 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31835)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30341 + 510] = 128
                                                mem[_30341 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30341 + s + 574] = mem[_30341 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30100), address(_31835)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30341 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30341 + 241] = address(_30100)
                                                mem[_30341 + 189] = 40
                                                mem[_30341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 294] = stor1
                                                mem[_30341 + 314] = sha3(mem[_30341 + 221 len 20], address(_30100))
                                                mem[_30341 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30341 + 261] = 85
                                                _35236 = sha3(0, stor1, sha3(mem[_30341 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30341 + 378] = 0
                                                mem[64] = _30341 + 410
                                                mem[_30341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 414] = 0
                                                mem[_30341 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30341 + 478] = address(_35236)
                                                mem[_30341 + 510] = 128
                                                mem[_30341 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30341 + s + 574] = mem[_30341 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_35236), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30341 + 189] = 0
                                            mem[64] = _30341 + 221
                                            mem[_30341 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30341 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30341 + 257] = 0
                                            mem[_30341 + 289] = this.address
                                            mem[_30341 + 321] = 128
                                            mem[_30341 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30341 + s + 385] = mem[_30341 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31836 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30341 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30341 + 221] = address(_30100)
                                                mem[_30341 + 241] = address(_31836)
                                                mem[_30341 + 189] = 40
                                                mem[_30341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 294] = stor1
                                                mem[_30341 + 314] = sha3(address(_30100), address(_31836))
                                                mem[_30341 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30341 + 261] = 85
                                                mem[_30341 + 378] = 0
                                                mem[64] = _30341 + 410
                                                mem[_30341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30341 + 446] = 0
                                                mem[_30341 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31836)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30341 + 510] = 128
                                                mem[_30341 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30341 + s + 574] = mem[_30341 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30100), address(_31836)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30341 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30341 + 241] = address(_30100)
                                                mem[_30341 + 189] = 40
                                                mem[_30341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 294] = stor1
                                                mem[_30341 + 314] = sha3(mem[_30341 + 221 len 20], address(_30100))
                                                mem[_30341 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30341 + 261] = 85
                                                _35252 = sha3(0, stor1, sha3(mem[_30341 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30341 + 378] = 0
                                                mem[64] = _30341 + 410
                                                mem[_30341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30341 + 446] = 0
                                                mem[_30341 + 478] = address(_35252)
                                                mem[_30341 + 510] = 128
                                                mem[_30341 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30341 + s + 574] = mem[_30341 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_35252), 128, 0
                            else:
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30341 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30341 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30341 + 295 len 26]
                                if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30083) == address(_30083):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30341 + 189] = 0
                                            mem[64] = _30341 + 221
                                            mem[_30341 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30341 + 225] = 0
                                            mem[_30341 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30341 + 289] = this.address
                                            mem[_30341 + 321] = 128
                                            mem[_30341 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30341 + s + 385] = mem[_30341 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31481 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30341 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30341 + 221] = address(_30100)
                                                mem[_30341 + 241] = address(_31481)
                                                mem[_30341 + 189] = 40
                                                mem[_30341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 294] = stor1
                                                mem[_30341 + 314] = sha3(address(_30100), address(_31481))
                                                mem[_30341 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30341 + 261] = 85
                                                mem[_30341 + 378] = 0
                                                mem[64] = _30341 + 410
                                                mem[_30341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 414] = 0
                                                mem[_30341 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30341 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31481)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30341 + 510] = 128
                                                mem[_30341 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30341 + s + 574] = mem[_30341 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30100), address(_31481)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30341 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30341 + 241] = address(_30100)
                                                mem[_30341 + 189] = 40
                                                mem[_30341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 294] = stor1
                                                mem[_30341 + 314] = sha3(mem[_30341 + 221 len 20], address(_30100))
                                                mem[_30341 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30341 + 261] = 85
                                                _33896 = sha3(0, stor1, sha3(mem[_30341 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30341 + 378] = 0
                                                mem[64] = _30341 + 410
                                                mem[_30341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 414] = 0
                                                mem[_30341 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30341 + 478] = address(_33896)
                                                mem[_30341 + 510] = 128
                                                mem[_30341 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30341 + s + 574] = mem[_30341 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_33896), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30341 + 189] = 0
                                            mem[64] = _30341 + 221
                                            mem[_30341 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30341 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30341 + 257] = 0
                                            mem[_30341 + 289] = this.address
                                            mem[_30341 + 321] = 128
                                            mem[_30341 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30341 + s + 385] = mem[_30341 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31482 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30341 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30341 + 221] = address(_30100)
                                                mem[_30341 + 241] = address(_31482)
                                                mem[_30341 + 189] = 40
                                                mem[_30341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 294] = stor1
                                                mem[_30341 + 314] = sha3(address(_30100), address(_31482))
                                                mem[_30341 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30341 + 261] = 85
                                                mem[_30341 + 378] = 0
                                                mem[64] = _30341 + 410
                                                mem[_30341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30341 + 446] = 0
                                                mem[_30341 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31482)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30341 + 510] = 128
                                                mem[_30341 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30341 + s + 574] = mem[_30341 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30100), address(_31482)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30341 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30341 + 241] = address(_30100)
                                                mem[_30341 + 189] = 40
                                                mem[_30341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 294] = stor1
                                                mem[_30341 + 314] = sha3(mem[_30341 + 221 len 20], address(_30100))
                                                mem[_30341 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30341 + 261] = 85
                                                _33912 = sha3(0, stor1, sha3(mem[_30341 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30341 + 378] = 0
                                                mem[64] = _30341 + 410
                                                mem[_30341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30341 + 446] = 0
                                                mem[_30341 + 478] = address(_33912)
                                                mem[_30341 + 510] = 128
                                                mem[_30341 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30341 + s + 574] = mem[_30341 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_33912), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30083) == address(_30083):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30341 + 189] = 0
                                            mem[64] = _30341 + 221
                                            mem[_30341 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30341 + 225] = 0
                                            mem[_30341 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30341 + 289] = this.address
                                            mem[_30341 + 321] = 128
                                            mem[_30341 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30341 + s + 385] = mem[_30341 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31843 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30341 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30341 + 221] = address(_30100)
                                                mem[_30341 + 241] = address(_31843)
                                                mem[_30341 + 189] = 40
                                                mem[_30341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 294] = stor1
                                                mem[_30341 + 314] = sha3(address(_30100), address(_31843))
                                                mem[_30341 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30341 + 261] = 85
                                                mem[_30341 + 378] = 0
                                                mem[64] = _30341 + 410
                                                mem[_30341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 414] = 0
                                                mem[_30341 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30341 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31843)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30341 + 510] = 128
                                                mem[_30341 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30341 + s + 574] = mem[_30341 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30100), address(_31843)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30341 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30341 + 241] = address(_30100)
                                                mem[_30341 + 189] = 40
                                                mem[_30341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 294] = stor1
                                                mem[_30341 + 314] = sha3(mem[_30341 + 221 len 20], address(_30100))
                                                mem[_30341 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30341 + 261] = 85
                                                _35268 = sha3(0, stor1, sha3(mem[_30341 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30341 + 378] = 0
                                                mem[64] = _30341 + 410
                                                mem[_30341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 414] = 0
                                                mem[_30341 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30341 + 478] = address(_35268)
                                                mem[_30341 + 510] = 128
                                                mem[_30341 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30341 + s + 574] = mem[_30341 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_35268), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30341 + 189] = 0
                                            mem[64] = _30341 + 221
                                            mem[_30341 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30341 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30341 + 257] = 0
                                            mem[_30341 + 289] = this.address
                                            mem[_30341 + 321] = 128
                                            mem[_30341 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30341 + s + 385] = mem[_30341 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31844 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30341 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30341 + 221] = address(_30100)
                                                mem[_30341 + 241] = address(_31844)
                                                mem[_30341 + 189] = 40
                                                mem[_30341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 294] = stor1
                                                mem[_30341 + 314] = sha3(address(_30100), address(_31844))
                                                mem[_30341 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30341 + 261] = 85
                                                mem[_30341 + 378] = 0
                                                mem[64] = _30341 + 410
                                                mem[_30341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30341 + 446] = 0
                                                mem[_30341 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31844)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30341 + 510] = 128
                                                mem[_30341 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30341 + s + 574] = mem[_30341 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30100), address(_31844)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30341 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30341 + 241] = address(_30100)
                                                mem[_30341 + 189] = 40
                                                mem[_30341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 294] = stor1
                                                mem[_30341 + 314] = sha3(mem[_30341 + 221 len 20], address(_30100))
                                                mem[_30341 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30341 + 261] = 85
                                                _35284 = sha3(0, stor1, sha3(mem[_30341 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30341 + 378] = 0
                                                mem[64] = _30341 + 410
                                                mem[_30341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30341 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30341 + 446] = 0
                                                mem[_30341 + 478] = address(_35284)
                                                mem[_30341 + 510] = 128
                                                mem[_30341 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30341 + s + 574] = mem[_30341 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30344, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_35284), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30349 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                            mem[mem[64] + 52] = address(_30083)
                            _30350 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30352 = sha3(mem[_30350 + 32 len mem[_30350]])
                            mem[_30349 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30349 + 105] = stor1
                            mem[_30349 + 125] = _30352
                            mem[_30349 + 157] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                            mem[_30349 + 72] = 85
                            require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                            staticcall address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).getReserves() with:
                                    gas gas_remaining wei
                            mem[_30349 + 189 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            mem[_30349 + 193] = address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            require ext_code.size(address(_30083))
                            staticcall address(_30083).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            mem[_30349 + 189] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if address(_30083) == address(_30083):
                                if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30349 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30349 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30349 + 295 len 26]
                                if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30083) == address(_30083):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30349 + 189] = 0
                                            mem[64] = _30349 + 221
                                            mem[_30349 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30349 + 225] = 0
                                            mem[_30349 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30349 + 289] = this.address
                                            mem[_30349 + 321] = 128
                                            mem[_30349 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30349 + s + 385] = mem[_30349 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31485 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30349 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30349 + 221] = address(_30100)
                                                mem[_30349 + 241] = address(_31485)
                                                mem[_30349 + 189] = 40
                                                mem[_30349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 294] = stor1
                                                mem[_30349 + 314] = sha3(address(_30100), address(_31485))
                                                mem[_30349 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30349 + 261] = 85
                                                mem[_30349 + 378] = 0
                                                mem[64] = _30349 + 410
                                                mem[_30349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 414] = 0
                                                mem[_30349 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30349 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31485)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30349 + 510] = 128
                                                mem[_30349 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30349 + s + 574] = mem[_30349 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30100), address(_31485)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30349 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30349 + 241] = address(_30100)
                                                mem[_30349 + 189] = 40
                                                mem[_30349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 294] = stor1
                                                mem[_30349 + 314] = sha3(mem[_30349 + 221 len 20], address(_30100))
                                                mem[_30349 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30349 + 261] = 85
                                                _33932 = sha3(0, stor1, sha3(mem[_30349 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30349 + 378] = 0
                                                mem[64] = _30349 + 410
                                                mem[_30349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 414] = 0
                                                mem[_30349 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30349 + 478] = address(_33932)
                                                mem[_30349 + 510] = 128
                                                mem[_30349 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30349 + s + 574] = mem[_30349 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_33932), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30349 + 189] = 0
                                            mem[64] = _30349 + 221
                                            mem[_30349 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30349 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30349 + 257] = 0
                                            mem[_30349 + 289] = this.address
                                            mem[_30349 + 321] = 128
                                            mem[_30349 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30349 + s + 385] = mem[_30349 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31486 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30349 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30349 + 221] = address(_30100)
                                                mem[_30349 + 241] = address(_31486)
                                                mem[_30349 + 189] = 40
                                                mem[_30349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 294] = stor1
                                                mem[_30349 + 314] = sha3(address(_30100), address(_31486))
                                                mem[_30349 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30349 + 261] = 85
                                                mem[_30349 + 378] = 0
                                                mem[64] = _30349 + 410
                                                mem[_30349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30349 + 446] = 0
                                                mem[_30349 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31486)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30349 + 510] = 128
                                                mem[_30349 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30349 + s + 574] = mem[_30349 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30100), address(_31486)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30349 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30349 + 241] = address(_30100)
                                                mem[_30349 + 189] = 40
                                                mem[_30349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 294] = stor1
                                                mem[_30349 + 314] = sha3(mem[_30349 + 221 len 20], address(_30100))
                                                mem[_30349 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30349 + 261] = 85
                                                _33948 = sha3(0, stor1, sha3(mem[_30349 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30349 + 378] = 0
                                                mem[64] = _30349 + 410
                                                mem[_30349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30349 + 446] = 0
                                                mem[_30349 + 478] = address(_33948)
                                                mem[_30349 + 510] = 128
                                                mem[_30349 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30349 + s + 574] = mem[_30349 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_33948), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30083) == address(_30083):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30349 + 189] = 0
                                            mem[64] = _30349 + 221
                                            mem[_30349 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30349 + 225] = 0
                                            mem[_30349 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30349 + 289] = this.address
                                            mem[_30349 + 321] = 128
                                            mem[_30349 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30349 + s + 385] = mem[_30349 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31851 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30349 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30349 + 221] = address(_30100)
                                                mem[_30349 + 241] = address(_31851)
                                                mem[_30349 + 189] = 40
                                                mem[_30349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 294] = stor1
                                                mem[_30349 + 314] = sha3(address(_30100), address(_31851))
                                                mem[_30349 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30349 + 261] = 85
                                                mem[_30349 + 378] = 0
                                                mem[64] = _30349 + 410
                                                mem[_30349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 414] = 0
                                                mem[_30349 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30349 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31851)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30349 + 510] = 128
                                                mem[_30349 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30349 + s + 574] = mem[_30349 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30100), address(_31851)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30349 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30349 + 241] = address(_30100)
                                                mem[_30349 + 189] = 40
                                                mem[_30349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 294] = stor1
                                                mem[_30349 + 314] = sha3(mem[_30349 + 221 len 20], address(_30100))
                                                mem[_30349 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30349 + 261] = 85
                                                _35300 = sha3(0, stor1, sha3(mem[_30349 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30349 + 378] = 0
                                                mem[64] = _30349 + 410
                                                mem[_30349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 414] = 0
                                                mem[_30349 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30349 + 478] = address(_35300)
                                                mem[_30349 + 510] = 128
                                                mem[_30349 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30349 + s + 574] = mem[_30349 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_35300), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30349 + 189] = 0
                                            mem[64] = _30349 + 221
                                            mem[_30349 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30349 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30349 + 257] = 0
                                            mem[_30349 + 289] = this.address
                                            mem[_30349 + 321] = 128
                                            mem[_30349 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30349 + s + 385] = mem[_30349 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31852 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30349 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30349 + 221] = address(_30100)
                                                mem[_30349 + 241] = address(_31852)
                                                mem[_30349 + 189] = 40
                                                mem[_30349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 294] = stor1
                                                mem[_30349 + 314] = sha3(address(_30100), address(_31852))
                                                mem[_30349 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30349 + 261] = 85
                                                mem[_30349 + 378] = 0
                                                mem[64] = _30349 + 410
                                                mem[_30349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30349 + 446] = 0
                                                mem[_30349 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31852)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30349 + 510] = 128
                                                mem[_30349 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30349 + s + 574] = mem[_30349 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30100), address(_31852)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30349 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30349 + 241] = address(_30100)
                                                mem[_30349 + 189] = 40
                                                mem[_30349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 294] = stor1
                                                mem[_30349 + 314] = sha3(mem[_30349 + 221 len 20], address(_30100))
                                                mem[_30349 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30349 + 261] = 85
                                                _35316 = sha3(0, stor1, sha3(mem[_30349 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30349 + 378] = 0
                                                mem[64] = _30349 + 410
                                                mem[_30349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30349 + 446] = 0
                                                mem[_30349 + 478] = address(_35316)
                                                mem[_30349 + 510] = 128
                                                mem[_30349 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30349 + s + 574] = mem[_30349 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_35316), 128, 0
                            else:
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30349 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30349 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30349 + 295 len 26]
                                if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30083) == address(_30083):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30349 + 189] = 0
                                            mem[64] = _30349 + 221
                                            mem[_30349 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30349 + 225] = 0
                                            mem[_30349 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30349 + 289] = this.address
                                            mem[_30349 + 321] = 128
                                            mem[_30349 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30349 + s + 385] = mem[_30349 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31489 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30349 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30349 + 221] = address(_30100)
                                                mem[_30349 + 241] = address(_31489)
                                                mem[_30349 + 189] = 40
                                                mem[_30349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 294] = stor1
                                                mem[_30349 + 314] = sha3(address(_30100), address(_31489))
                                                mem[_30349 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30349 + 261] = 85
                                                mem[_30349 + 378] = 0
                                                mem[64] = _30349 + 410
                                                mem[_30349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 414] = 0
                                                mem[_30349 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30349 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31489)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30349 + 510] = 128
                                                mem[_30349 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30349 + s + 574] = mem[_30349 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30100), address(_31489)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30349 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30349 + 241] = address(_30100)
                                                mem[_30349 + 189] = 40
                                                mem[_30349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 294] = stor1
                                                mem[_30349 + 314] = sha3(mem[_30349 + 221 len 20], address(_30100))
                                                mem[_30349 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30349 + 261] = 85
                                                _33968 = sha3(0, stor1, sha3(mem[_30349 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30349 + 378] = 0
                                                mem[64] = _30349 + 410
                                                mem[_30349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 414] = 0
                                                mem[_30349 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30349 + 478] = address(_33968)
                                                mem[_30349 + 510] = 128
                                                mem[_30349 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30349 + s + 574] = mem[_30349 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_33968), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30349 + 189] = 0
                                            mem[64] = _30349 + 221
                                            mem[_30349 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30349 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30349 + 257] = 0
                                            mem[_30349 + 289] = this.address
                                            mem[_30349 + 321] = 128
                                            mem[_30349 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30349 + s + 385] = mem[_30349 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31490 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30349 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30349 + 221] = address(_30100)
                                                mem[_30349 + 241] = address(_31490)
                                                mem[_30349 + 189] = 40
                                                mem[_30349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 294] = stor1
                                                mem[_30349 + 314] = sha3(address(_30100), address(_31490))
                                                mem[_30349 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30349 + 261] = 85
                                                mem[_30349 + 378] = 0
                                                mem[64] = _30349 + 410
                                                mem[_30349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30349 + 446] = 0
                                                mem[_30349 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31490)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30349 + 510] = 128
                                                mem[_30349 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30349 + s + 574] = mem[_30349 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30100), address(_31490)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30349 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30349 + 241] = address(_30100)
                                                mem[_30349 + 189] = 40
                                                mem[_30349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 294] = stor1
                                                mem[_30349 + 314] = sha3(mem[_30349 + 221 len 20], address(_30100))
                                                mem[_30349 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30349 + 261] = 85
                                                _33984 = sha3(0, stor1, sha3(mem[_30349 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30349 + 378] = 0
                                                mem[64] = _30349 + 410
                                                mem[_30349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30349 + 446] = 0
                                                mem[_30349 + 478] = address(_33984)
                                                mem[_30349 + 510] = 128
                                                mem[_30349 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30349 + s + 574] = mem[_30349 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_33984), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30083) == address(_30083):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30349 + 189] = 0
                                            mem[64] = _30349 + 221
                                            mem[_30349 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30349 + 225] = 0
                                            mem[_30349 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30349 + 289] = this.address
                                            mem[_30349 + 321] = 128
                                            mem[_30349 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30349 + s + 385] = mem[_30349 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31859 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30349 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30349 + 221] = address(_30100)
                                                mem[_30349 + 241] = address(_31859)
                                                mem[_30349 + 189] = 40
                                                mem[_30349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 294] = stor1
                                                mem[_30349 + 314] = sha3(address(_30100), address(_31859))
                                                mem[_30349 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30349 + 261] = 85
                                                mem[_30349 + 378] = 0
                                                mem[64] = _30349 + 410
                                                mem[_30349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 414] = 0
                                                mem[_30349 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30349 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31859)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30349 + 510] = 128
                                                mem[_30349 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30349 + s + 574] = mem[_30349 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30100), address(_31859)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30349 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30349 + 241] = address(_30100)
                                                mem[_30349 + 189] = 40
                                                mem[_30349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 294] = stor1
                                                mem[_30349 + 314] = sha3(mem[_30349 + 221 len 20], address(_30100))
                                                mem[_30349 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30349 + 261] = 85
                                                _35332 = sha3(0, stor1, sha3(mem[_30349 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30349 + 378] = 0
                                                mem[64] = _30349 + 410
                                                mem[_30349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 414] = 0
                                                mem[_30349 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30349 + 478] = address(_35332)
                                                mem[_30349 + 510] = 128
                                                mem[_30349 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30349 + s + 574] = mem[_30349 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_35332), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30349 + 189] = 0
                                            mem[64] = _30349 + 221
                                            mem[_30349 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30349 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30349 + 257] = 0
                                            mem[_30349 + 289] = this.address
                                            mem[_30349 + 321] = 128
                                            mem[_30349 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30349 + s + 385] = mem[_30349 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31860 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30349 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30349 + 221] = address(_30100)
                                                mem[_30349 + 241] = address(_31860)
                                                mem[_30349 + 189] = 40
                                                mem[_30349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 294] = stor1
                                                mem[_30349 + 314] = sha3(address(_30100), address(_31860))
                                                mem[_30349 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30349 + 261] = 85
                                                mem[_30349 + 378] = 0
                                                mem[64] = _30349 + 410
                                                mem[_30349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30349 + 446] = 0
                                                mem[_30349 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31860)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30349 + 510] = 128
                                                mem[_30349 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30349 + s + 574] = mem[_30349 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30100), address(_31860)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30349 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30349 + 241] = address(_30100)
                                                mem[_30349 + 189] = 40
                                                mem[_30349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 294] = stor1
                                                mem[_30349 + 314] = sha3(mem[_30349 + 221 len 20], address(_30100))
                                                mem[_30349 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30349 + 261] = 85
                                                _35348 = sha3(0, stor1, sha3(mem[_30349 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30349 + 378] = 0
                                                mem[64] = _30349 + 410
                                                mem[_30349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30349 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30349 + 446] = 0
                                                mem[_30349 + 478] = address(_35348)
                                                mem[_30349 + 510] = 128
                                                mem[_30349 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30349 + s + 574] = mem[_30349 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30352, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_35348), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] == mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20] < mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                            if not mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30357 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                            mem[mem[64] + 52] = address(_30100)
                            _30358 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30360 = sha3(mem[_30358 + 32 len mem[_30358]])
                            mem[_30357 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30357 + 105] = stor1
                            mem[_30357 + 125] = _30360
                            mem[_30357 + 157] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                            mem[_30357 + 72] = 85
                            require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                            staticcall address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).getReserves() with:
                                    gas gas_remaining wei
                            mem[_30357 + 189 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            mem[_30357 + 193] = address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            require ext_code.size(address(_30083))
                            staticcall address(_30083).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            mem[_30357 + 189] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if address(_30083) == address(_30100):
                                if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30357 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30357 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30357 + 295 len 26]
                                if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30083) == address(_30100):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30357 + 189] = 0
                                            mem[64] = _30357 + 221
                                            mem[_30357 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30357 + 225] = 0
                                            mem[_30357 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30357 + 289] = this.address
                                            mem[_30357 + 321] = 128
                                            mem[_30357 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30357 + s + 385] = mem[_30357 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31493 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30357 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30357 + 221] = address(_30100)
                                                mem[_30357 + 241] = address(_31493)
                                                mem[_30357 + 189] = 40
                                                mem[_30357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 294] = stor1
                                                mem[_30357 + 314] = sha3(address(_30100), address(_31493))
                                                mem[_30357 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30357 + 261] = 85
                                                mem[_30357 + 378] = 0
                                                mem[64] = _30357 + 410
                                                mem[_30357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 414] = 0
                                                mem[_30357 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30357 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31493)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30357 + 510] = 128
                                                mem[_30357 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30357 + s + 574] = mem[_30357 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30100), address(_31493)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30357 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30357 + 241] = address(_30100)
                                                mem[_30357 + 189] = 40
                                                mem[_30357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 294] = stor1
                                                mem[_30357 + 314] = sha3(mem[_30357 + 221 len 20], address(_30100))
                                                mem[_30357 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30357 + 261] = 85
                                                _34004 = sha3(0, stor1, sha3(mem[_30357 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30357 + 378] = 0
                                                mem[64] = _30357 + 410
                                                mem[_30357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 414] = 0
                                                mem[_30357 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30357 + 478] = address(_34004)
                                                mem[_30357 + 510] = 128
                                                mem[_30357 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30357 + s + 574] = mem[_30357 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_34004), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30357 + 189] = 0
                                            mem[64] = _30357 + 221
                                            mem[_30357 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30357 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30357 + 257] = 0
                                            mem[_30357 + 289] = this.address
                                            mem[_30357 + 321] = 128
                                            mem[_30357 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30357 + s + 385] = mem[_30357 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31494 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30357 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30357 + 221] = address(_30100)
                                                mem[_30357 + 241] = address(_31494)
                                                mem[_30357 + 189] = 40
                                                mem[_30357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 294] = stor1
                                                mem[_30357 + 314] = sha3(address(_30100), address(_31494))
                                                mem[_30357 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30357 + 261] = 85
                                                mem[_30357 + 378] = 0
                                                mem[64] = _30357 + 410
                                                mem[_30357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30357 + 446] = 0
                                                mem[_30357 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31494)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30357 + 510] = 128
                                                mem[_30357 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30357 + s + 574] = mem[_30357 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30100), address(_31494)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30357 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30357 + 241] = address(_30100)
                                                mem[_30357 + 189] = 40
                                                mem[_30357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 294] = stor1
                                                mem[_30357 + 314] = sha3(mem[_30357 + 221 len 20], address(_30100))
                                                mem[_30357 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30357 + 261] = 85
                                                _34020 = sha3(0, stor1, sha3(mem[_30357 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30357 + 378] = 0
                                                mem[64] = _30357 + 410
                                                mem[_30357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30357 + 446] = 0
                                                mem[_30357 + 478] = address(_34020)
                                                mem[_30357 + 510] = 128
                                                mem[_30357 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30357 + s + 574] = mem[_30357 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_34020), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30083) == address(_30100):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30357 + 189] = 0
                                            mem[64] = _30357 + 221
                                            mem[_30357 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30357 + 225] = 0
                                            mem[_30357 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30357 + 289] = this.address
                                            mem[_30357 + 321] = 128
                                            mem[_30357 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30357 + s + 385] = mem[_30357 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31867 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30357 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30357 + 221] = address(_30100)
                                                mem[_30357 + 241] = address(_31867)
                                                mem[_30357 + 189] = 40
                                                mem[_30357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 294] = stor1
                                                mem[_30357 + 314] = sha3(address(_30100), address(_31867))
                                                mem[_30357 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30357 + 261] = 85
                                                mem[_30357 + 378] = 0
                                                mem[64] = _30357 + 410
                                                mem[_30357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 414] = 0
                                                mem[_30357 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30357 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31867)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30357 + 510] = 128
                                                mem[_30357 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30357 + s + 574] = mem[_30357 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30100), address(_31867)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30357 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30357 + 241] = address(_30100)
                                                mem[_30357 + 189] = 40
                                                mem[_30357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 294] = stor1
                                                mem[_30357 + 314] = sha3(mem[_30357 + 221 len 20], address(_30100))
                                                mem[_30357 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30357 + 261] = 85
                                                _35364 = sha3(0, stor1, sha3(mem[_30357 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30357 + 378] = 0
                                                mem[64] = _30357 + 410
                                                mem[_30357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 414] = 0
                                                mem[_30357 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30357 + 478] = address(_35364)
                                                mem[_30357 + 510] = 128
                                                mem[_30357 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30357 + s + 574] = mem[_30357 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_35364), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30357 + 189] = 0
                                            mem[64] = _30357 + 221
                                            mem[_30357 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30357 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30357 + 257] = 0
                                            mem[_30357 + 289] = this.address
                                            mem[_30357 + 321] = 128
                                            mem[_30357 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30357 + s + 385] = mem[_30357 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31868 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30357 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30357 + 221] = address(_30100)
                                                mem[_30357 + 241] = address(_31868)
                                                mem[_30357 + 189] = 40
                                                mem[_30357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 294] = stor1
                                                mem[_30357 + 314] = sha3(address(_30100), address(_31868))
                                                mem[_30357 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30357 + 261] = 85
                                                mem[_30357 + 378] = 0
                                                mem[64] = _30357 + 410
                                                mem[_30357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30357 + 446] = 0
                                                mem[_30357 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31868)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30357 + 510] = 128
                                                mem[_30357 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30357 + s + 574] = mem[_30357 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30100), address(_31868)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30357 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30357 + 241] = address(_30100)
                                                mem[_30357 + 189] = 40
                                                mem[_30357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 294] = stor1
                                                mem[_30357 + 314] = sha3(mem[_30357 + 221 len 20], address(_30100))
                                                mem[_30357 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30357 + 261] = 85
                                                _35380 = sha3(0, stor1, sha3(mem[_30357 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30357 + 378] = 0
                                                mem[64] = _30357 + 410
                                                mem[_30357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30357 + 446] = 0
                                                mem[_30357 + 478] = address(_35380)
                                                mem[_30357 + 510] = 128
                                                mem[_30357 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30357 + s + 574] = mem[_30357 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_35380), 128, 0
                            else:
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30357 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30357 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30357 + 295 len 26]
                                if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30083) == address(_30100):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30357 + 189] = 0
                                            mem[64] = _30357 + 221
                                            mem[_30357 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30357 + 225] = 0
                                            mem[_30357 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30357 + 289] = this.address
                                            mem[_30357 + 321] = 128
                                            mem[_30357 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30357 + s + 385] = mem[_30357 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31497 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30357 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30357 + 221] = address(_30100)
                                                mem[_30357 + 241] = address(_31497)
                                                mem[_30357 + 189] = 40
                                                mem[_30357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 294] = stor1
                                                mem[_30357 + 314] = sha3(address(_30100), address(_31497))
                                                mem[_30357 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30357 + 261] = 85
                                                mem[_30357 + 378] = 0
                                                mem[64] = _30357 + 410
                                                mem[_30357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 414] = 0
                                                mem[_30357 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30357 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31497)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30357 + 510] = 128
                                                mem[_30357 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30357 + s + 574] = mem[_30357 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30100), address(_31497)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30357 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30357 + 241] = address(_30100)
                                                mem[_30357 + 189] = 40
                                                mem[_30357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 294] = stor1
                                                mem[_30357 + 314] = sha3(mem[_30357 + 221 len 20], address(_30100))
                                                mem[_30357 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30357 + 261] = 85
                                                _34040 = sha3(0, stor1, sha3(mem[_30357 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30357 + 378] = 0
                                                mem[64] = _30357 + 410
                                                mem[_30357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 414] = 0
                                                mem[_30357 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30357 + 478] = address(_34040)
                                                mem[_30357 + 510] = 128
                                                mem[_30357 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30357 + s + 574] = mem[_30357 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_34040), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30357 + 189] = 0
                                            mem[64] = _30357 + 221
                                            mem[_30357 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30357 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30357 + 257] = 0
                                            mem[_30357 + 289] = this.address
                                            mem[_30357 + 321] = 128
                                            mem[_30357 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30357 + s + 385] = mem[_30357 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31498 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30357 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30357 + 221] = address(_30100)
                                                mem[_30357 + 241] = address(_31498)
                                                mem[_30357 + 189] = 40
                                                mem[_30357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 294] = stor1
                                                mem[_30357 + 314] = sha3(address(_30100), address(_31498))
                                                mem[_30357 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30357 + 261] = 85
                                                mem[_30357 + 378] = 0
                                                mem[64] = _30357 + 410
                                                mem[_30357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30357 + 446] = 0
                                                mem[_30357 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31498)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30357 + 510] = 128
                                                mem[_30357 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30357 + s + 574] = mem[_30357 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30100), address(_31498)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30357 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30357 + 241] = address(_30100)
                                                mem[_30357 + 189] = 40
                                                mem[_30357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 294] = stor1
                                                mem[_30357 + 314] = sha3(mem[_30357 + 221 len 20], address(_30100))
                                                mem[_30357 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30357 + 261] = 85
                                                _34056 = sha3(0, stor1, sha3(mem[_30357 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30357 + 378] = 0
                                                mem[64] = _30357 + 410
                                                mem[_30357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30357 + 446] = 0
                                                mem[_30357 + 478] = address(_34056)
                                                mem[_30357 + 510] = 128
                                                mem[_30357 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30357 + s + 574] = mem[_30357 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_34056), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30083) == address(_30100):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30357 + 189] = 0
                                            mem[64] = _30357 + 221
                                            mem[_30357 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30357 + 225] = 0
                                            mem[_30357 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30357 + 289] = this.address
                                            mem[_30357 + 321] = 128
                                            mem[_30357 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30357 + s + 385] = mem[_30357 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31875 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30357 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30357 + 221] = address(_30100)
                                                mem[_30357 + 241] = address(_31875)
                                                mem[_30357 + 189] = 40
                                                mem[_30357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 294] = stor1
                                                mem[_30357 + 314] = sha3(address(_30100), address(_31875))
                                                mem[_30357 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30357 + 261] = 85
                                                mem[_30357 + 378] = 0
                                                mem[64] = _30357 + 410
                                                mem[_30357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 414] = 0
                                                mem[_30357 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30357 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31875)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30357 + 510] = 128
                                                mem[_30357 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30357 + s + 574] = mem[_30357 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30100), address(_31875)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30357 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30357 + 241] = address(_30100)
                                                mem[_30357 + 189] = 40
                                                mem[_30357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 294] = stor1
                                                mem[_30357 + 314] = sha3(mem[_30357 + 221 len 20], address(_30100))
                                                mem[_30357 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30357 + 261] = 85
                                                _35396 = sha3(0, stor1, sha3(mem[_30357 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30357 + 378] = 0
                                                mem[64] = _30357 + 410
                                                mem[_30357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 414] = 0
                                                mem[_30357 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30357 + 478] = address(_35396)
                                                mem[_30357 + 510] = 128
                                                mem[_30357 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30357 + s + 574] = mem[_30357 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_35396), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30357 + 189] = 0
                                            mem[64] = _30357 + 221
                                            mem[_30357 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30357 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30357 + 257] = 0
                                            mem[_30357 + 289] = this.address
                                            mem[_30357 + 321] = 128
                                            mem[_30357 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30357 + s + 385] = mem[_30357 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31876 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30357 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30357 + 221] = address(_30100)
                                                mem[_30357 + 241] = address(_31876)
                                                mem[_30357 + 189] = 40
                                                mem[_30357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 294] = stor1
                                                mem[_30357 + 314] = sha3(address(_30100), address(_31876))
                                                mem[_30357 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30357 + 261] = 85
                                                mem[_30357 + 378] = 0
                                                mem[64] = _30357 + 410
                                                mem[_30357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30357 + 446] = 0
                                                mem[_30357 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31876)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30357 + 510] = 128
                                                mem[_30357 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30357 + s + 574] = mem[_30357 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30100), address(_31876)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30357 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30357 + 241] = address(_30100)
                                                mem[_30357 + 189] = 40
                                                mem[_30357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 294] = stor1
                                                mem[_30357 + 314] = sha3(mem[_30357 + 221 len 20], address(_30100))
                                                mem[_30357 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30357 + 261] = 85
                                                _35412 = sha3(0, stor1, sha3(mem[_30357 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30357 + 378] = 0
                                                mem[64] = _30357 + 410
                                                mem[_30357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30357 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30357 + 446] = 0
                                                mem[_30357 + 478] = address(_35412)
                                                mem[_30357 + 510] = 128
                                                mem[_30357 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30357 + s + 574] = mem[_30357 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30360, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_35412), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _30365 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                            mem[mem[64] + 52] = address(_30083)
                            _30366 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _30368 = sha3(mem[_30366 + 32 len mem[_30366]])
                            mem[_30365 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_30365 + 105] = stor1
                            mem[_30365 + 125] = _30368
                            mem[_30365 + 157] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                            mem[_30365 + 72] = 85
                            require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                            staticcall address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).getReserves() with:
                                    gas gas_remaining wei
                            mem[_30365 + 189 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            mem[_30365 + 193] = address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            require ext_code.size(address(_30083))
                            staticcall address(_30083).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                            mem[_30365 + 189] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if address(_30083) == address(_30100):
                                if Mask(144, 112, ext_call.return_data[0]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if Mask(144, 112, ext_call.return_data[0]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30365 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30365 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30365 + 295 len 26]
                                if 9975 * Mask(144, 112, ext_call.return_data[0]) / 9975 != Mask(144, 112, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30083) == address(_30100):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30365 + 189] = 0
                                            mem[64] = _30365 + 221
                                            mem[_30365 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30365 + 225] = 0
                                            mem[_30365 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30365 + 289] = this.address
                                            mem[_30365 + 321] = 128
                                            mem[_30365 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30365 + s + 385] = mem[_30365 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31501 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30365 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30365 + 221] = address(_30100)
                                                mem[_30365 + 241] = address(_31501)
                                                mem[_30365 + 189] = 40
                                                mem[_30365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 294] = stor1
                                                mem[_30365 + 314] = sha3(address(_30100), address(_31501))
                                                mem[_30365 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30365 + 261] = 85
                                                mem[_30365 + 378] = 0
                                                mem[64] = _30365 + 410
                                                mem[_30365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 414] = 0
                                                mem[_30365 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30365 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31501)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30365 + 510] = 128
                                                mem[_30365 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30365 + s + 574] = mem[_30365 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30100), address(_31501)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30365 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30365 + 241] = address(_30100)
                                                mem[_30365 + 189] = 40
                                                mem[_30365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 294] = stor1
                                                mem[_30365 + 314] = sha3(mem[_30365 + 221 len 20], address(_30100))
                                                mem[_30365 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30365 + 261] = 85
                                                _34076 = sha3(0, stor1, sha3(mem[_30365 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30365 + 378] = 0
                                                mem[64] = _30365 + 410
                                                mem[_30365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 414] = 0
                                                mem[_30365 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30365 + 478] = address(_34076)
                                                mem[_30365 + 510] = 128
                                                mem[_30365 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30365 + s + 574] = mem[_30365 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_34076), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30365 + 189] = 0
                                            mem[64] = _30365 + 221
                                            mem[_30365 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30365 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30365 + 257] = 0
                                            mem[_30365 + 289] = this.address
                                            mem[_30365 + 321] = 128
                                            mem[_30365 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30365 + s + 385] = mem[_30365 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31502 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30365 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30365 + 221] = address(_30100)
                                                mem[_30365 + 241] = address(_31502)
                                                mem[_30365 + 189] = 40
                                                mem[_30365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 294] = stor1
                                                mem[_30365 + 314] = sha3(address(_30100), address(_31502))
                                                mem[_30365 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30365 + 261] = 85
                                                mem[_30365 + 378] = 0
                                                mem[64] = _30365 + 410
                                                mem[_30365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30365 + 446] = 0
                                                mem[_30365 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31502)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30365 + 510] = 128
                                                mem[_30365 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30365 + s + 574] = mem[_30365 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30100), address(_31502)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30365 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30365 + 241] = address(_30100)
                                                mem[_30365 + 189] = 40
                                                mem[_30365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 294] = stor1
                                                mem[_30365 + 314] = sha3(mem[_30365 + 221 len 20], address(_30100))
                                                mem[_30365 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30365 + 261] = 85
                                                _34092 = sha3(0, stor1, sha3(mem[_30365 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30365 + 378] = 0
                                                mem[64] = _30365 + 410
                                                mem[_30365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30365 + 446] = 0
                                                mem[_30365 + 478] = address(_34092)
                                                mem[_30365 + 510] = 128
                                                mem[_30365 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30365 + s + 574] = mem[_30365 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_34092), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != 9975 * Mask(144, 112, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[0]) / 10000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                    if address(_30083) == address(_30100):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30365 + 189] = 0
                                            mem[64] = _30365 + 221
                                            mem[_30365 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30365 + 225] = 0
                                            mem[_30365 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30365 + 289] = this.address
                                            mem[_30365 + 321] = 128
                                            mem[_30365 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30365 + s + 385] = mem[_30365 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31883 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30365 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30365 + 221] = address(_30100)
                                                mem[_30365 + 241] = address(_31883)
                                                mem[_30365 + 189] = 40
                                                mem[_30365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 294] = stor1
                                                mem[_30365 + 314] = sha3(address(_30100), address(_31883))
                                                mem[_30365 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30365 + 261] = 85
                                                mem[_30365 + 378] = 0
                                                mem[64] = _30365 + 410
                                                mem[_30365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 414] = 0
                                                mem[_30365 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30365 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31883)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30365 + 510] = 128
                                                mem[_30365 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30365 + s + 574] = mem[_30365 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30100), address(_31883)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30365 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30365 + 241] = address(_30100)
                                                mem[_30365 + 189] = 40
                                                mem[_30365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 294] = stor1
                                                mem[_30365 + 314] = sha3(mem[_30365 + 221 len 20], address(_30100))
                                                mem[_30365 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30365 + 261] = 85
                                                _35428 = sha3(0, stor1, sha3(mem[_30365 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30365 + 378] = 0
                                                mem[64] = _30365 + 410
                                                mem[_30365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 414] = 0
                                                mem[_30365 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30365 + 478] = address(_35428)
                                                mem[_30365 + 510] = 128
                                                mem[_30365 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30365 + s + 574] = mem[_30365 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), address(_35428), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30365 + 189] = 0
                                            mem[64] = _30365 + 221
                                            mem[_30365 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30365 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                            mem[_30365 + 257] = 0
                                            mem[_30365 + 289] = this.address
                                            mem[_30365 + 321] = 128
                                            mem[_30365 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30365 + s + 385] = mem[_30365 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31884 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30365 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30365 + 221] = address(_30100)
                                                mem[_30365 + 241] = address(_31884)
                                                mem[_30365 + 189] = 40
                                                mem[_30365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 294] = stor1
                                                mem[_30365 + 314] = sha3(address(_30100), address(_31884))
                                                mem[_30365 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30365 + 261] = 85
                                                mem[_30365 + 378] = 0
                                                mem[64] = _30365 + 410
                                                mem[_30365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30365 + 446] = 0
                                                mem[_30365 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31884)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30365 + 510] = 128
                                                mem[_30365 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30365 + s + 574] = mem[_30365 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30100), address(_31884)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30365 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30365 + 241] = address(_30100)
                                                mem[_30365 + 189] = 40
                                                mem[_30365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 294] = stor1
                                                mem[_30365 + 314] = sha3(mem[_30365 + 221 len 20], address(_30100))
                                                mem[_30365 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30365 + 261] = 85
                                                _35444 = sha3(0, stor1, sha3(mem[_30365 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30365 + 378] = 0
                                                mem[64] = _30365 + 410
                                                mem[_30365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0])
                                                mem[_30365 + 446] = 0
                                                mem[_30365 + 478] = address(_35444)
                                                mem[_30365 + 510] = 128
                                                mem[_30365 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30365 + s + 574] = mem[_30365 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[32])) - (9975 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32])) / (25 * Mask(112, 0, ext_call.return_data[0])) + (9975 * ext_call.return_data[0]), 0, address(_35444), 128, 0
                            else:
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) > ext_call.return_data[0]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 
                                                32,
                                                41,
                                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                                mem[_30365 + 298 len 23]
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30365 + 295 len 26]
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 32, 38, 0x5350616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_30365 + 295 len 26]
                                if (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])) / 9975 != ext_call.return_data[0] - Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30083) == address(_30100):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30365 + 189] = 0
                                            mem[64] = _30365 + 221
                                            mem[_30365 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30365 + 225] = 0
                                            mem[_30365 + 257] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30365 + 289] = this.address
                                            mem[_30365 + 321] = 128
                                            mem[_30365 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30365 + s + 385] = mem[_30365 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31505 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30365 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30365 + 221] = address(_30100)
                                                mem[_30365 + 241] = address(_31505)
                                                mem[_30365 + 189] = 40
                                                mem[_30365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 294] = stor1
                                                mem[_30365 + 314] = sha3(address(_30100), address(_31505))
                                                mem[_30365 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30365 + 261] = 85
                                                mem[_30365 + 378] = 0
                                                mem[64] = _30365 + 410
                                                mem[_30365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 414] = 0
                                                mem[_30365 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30365 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31505)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30365 + 510] = 128
                                                mem[_30365 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30365 + s + 574] = mem[_30365 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30100), address(_31505)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30365 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30365 + 241] = address(_30100)
                                                mem[_30365 + 189] = 40
                                                mem[_30365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 294] = stor1
                                                mem[_30365 + 314] = sha3(mem[_30365 + 221 len 20], address(_30100))
                                                mem[_30365 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30365 + 261] = 85
                                                _34112 = sha3(0, stor1, sha3(mem[_30365 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30365 + 378] = 0
                                                mem[64] = _30365 + 410
                                                mem[_30365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 414] = 0
                                                mem[_30365 + 446] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30365 + 478] = address(_34112)
                                                mem[_30365 + 510] = 128
                                                mem[_30365 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30365 + s + 574] = mem[_30365 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_34112), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30365 + 189] = 0
                                            mem[64] = _30365 + 221
                                            mem[_30365 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30365 + 225] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30365 + 257] = 0
                                            mem[_30365 + 289] = this.address
                                            mem[_30365 + 321] = 128
                                            mem[_30365 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30365 + s + 385] = mem[_30365 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31506 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30365 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30365 + 221] = address(_30100)
                                                mem[_30365 + 241] = address(_31506)
                                                mem[_30365 + 189] = 40
                                                mem[_30365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 294] = stor1
                                                mem[_30365 + 314] = sha3(address(_30100), address(_31506))
                                                mem[_30365 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30365 + 261] = 85
                                                mem[_30365 + 378] = 0
                                                mem[64] = _30365 + 410
                                                mem[_30365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30365 + 446] = 0
                                                mem[_30365 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31506)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30365 + 510] = 128
                                                mem[_30365 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30365 + s + 574] = mem[_30365 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30100), address(_31506)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30365 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30365 + 241] = address(_30100)
                                                mem[_30365 + 189] = 40
                                                mem[_30365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 294] = stor1
                                                mem[_30365 + 314] = sha3(mem[_30365 + 221 len 20], address(_30100))
                                                mem[_30365 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30365 + 261] = 85
                                                _34128 = sha3(0, stor1, sha3(mem[_30365 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30365 + 378] = 0
                                                mem[64] = _30365 + 410
                                                mem[_30365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 414] = 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30365 + 446] = 0
                                                mem[_30365 + 478] = address(_34128)
                                                mem[_30365 + 510] = 128
                                                mem[_30365 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30365 + s + 574] = mem[_30365 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_34128), 128, 0
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (9975 * ext_call.return_data[0]) - (9975 * Mask(112, 0, ext_call.return_data[32])):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 10000 * Mask(112, 0, ext_call.return_data[32]) / 10000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]) < 10000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                    if address(_30083) == address(_30100):
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30365 + 189] = 0
                                            mem[64] = _30365 + 221
                                            mem[_30365 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30365 + 225] = 0
                                            mem[_30365 + 257] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30365 + 289] = this.address
                                            mem[_30365 + 321] = 128
                                            mem[_30365 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30365 + s + 385] = mem[_30365 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31891 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30365 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30365 + 221] = address(_30100)
                                                mem[_30365 + 241] = address(_31891)
                                                mem[_30365 + 189] = 40
                                                mem[_30365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 294] = stor1
                                                mem[_30365 + 314] = sha3(address(_30100), address(_31891))
                                                mem[_30365 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30365 + 261] = 85
                                                mem[_30365 + 378] = 0
                                                mem[64] = _30365 + 410
                                                mem[_30365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 414] = 0
                                                mem[_30365 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30365 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31891)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30365 + 510] = 128
                                                mem[_30365 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30365 + s + 574] = mem[_30365 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(sha3(0, stor1, sha3(address(_30100), address(_31891)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30365 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30365 + 241] = address(_30100)
                                                mem[_30365 + 189] = 40
                                                mem[_30365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 294] = stor1
                                                mem[_30365 + 314] = sha3(mem[_30365 + 221 len 20], address(_30100))
                                                mem[_30365 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30365 + 261] = 85
                                                _35460 = sha3(0, stor1, sha3(mem[_30365 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30365 + 378] = 0
                                                mem[64] = _30365 + 410
                                                mem[_30365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 414] = 0
                                                mem[_30365 + 446] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30365 + 478] = address(_35460)
                                                mem[_30365 + 510] = 128
                                                mem[_30365 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30365 + s + 574] = mem[_30365 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), address(_35460), 128, 0
                                    else:
                                        if idx >= mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160] - 2:
                                            mem[_30365 + 189] = 0
                                            mem[64] = _30365 + 221
                                            mem[_30365 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_30365 + 225] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                            mem[_30365 + 257] = 0
                                            mem[_30365 + 289] = this.address
                                            mem[_30365 + 321] = 128
                                            mem[_30365 + 353] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_30365 + s + 385] = mem[_30365 + s + 221]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                            call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(this.address), 128, 0
                                        else:
                                            require idx + 2 < mem[(32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 160]
                                            _31892 = mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192]
                                            if address(_30100) == mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                revert with 0, 32, 35, 0x5450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_30365 + 292 len 29]
                                            if address(_30100) < mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                if not address(_30100):
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30365 + 221] = address(_30100)
                                                mem[_30365 + 241] = address(_31892)
                                                mem[_30365 + 189] = 40
                                                mem[_30365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 294] = stor1
                                                mem[_30365 + 314] = sha3(address(_30100), address(_31892))
                                                mem[_30365 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30365 + 261] = 85
                                                mem[_30365 + 378] = 0
                                                mem[64] = _30365 + 410
                                                mem[_30365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30365 + 446] = 0
                                                mem[_30365 + 478] = address(sha3(0, stor1, sha3(address(_30100), address(_31892)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5))
                                                mem[_30365 + 510] = 128
                                                mem[_30365 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30365 + s + 574] = mem[_30365 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(sha3(0, stor1, sha3(address(_30100), address(_31892)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)), 128, 0
                                            else:
                                                if not mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 204 len 20]:
                                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                                mem[_30365 + 221] = address(mem[(32 * idx + 2) + (32 * _7573) + (32 * arg1.length) + ceil32(return_data.size) + 192])
                                                mem[_30365 + 241] = address(_30100)
                                                mem[_30365 + 189] = 40
                                                mem[_30365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 294] = stor1
                                                mem[_30365 + 314] = sha3(mem[_30365 + 221 len 20], address(_30100))
                                                mem[_30365 + 346] = 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5
                                                mem[_30365 + 261] = 85
                                                _35476 = sha3(0, stor1, sha3(mem[_30365 + 221 len 20], address(_30100)), 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)
                                                mem[_30365 + 378] = 0
                                                mem[64] = _30365 + 410
                                                mem[_30365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_30365 + 414] = (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0])
                                                mem[_30365 + 446] = 0
                                                mem[_30365 + 478] = address(_35476)
                                                mem[_30365 + 510] = 128
                                                mem[_30365 + 542] = 0
                                                s = 0
                                                while s < 0:
                                                    mem[_30365 + s + 574] = mem[_30365 + s + 410]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)))
                                                call address(sha3(0, stor1, _30368, 0xfb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args (9975 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0])) - (9975 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0])) / (25 * Mask(112, 0, ext_call.return_data[32])) + (9975 * ext_call.return_data[0]), 0, address(_35476), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
        require 0 < mem[96]
        require ext_code.size(mem[140 len 20])
        staticcall mem[140 len 20].0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        stor7[address(arg2)] = 0
        emit Fee(stor7[address(arg2)]);
        require ext_code.size(stor0)
        staticcall stor0.0x70a08231 with:
                gas gas_remaining wei
               args address(arg2)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0]
        emit Profit((10 * 10^6 * arg3 / ext_call.return_data[0]));
        if 10 * 10^6 * arg3 / ext_call.return_data[0] > stor7[address(arg2)]:
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = arg4
            mem[mem[64] + 36] = 0
            mem[mem[64] + 100] = this.address
            mem[mem[64] + 132] = block.timestamp
            mem[mem[64] + 68] = 160
            mem[mem[64] + 164] = mem[96]
            mem[mem[64] + 196 len floor32(mem[96])] = mem[128 len floor32(mem[96])]
            require ext_code.size(stor2)
            call stor2.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                 gas gas_remaining wei
                args arg4, 0, 160, address(this.address), block.timestamp, mem[mem[64] + 164 len (32 * mem[96]) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require mem[96] - 1 < mem[96]
            stor4[mem[(32 * mem[96] - 1) + 140 len 20]] = 1
}



}
