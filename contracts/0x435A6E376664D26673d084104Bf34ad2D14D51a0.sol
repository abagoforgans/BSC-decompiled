contract main {




// =====================  Runtime code  =====================


#
#  - sub_8758c270(?)
#  - sub_a345568e(?)
#  - sub_c35adfd5(?)
#  - withdraw(address arg1, uint256 arg2)
#
address stor0;

function _fallback() payable {
    revert
}

function withdrawBNB(uint256 arg1) {
    require calldata.size - 4 >= 32
    if stor0 != msg.sender:
        revert with 0, '!owner'
    call msg.sender with:
       value arg1 wei
         gas gas_remaining wei
    if not ext_call.success:
        revert with 0, 'TransferHelper: ETH_TRANSFER_FAILED'
}

function deposit(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if stor0 != msg.sender:
        revert with 0, '!owner'
    require ext_code.size(arg1)
    call arg1.0x23b872dd with:
         gas gas_remaining wei
        args msg.sender, address(this.address), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_4266f42b(?) {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    require ext_code.size(address(arg1))
    staticcall address(arg1).factory() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).0xe6a43905 with:
            gas gas_remaining wei
           args address(arg2), address(arg3)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    return bool(ext_call.return_data[12 len 20])
}

function getReserves(address arg1, address arg2, address arg3) {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    require ext_code.size(arg3)
    staticcall arg3.factory() with:
            gas gas_remaining wei
    if not ext_call.success:
        require ext_code.size(arg3)
        staticcall arg3.FACTORY() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).0xe6a43905 with:
            gas gas_remaining wei
           args address(arg1), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    return ext_call.return_data[0] << 144, ext_call.return_data[32] << 144, address(ext_call.return_data[0])
}

function sub_ab40480c(?) {
    require calldata.size - 4 >= 96
    require cd[4] == address(cd[4])
    require cd[36] == address(cd[36])
    require cd[68] <= test266151307()
    require calldata.size + -cd[68] - 4 >= 32
    require ('cd', 68).length <= test266151307()
    require calldata.size > cd[68] + ('cd', 68).length + 35
    require cd[(cd[68] + ('cd', 68).length + 4)] <= test266151307()
    require (32 * cd[(cd[68] + ('cd', 68).length + 4)]) + 160 >= 128 and (32 * cd[(cd[68] + ('cd', 68).length + 4)]) + 160 <= test266151307()
    mem[64] = (32 * cd[(cd[68] + ('cd', 68).length + 4)]) + 160
    mem[128] = cd[(cd[68] + ('cd', 68).length + 4)]
    require calldata.size >= cd[68] + ('cd', 68).length + (160 * cd[(cd[68] + ('cd', 68).length + 4)]) + 36
    s = cd[68] + ('cd', 68).length + 36
    t = 160
    idx = 0
    while idx < cd[(cd[68] + ('cd', 68).length + 4)]:
        require calldata.size - s >= 160
        _26 = mem[64]
        require mem[64] + 160 >= mem[64] and mem[64] + 160 <= test266151307()
        mem[64] = mem[64] + 160
        require cd[s] == address(cd[s])
        mem[_26] = cd[s]
        require cd[(s + 32)] == address(cd[(s + 32)])
        mem[_26 + 32] = cd[(s + 32)]
        require cd[(s + 64)] == Mask(112, 0, cd[(s + 64)])
        mem[_26 + 64] = cd[(s + 64)]
        require cd[(s + 96)] == Mask(112, 0, cd[(s + 96)])
        mem[_26 + 96] = cd[(s + 96)]
        require cd[(s + 128)] == address(cd[(s + 128)])
        mem[_26 + 128] = cd[(s + 128)]
        mem[t] = _26
        s = s + 160
        t = t + 32
        idx = idx + 1
        continue 
    mem[96] = 128
    idx = 0
    while idx < mem[128] - 1:
        require idx < mem[128]
        if mem[mem[(32 * idx) + 160] + 12 len 20] != address(cd[4]):
            idx = idx + 1
            continue 
        require idx < mem[128]
        if mem[mem[(32 * idx) + 160] + 44 len 20] != address(cd[36]):
            idx = idx + 1
            continue 
        require idx < mem[128]
        require idx < mem[128]
        _68 = mem[mem[(32 * idx) + 160] + 96]
        mem[mem[64]] = mem[mem[(32 * idx) + 160] + 82 len 14]
        return mem[mem[64]], _68 << 144
    return 0
}

function sub_ac46c482(?) {
    require calldata.size - 4 >= 96
    require cd[4] == address(cd[4])
    require cd[36] == address(cd[36])
    require cd[68] <= test266151307()
    require calldata.size + -cd[68] - 4 >= 32
    require ('cd', 68).length <= test266151307()
    require calldata.size > cd[68] + ('cd', 68).length + 35
    require cd[(cd[68] + ('cd', 68).length + 4)] <= test266151307()
    require (32 * cd[(cd[68] + ('cd', 68).length + 4)]) + 160 >= 128 and (32 * cd[(cd[68] + ('cd', 68).length + 4)]) + 160 <= test266151307()
    mem[64] = (32 * cd[(cd[68] + ('cd', 68).length + 4)]) + 160
    mem[128] = cd[(cd[68] + ('cd', 68).length + 4)]
    require calldata.size >= cd[68] + ('cd', 68).length + (96 * cd[(cd[68] + ('cd', 68).length + 4)]) + 36
    s = cd[68] + ('cd', 68).length + 36
    t = 160
    idx = 0
    while idx < cd[(cd[68] + ('cd', 68).length + 4)]:
        require calldata.size - s >= 96
        _23 = mem[64]
        require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
        mem[64] = mem[64] + 96
        require cd[s] == address(cd[s])
        mem[_23] = cd[s]
        require cd[(s + 32)] == address(cd[(s + 32)])
        mem[_23 + 32] = cd[(s + 32)]
        require cd[(s + 64)] == address(cd[(s + 64)])
        mem[_23 + 64] = cd[(s + 64)]
        mem[t] = _23
        s = s + 96
        t = t + 32
        idx = idx + 1
        continue 
    mem[96] = 128
    _24 = mem[64]
    mem[64] = mem[64] + 96
    mem[_24] = 0
    mem[_24 + 32] = 0
    mem[_24 + 64] = 0
    _44 = mem[128]
    idx = 0
    while idx < _44:
        _45 = mem[64]
        mem[64] = mem[64] + 96
        mem[_45] = 0
        mem[_45 + 32] = 0
        mem[_45 + 64] = 0
        require idx < mem[mem[96]]
        _49 = mem[(32 * idx) + mem[96] + 32]
        if mem[mem[(32 * idx) + mem[96] + 32] + 12 len 20] != address(cd[4]):
            _44 = mem[mem[96]]
            idx = idx + 1
            continue 
        if mem[mem[(32 * idx) + mem[96] + 32] + 44 len 20] != address(cd[36]):
            _44 = mem[mem[96]]
            idx = idx + 1
            continue 
        mem[mem[64]] = mem[mem[(32 * idx) + mem[96] + 32] + 12 len 20]
        mem[mem[64] + 32] = mem[_49 + 44 len 20]
        mem[mem[64] + 64] = mem[_49 + 76 len 20]
        return memory
          from mem[64]
           len 96
    mem[mem[64]] = mem[_24 + 12 len 20]
    mem[mem[64] + 32] = mem[_24 + 44 len 20]
    mem[mem[64] + 64] = mem[_24 + 76 len 20]
    return memory
      from mem[64]
       len 96
}

function sub_9716edc6(?) {
    require calldata.size - 4 >= 128
    require cd[4] == address(cd[4])
    require cd[36] == address(cd[36])
    require cd[68] == address(cd[68])
    require cd[100] <= test266151307()
    require calldata.size + -cd[100] - 4 >= 32
    require ('cd', 100).length <= test266151307()
    require calldata.size > cd[100] + ('cd', 100).length + 35
    require cd[(cd[100] + ('cd', 100).length + 4)] <= test266151307()
    require (32 * cd[(cd[100] + ('cd', 100).length + 4)]) + 160 >= 128 and (32 * cd[(cd[100] + ('cd', 100).length + 4)]) + 160 <= test266151307()
    mem[64] = (32 * cd[(cd[100] + ('cd', 100).length + 4)]) + 160
    mem[128] = cd[(cd[100] + ('cd', 100).length + 4)]
    require calldata.size >= cd[100] + ('cd', 100).length + (160 * cd[(cd[100] + ('cd', 100).length + 4)]) + 36
    s = cd[100] + ('cd', 100).length + 36
    t = 160
    idx = 0
    while idx < cd[(cd[100] + ('cd', 100).length + 4)]:
        require calldata.size - s >= 160
        _82 = mem[64]
        require mem[64] + 160 >= mem[64] and mem[64] + 160 <= test266151307()
        mem[64] = mem[64] + 160
        require cd[s] == address(cd[s])
        mem[_82] = cd[s]
        require cd[(s + 32)] == address(cd[(s + 32)])
        mem[_82 + 32] = cd[(s + 32)]
        require cd[(s + 64)] == Mask(112, 0, cd[(s + 64)])
        mem[_82 + 64] = cd[(s + 64)]
        require cd[(s + 96)] == Mask(112, 0, cd[(s + 96)])
        mem[_82 + 96] = cd[(s + 96)]
        require cd[(s + 128)] == address(cd[(s + 128)])
        mem[_82 + 128] = cd[(s + 128)]
        mem[t] = _82
        s = s + 160
        t = t + 32
        idx = idx + 1
        continue 
    mem[96] = 128
    _162 = mem[128]
    idx = 0
    while idx < _162:
        _165 = mem[64]
        mem[64] = mem[64] + 160
        mem[_165] = 0
        mem[_165 + 32] = 0
        mem[_165 + 64] = 0
        mem[_165 + 96] = 0
        mem[_165 + 128] = 0
        require idx < mem[mem[96]]
        if mem[mem[(32 * idx) + mem[96] + 32] + 140 len 20] != address(cd[68]):
            if mem[mem[(32 * idx) + mem[96] + 32] + 140 len 20] != address(cd[68]):
                _162 = mem[mem[96]]
                idx = idx + 1
                continue 
            if mem[mem[(32 * idx) + mem[96] + 32] + 12 len 20] != address(cd[36]):
                _162 = mem[mem[96]]
                idx = idx + 1
                continue 
            if mem[mem[(32 * idx) + mem[96] + 32] + 44 len 20] != address(cd[4]):
                _162 = mem[mem[96]]
                idx = idx + 1
                continue 
            _191 = mem[mem[(32 * idx) + mem[96] + 32] + 64]
            mem[mem[64]] = mem[mem[(32 * idx) + mem[96] + 32] + 114 len 14]
            return mem[mem[64]], _191 << 144
        if mem[mem[(32 * idx) + mem[96] + 32] + 12 len 20] != address(cd[4]):
            if mem[mem[(32 * idx) + mem[96] + 32] + 140 len 20] != address(cd[68]):
                _162 = mem[mem[96]]
                idx = idx + 1
                continue 
            if mem[mem[(32 * idx) + mem[96] + 32] + 12 len 20] != address(cd[36]):
                _162 = mem[mem[96]]
                idx = idx + 1
                continue 
            if mem[mem[(32 * idx) + mem[96] + 32] + 44 len 20] != address(cd[4]):
                _162 = mem[mem[96]]
                idx = idx + 1
                continue 
            _195 = mem[mem[(32 * idx) + mem[96] + 32] + 64]
            mem[mem[64]] = mem[mem[(32 * idx) + mem[96] + 32] + 114 len 14]
            return mem[mem[64]], _195 << 144
        if mem[mem[(32 * idx) + mem[96] + 32] + 44 len 20] == address(cd[36]):
            _184 = mem[mem[(32 * idx) + mem[96] + 32] + 96]
            mem[mem[64]] = mem[mem[(32 * idx) + mem[96] + 32] + 82 len 14]
            return mem[mem[64]], _184 << 144
        if mem[mem[(32 * idx) + mem[96] + 32] + 140 len 20] != address(cd[68]):
            _162 = mem[mem[96]]
            idx = idx + 1
            continue 
        if mem[mem[(32 * idx) + mem[96] + 32] + 12 len 20] != address(cd[36]):
            _162 = mem[mem[96]]
            idx = idx + 1
            continue 
        if mem[mem[(32 * idx) + mem[96] + 32] + 44 len 20] != address(cd[4]):
            _162 = mem[mem[96]]
            idx = idx + 1
            continue 
        _200 = mem[mem[(32 * idx) + mem[96] + 32] + 64]
        mem[mem[64]] = mem[mem[(32 * idx) + mem[96] + 32] + 114 len 14]
        return mem[mem[64]], _200 << 144
    require ext_code.size(address(cd[68]))
    staticcall address(cd[68]).factory() with:
            gas gas_remaining wei
    mem[mem[64]] = ext_call.return_data[0]
    if ext_call.success:
        _168 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _174 = mem[_168]
        require mem[_168] == mem[_168 + 12 len 20]
        mem[mem[64] + 4] = address(cd[4])
        mem[mem[64] + 36] = address(cd[36])
        require ext_code.size(address(_174))
        staticcall address(_174).0xe6a43905 with:
                gas gas_remaining wei
               args address(cd[4]), address(cd[36])
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _203 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _208 = mem[_203]
        require mem[_203] == mem[_203 + 12 len 20]
        require ext_code.size(mem[_203 + 12 len 20])
        staticcall mem[_203 + 12 len 20].getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _215 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _217 = mem[_215]
        require mem[_215] == mem[_215 + 18 len 14]
        _219 = mem[_215 + 32]
        require mem[_215 + 32] == mem[_215 + 50 len 14]
        require mem[_215 + 64] == mem[_215 + 92 len 4]
        require ext_code.size(address(_208))
        staticcall address(_208).token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _227 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_227] == mem[_227 + 12 len 20]
        if mem[_227 + 12 len 20] != address(cd[36]):
            return _217 << 144, Mask(112, 0, _219)
        return _219 << 144, Mask(112, 0, _217)
    require ext_code.size(address(cd[68]))
    staticcall address(cd[68]).FACTORY() with:
            gas gas_remaining wei
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _175 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _180 = mem[_175]
    require mem[_175] == mem[_175 + 12 len 20]
    mem[mem[64] + 4] = address(cd[4])
    mem[mem[64] + 36] = address(cd[36])
    require ext_code.size(address(_180))
    staticcall address(_180).0xe6a43905 with:
            gas gas_remaining wei
           args address(cd[4]), address(cd[36])
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _206 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _210 = mem[_206]
    require mem[_206] == mem[_206 + 12 len 20]
    require ext_code.size(mem[_206 + 12 len 20])
    staticcall mem[_206 + 12 len 20].getReserves() with:
            gas gas_remaining wei
    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _216 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 96
    _218 = mem[_216]
    require mem[_216] == mem[_216 + 18 len 14]
    _220 = mem[_216 + 32]
    require mem[_216 + 32] == mem[_216 + 50 len 14]
    require mem[_216 + 64] == mem[_216 + 92 len 4]
    require ext_code.size(address(_210))
    staticcall address(_210).token0() with:
            gas gas_remaining wei
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _228 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    require mem[_228] == mem[_228 + 12 len 20]
    if mem[_228 + 12 len 20] != address(cd[36]):
        return _218 << 144, Mask(112, 0, _220)
    return _220 << 144, Mask(112, 0, _218)
}

function sub_bd9ba87f(?) {
    require calldata.size - 4 >= 96
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require (32 * ('cd', 4).length) + 128 >= 96 and (32 * ('cd', 4).length) + 128 <= test266151307()
    mem[96] = ('cd', 4).length
    require calldata.size >= cd[4] + (32 * ('cd', 4).length) + 36
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[36] == address(cd[36])
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 160 >= 128 and (32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160 <= test266151307()
    mem[(32 * ('cd', 4).length) + 128] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = (32 * ('cd', 4).length) + 160
    while idx < ('cd', 68).length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ('cd', 4).length - 1 <= test266151307()
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 192] = ('cd', 4).length - 1
    mem[64] = (32 * ('cd', 4).length) + (32 * ('cd', 68).length) + (32 * ('cd', 4).length - 1) + 224
    if not ('cd', 4).length - 1:
        mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160] = (32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 192
        idx = 0
        while idx < ('cd', 4).length - 1:
            require idx < mem[96]
            _565 = mem[(32 * idx) + 128]
            require idx + 1 < mem[96]
            _568 = mem[(32 * idx + 1) + 128]
            require ext_code.size(address(cd[36]))
            staticcall address(cd[36]).factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if ext_call.success:
                _580 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _587 = mem[_580]
                require mem[_580] == mem[_580 + 12 len 20]
                mem[mem[64] + 4] = address(_565)
                mem[mem[64] + 36] = address(_568)
                require ext_code.size(address(_587))
                staticcall address(_587).0xe6a43905 with:
                        gas gas_remaining wei
                       args address(_565), address(_568)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _613 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _616 = mem[_613]
                require mem[_613] == mem[_613 + 12 len 20]
                require ext_code.size(mem[_613 + 12 len 20])
                staticcall mem[_613 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _628 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _631 = mem[_628]
                require mem[_628] == mem[_628 + 18 len 14]
                _637 = mem[_628 + 32]
                require mem[_628 + 32] == mem[_628 + 50 len 14]
                require mem[_628 + 64] == mem[_628 + 92 len 4]
                require ext_code.size(address(_616))
                staticcall address(_616).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _651 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_651] == mem[_651 + 12 len 20]
                if mem[_651 + 12 len 20] != address(_568):
                    _665 = mem[64]
                    mem[64] = mem[64] + 160
                    mem[_665] = 0
                    mem[_665 + 32] = 0
                    mem[_665 + 64] = 0
                    mem[_665 + 96] = 0
                    mem[_665 + 128] = 0
                    _667 = mem[64]
                    mem[64] = mem[64] + 160
                    mem[_667] = address(_565)
                    mem[_667 + 32] = address(_568)
                    mem[_667 + 64] = Mask(112, 0, _631)
                    mem[_667 + 96] = Mask(112, 0, _637)
                    mem[_667 + 128] = address(cd[36])
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[_667 + 64] = Mask(112, 0, Mask(112, 0, _631) + mem[(32 * idx) + (32 * ('cd', 4).length) + 160])
                    require idx + 1 < mem[(32 * ('cd', 4).length) + 128]
                    mem[_667 + 96] = Mask(112, 0, Mask(112, 0, _637) - mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 160])
                    require idx < mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160]]
                    mem[(32 * idx) + mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160] + 32] = _667
                else:
                    _669 = mem[64]
                    mem[64] = mem[64] + 160
                    mem[_669] = 0
                    mem[_669 + 32] = 0
                    mem[_669 + 64] = 0
                    mem[_669 + 96] = 0
                    mem[_669 + 128] = 0
                    _676 = mem[64]
                    mem[64] = mem[64] + 160
                    mem[_676] = address(_565)
                    mem[_676 + 32] = address(_568)
                    mem[_676 + 64] = Mask(112, 0, _637)
                    mem[_676 + 96] = Mask(112, 0, _631)
                    mem[_676 + 128] = address(cd[36])
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[_676 + 64] = Mask(112, 0, Mask(112, 0, _637) + mem[(32 * idx) + (32 * ('cd', 4).length) + 160])
                    require idx + 1 < mem[(32 * ('cd', 4).length) + 128]
                    mem[_676 + 96] = Mask(112, 0, Mask(112, 0, _631) - mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 160])
                    require idx < mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160]]
                    mem[(32 * idx) + mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160] + 32] = _676
            else:
                require ext_code.size(address(cd[36]))
                staticcall address(cd[36]).FACTORY() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _590 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _595 = mem[_590]
                require mem[_590] == mem[_590 + 12 len 20]
                mem[mem[64] + 4] = address(_565)
                mem[mem[64] + 36] = address(_568)
                require ext_code.size(address(_595))
                staticcall address(_595).0xe6a43905 with:
                        gas gas_remaining wei
                       args address(_565), address(_568)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _614 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _618 = mem[_614]
                require mem[_614] == mem[_614 + 12 len 20]
                require ext_code.size(mem[_614 + 12 len 20])
                staticcall mem[_614 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _630 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _632 = mem[_630]
                require mem[_630] == mem[_630 + 18 len 14]
                _639 = mem[_630 + 32]
                require mem[_630 + 32] == mem[_630 + 50 len 14]
                require mem[_630 + 64] == mem[_630 + 92 len 4]
                require ext_code.size(address(_618))
                staticcall address(_618).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _652 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_652] == mem[_652 + 12 len 20]
                if mem[_652 + 12 len 20] != address(_568):
                    _666 = mem[64]
                    mem[64] = mem[64] + 160
                    mem[_666] = 0
                    mem[_666 + 32] = 0
                    mem[_666 + 64] = 0
                    mem[_666 + 96] = 0
                    mem[_666 + 128] = 0
                    _670 = mem[64]
                    mem[64] = mem[64] + 160
                    mem[_670] = address(_565)
                    mem[_670 + 32] = address(_568)
                    mem[_670 + 64] = Mask(112, 0, _632)
                    mem[_670 + 96] = Mask(112, 0, _639)
                    mem[_670 + 128] = address(cd[36])
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[_670 + 64] = Mask(112, 0, Mask(112, 0, _632) + mem[(32 * idx) + (32 * ('cd', 4).length) + 160])
                    require idx + 1 < mem[(32 * ('cd', 4).length) + 128]
                    mem[_670 + 96] = Mask(112, 0, Mask(112, 0, _639) - mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 160])
                    require idx < mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160]]
                    mem[(32 * idx) + mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160] + 32] = _670
                else:
                    _672 = mem[64]
                    mem[64] = mem[64] + 160
                    mem[_672] = 0
                    mem[_672 + 32] = 0
                    mem[_672 + 64] = 0
                    mem[_672 + 96] = 0
                    mem[_672 + 128] = 0
                    _681 = mem[64]
                    mem[64] = mem[64] + 160
                    mem[_681] = address(_565)
                    mem[_681 + 32] = address(_568)
                    mem[_681 + 64] = Mask(112, 0, _639)
                    mem[_681 + 96] = Mask(112, 0, _632)
                    mem[_681 + 128] = address(cd[36])
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[_681 + 64] = Mask(112, 0, Mask(112, 0, _639) + mem[(32 * idx) + (32 * ('cd', 4).length) + 160])
                    require idx + 1 < mem[(32 * ('cd', 4).length) + 128]
                    mem[_681 + 96] = Mask(112, 0, Mask(112, 0, _632) - mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 160])
                    require idx < mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160]]
                    mem[(32 * idx) + mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160] + 32] = _681
            idx = idx + 1
            continue 
        _567 = mem[64]
        mem[mem[64]] = 32
        _569 = mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160]
        mem[mem[64] + 32] = 32
        _570 = mem[_569]
        mem[mem[64] + 64] = mem[_569]
        idx = 0
        s = mem[64] + 96
        t = _569 + 32
        while idx < _570:
            _746 = mem[t]
            mem[s] = mem[mem[t] + 12 len 20]
            mem[s + 32] = mem[_746 + 44 len 20]
            mem[s + 64] = mem[_746 + 82 len 14]
            mem[s + 96] = mem[_746 + 114 len 14]
            mem[s + 128] = mem[_746 + 140 len 20]
            idx = idx + 1
            s = s + 160
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _567 + (160 * _570) + -mem[64] + 96
    mem[64] = (32 * ('cd', 4).length) + (32 * ('cd', 68).length) + (32 * ('cd', 4).length - 1) + 384
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + (32 * ('cd', 4).length - 1) + 224] = 0
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + (32 * ('cd', 4).length - 1) + 256] = 0
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + (32 * ('cd', 4).length - 1) + 288] = 0
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + (32 * ('cd', 4).length - 1) + 320] = 0
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + (32 * ('cd', 4).length - 1) + 352] = 0
    mem[var45001] = (32 * ('cd', 4).length) + (32 * ('cd', 68).length) + (32 * ('cd', 4).length - 1) + 224
    s = var45001
    idx = var45002
    while idx - 1:
        mem[64] = mem[64] + 160
        mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + (32 * ('cd', 4).length - 1) + 224] = 0
        mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + (32 * ('cd', 4).length - 1) + 256] = 0
        mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + (32 * ('cd', 4).length - 1) + 288] = 0
        mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + (32 * ('cd', 4).length - 1) + 320] = 0
        mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + (32 * ('cd', 4).length - 1) + 352] = 0
        mem[s + 32] = (32 * ('cd', 4).length) + (32 * ('cd', 68).length) + (32 * ('cd', 4).length - 1) + 224
        s = s + 32
        idx = idx - 1
        continue 
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160] = (32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 192
    _844 = mem[96]
    idx = 0
    while idx < _844 - 1:
        require idx < mem[96]
        _846 = mem[(32 * idx) + 128]
        require idx + 1 < mem[96]
        _849 = mem[(32 * idx + 1) + 128]
        require ext_code.size(address(cd[36]))
        staticcall address(cd[36]).factory() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if ext_call.success:
            _860 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _864 = mem[_860]
            require mem[_860] == mem[_860 + 12 len 20]
            mem[mem[64] + 4] = address(_846)
            mem[mem[64] + 36] = address(_849)
            require ext_code.size(address(_864))
            staticcall address(_864).0xe6a43905 with:
                    gas gas_remaining wei
                   args address(_846), address(_849)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _871 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _873 = mem[_871]
            require mem[_871] == mem[_871 + 12 len 20]
            require ext_code.size(mem[_871 + 12 len 20])
            staticcall mem[_871 + 12 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _879 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _881 = mem[_879]
            require mem[_879] == mem[_879 + 18 len 14]
            _883 = mem[_879 + 32]
            require mem[_879 + 32] == mem[_879 + 50 len 14]
            require mem[_879 + 64] == mem[_879 + 92 len 4]
            require ext_code.size(address(_873))
            staticcall address(_873).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _891 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_891] == mem[_891 + 12 len 20]
            if mem[_891 + 12 len 20] != address(_849):
                _895 = mem[64]
                mem[64] = mem[64] + 160
                mem[_895] = 0
                mem[_895 + 32] = 0
                mem[_895 + 64] = 0
                mem[_895 + 96] = 0
                mem[_895 + 128] = 0
                _897 = mem[64]
                mem[64] = mem[64] + 160
                mem[_897] = address(_846)
                mem[_897 + 32] = address(_849)
                mem[_897 + 64] = Mask(112, 0, _881)
                mem[_897 + 96] = Mask(112, 0, _883)
                mem[_897 + 128] = address(cd[36])
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[_897 + 64] = Mask(112, 0, Mask(112, 0, _881) + mem[(32 * idx) + (32 * ('cd', 4).length) + 160])
                require idx + 1 < mem[(32 * ('cd', 4).length) + 128]
                mem[_897 + 96] = Mask(112, 0, Mask(112, 0, _883) - mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 160])
                require idx < mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160]]
                mem[(32 * idx) + mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160] + 32] = _897
            else:
                _899 = mem[64]
                mem[64] = mem[64] + 160
                mem[_899] = 0
                mem[_899 + 32] = 0
                mem[_899 + 64] = 0
                mem[_899 + 96] = 0
                mem[_899 + 128] = 0
                _906 = mem[64]
                mem[64] = mem[64] + 160
                mem[_906] = address(_846)
                mem[_906 + 32] = address(_849)
                mem[_906 + 64] = Mask(112, 0, _883)
                mem[_906 + 96] = Mask(112, 0, _881)
                mem[_906 + 128] = address(cd[36])
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[_906 + 64] = Mask(112, 0, Mask(112, 0, _883) + mem[(32 * idx) + (32 * ('cd', 4).length) + 160])
                require idx + 1 < mem[(32 * ('cd', 4).length) + 128]
                mem[_906 + 96] = Mask(112, 0, Mask(112, 0, _881) - mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 160])
                require idx < mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160]]
                mem[(32 * idx) + mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160] + 32] = _906
        else:
            require ext_code.size(address(cd[36]))
            staticcall address(cd[36]).FACTORY() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _865 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _866 = mem[_865]
            require mem[_865] == mem[_865 + 12 len 20]
            mem[mem[64] + 4] = address(_846)
            mem[mem[64] + 36] = address(_849)
            require ext_code.size(address(_866))
            staticcall address(_866).0xe6a43905 with:
                    gas gas_remaining wei
                   args address(_846), address(_849)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _872 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _874 = mem[_872]
            require mem[_872] == mem[_872 + 12 len 20]
            require ext_code.size(mem[_872 + 12 len 20])
            staticcall mem[_872 + 12 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _880 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _882 = mem[_880]
            require mem[_880] == mem[_880 + 18 len 14]
            _884 = mem[_880 + 32]
            require mem[_880 + 32] == mem[_880 + 50 len 14]
            require mem[_880 + 64] == mem[_880 + 92 len 4]
            require ext_code.size(address(_874))
            staticcall address(_874).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _892 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_892] == mem[_892 + 12 len 20]
            if mem[_892 + 12 len 20] != address(_849):
                _896 = mem[64]
                mem[64] = mem[64] + 160
                mem[_896] = 0
                mem[_896 + 32] = 0
                mem[_896 + 64] = 0
                mem[_896 + 96] = 0
                mem[_896 + 128] = 0
                _900 = mem[64]
                mem[64] = mem[64] + 160
                mem[_900] = address(_846)
                mem[_900 + 32] = address(_849)
                mem[_900 + 64] = Mask(112, 0, _882)
                mem[_900 + 96] = Mask(112, 0, _884)
                mem[_900 + 128] = address(cd[36])
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[_900 + 64] = Mask(112, 0, Mask(112, 0, _882) + mem[(32 * idx) + (32 * ('cd', 4).length) + 160])
                require idx + 1 < mem[(32 * ('cd', 4).length) + 128]
                mem[_900 + 96] = Mask(112, 0, Mask(112, 0, _884) - mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 160])
                require idx < mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160]]
                mem[(32 * idx) + mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160] + 32] = _900
            else:
                _902 = mem[64]
                mem[64] = mem[64] + 160
                mem[_902] = 0
                mem[_902 + 32] = 0
                mem[_902 + 64] = 0
                mem[_902 + 96] = 0
                mem[_902 + 128] = 0
                _911 = mem[64]
                mem[64] = mem[64] + 160
                mem[_911] = address(_846)
                mem[_911 + 32] = address(_849)
                mem[_911 + 64] = Mask(112, 0, _884)
                mem[_911 + 96] = Mask(112, 0, _882)
                mem[_911 + 128] = address(cd[36])
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[_911 + 64] = Mask(112, 0, Mask(112, 0, _884) + mem[(32 * idx) + (32 * ('cd', 4).length) + 160])
                require idx + 1 < mem[(32 * ('cd', 4).length) + 128]
                mem[_911 + 96] = Mask(112, 0, Mask(112, 0, _882) - mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 160])
                require idx < mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160]]
                mem[(32 * idx) + mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160] + 32] = _911
        _844 = mem[96]
        idx = idx + 1
        continue 
    _848 = mem[64]
    mem[mem[64]] = 32
    _850 = mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160]
    mem[mem[64] + 32] = 32
    _851 = mem[_850]
    mem[mem[64] + 64] = mem[_850]
    idx = 0
    s = mem[64] + 96
    t = _850 + 32
    while idx < _851:
        _935 = mem[t]
        mem[s] = mem[mem[t] + 12 len 20]
        mem[s + 32] = mem[_935 + 44 len 20]
        mem[s + 64] = mem[_935 + 82 len 14]
        mem[s + 96] = mem[_935 + 114 len 14]
        mem[s + 128] = mem[_935 + 140 len 20]
        idx = idx + 1
        s = s + 160
        t = t + 32
        continue 
    return memory
      from mem[64]
       len _848 + (160 * _851) + -mem[64] + 96
}

function sub_5794784d(?) {
    require calldata.size - 4 >= 160
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require (32 * ('cd', 4).length) + 128 >= 96 and (32 * ('cd', 4).length) + 128 <= test266151307()
    mem[96] = ('cd', 4).length
    require calldata.size >= cd[4] + (32 * ('cd', 4).length) + 36
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[36] == address(cd[36])
    require cd[68] == address(cd[68])
    require cd[100] <= test266151307()
    require calldata.size + -cd[100] - 4 >= 32
    require bool((32 * ('cd', 4).length) + 160 <= test266151307())
    require ('cd', 100).length <= test266151307()
    require calldata.size > cd[100] + ('cd', 100).length + 35
    require cd[(cd[100] + ('cd', 100).length + 4)] <= test266151307()
    require (32 * cd[(cd[100] + ('cd', 100).length + 4)]) + 192 >= 160 and (32 * ('cd', 4).length) + (32 * cd[(cd[100] + ('cd', 100).length + 4)]) + 192 <= test266151307()
    mem[64] = (32 * ('cd', 4).length) + (32 * cd[(cd[100] + ('cd', 100).length + 4)]) + 192
    mem[(32 * ('cd', 4).length) + 160] = cd[(cd[100] + ('cd', 100).length + 4)]
    require calldata.size >= cd[100] + ('cd', 100).length + (96 * cd[(cd[100] + ('cd', 100).length + 4)]) + 36
    s = cd[100] + ('cd', 100).length + 36
    t = (32 * ('cd', 4).length) + 192
    idx = 0
    while idx < cd[(cd[100] + ('cd', 100).length + 4)]:
        require calldata.size - s >= 96
        _414 = mem[64]
        require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
        mem[64] = mem[64] + 96
        require cd[s] == address(cd[s])
        mem[_414] = cd[s]
        require cd[(s + 32)] == address(cd[(s + 32)])
        mem[_414 + 32] = cd[(s + 32)]
        require cd[(s + 64)] == address(cd[(s + 64)])
        mem[_414 + 64] = cd[(s + 64)]
        mem[t] = _414
        s = s + 96
        t = t + 32
        idx = idx + 1
        continue 
    mem[(32 * ('cd', 4).length) + 128] = (32 * ('cd', 4).length) + 160
    require cd[132] <= test266151307()
    require calldata.size + -cd[132] - 4 >= 32
    _415 = mem[64]
    require mem[64] + 32 >= mem[64] and mem[64] + 32 <= test266151307()
    mem[64] = mem[64] + 32
    require ('cd', 132).length <= test266151307()
    require calldata.size > cd[132] + ('cd', 132).length + 35
    require cd[(cd[132] + ('cd', 132).length + 4)] <= test266151307()
    _416 = mem[64]
    require mem[64] + (32 * cd[(cd[132] + ('cd', 132).length + 4)]) + 32 >= mem[64] and mem[64] + (32 * cd[(cd[132] + ('cd', 132).length + 4)]) + 32 <= test266151307()
    mem[64] = mem[64] + (32 * cd[(cd[132] + ('cd', 132).length + 4)]) + 32
    mem[_416] = cd[(cd[132] + ('cd', 132).length + 4)]
    require calldata.size >= cd[132] + ('cd', 132).length + (160 * cd[(cd[132] + ('cd', 132).length + 4)]) + 36
    s = cd[132] + ('cd', 132).length + 36
    t = _416 + 32
    idx = 0
    while idx < cd[(cd[132] + ('cd', 132).length + 4)]:
        require calldata.size - s >= 160
        _618 = mem[64]
        require mem[64] + 160 >= mem[64] and mem[64] + 160 <= test266151307()
        mem[64] = mem[64] + 160
        require cd[s] == address(cd[s])
        mem[_618] = cd[s]
        require cd[(s + 32)] == address(cd[(s + 32)])
        mem[_618 + 32] = cd[(s + 32)]
        require cd[(s + 64)] == Mask(112, 0, cd[(s + 64)])
        mem[_618 + 64] = cd[(s + 64)]
        require cd[(s + 96)] == Mask(112, 0, cd[(s + 96)])
        mem[_618 + 96] = cd[(s + 96)]
        require cd[(s + 128)] == address(cd[(s + 128)])
        mem[_618 + 128] = cd[(s + 128)]
        mem[t] = _618
        s = s + 160
        t = t + 32
        idx = idx + 1
        continue 
    mem[_415] = _416
    _619 = mem[64]
    mem[64] = mem[64] + 32
    mem[_619] = 96
    _820 = mem[mem[(32 * ('cd', 4).length) + 128]]
    idx = 0
    while idx < _820:
        _821 = mem[64]
        mem[64] = mem[64] + 96
        mem[_821] = 0
        mem[_821 + 32] = 0
        mem[_821 + 64] = 0
        require idx < mem[mem[(32 * ('cd', 4).length) + 128]]
        if mem[mem[(32 * idx) + mem[(32 * ('cd', 4).length) + 128] + 32] + 12 len 20] != address(cd[36]):
            _820 = mem[mem[(32 * ('cd', 4).length) + 128]]
            idx = idx + 1
            continue 
        if mem[mem[(32 * idx) + mem[(32 * ('cd', 4).length) + 128] + 32] + 44 len 20] != address(cd[68]):
            _820 = mem[mem[(32 * ('cd', 4).length) + 128]]
            idx = idx + 1
            continue 
        _851 = mem[64]
        mem[mem[64]] = 32
        _856 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + 32] = 32
        _857 = mem[_856]
        mem[mem[64] + 64] = mem[_856]
        idx = 0
        s = mem[64] + 96
        t = _856 + 32
        while idx < _857:
            _1022 = mem[t]
            mem[s] = mem[mem[t] + 12 len 20]
            mem[s + 32] = mem[_1022 + 44 len 20]
            mem[s + 64] = mem[_1022 + 76 len 20]
            _820 = mem[mem[(32 * ('cd', 4).length) + 128]]
            idx = idx + 1
            s = s + 96
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _851 + (96 * _857) + -mem[64] + 96
    _1018 = mem[96]
    idx = 0
    while idx < _1018:
        require idx < mem[96]
        require ext_code.size(mem[(32 * idx) + 140 len 20])
        staticcall mem[(32 * idx) + 140 len 20].factory() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1041 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1045 = mem[_1041]
        require mem[_1041] == mem[_1041 + 12 len 20]
        mem[mem[64] + 4] = address(cd[36])
        mem[mem[64] + 36] = address(cd[68])
        require ext_code.size(address(_1045))
        staticcall address(_1045).0xe6a43905 with:
                gas gas_remaining wei
               args address(cd[36]), address(cd[68])
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1071 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_1071] == mem[_1071 + 12 len 20]
        if mem[_1071 + 12 len 20]:
            require idx < mem[96]
            _1079 = mem[(32 * idx) + 128]
            _1209 = mem[mem[_415]]
            s = 0
            while s < _1209:
                _1223 = mem[64]
                mem[64] = mem[64] + 160
                mem[_1223] = 0
                mem[_1223 + 32] = 0
                mem[_1223 + 64] = 0
                mem[_1223 + 96] = 0
                mem[_1223 + 128] = 0
                require s < mem[mem[_415]]
                if mem[mem[(32 * s) + mem[_415] + 32] + 140 len 20] != address(_1079):
                    if mem[mem[(32 * s) + mem[_415] + 32] + 140 len 20] != address(_1079):
                        _1018 = mem[96]
                        _1209 = mem[mem[_415]]
                        s = s + 1
                        continue 
                    if mem[mem[(32 * s) + mem[_415] + 32] + 12 len 20] != address(cd[68]):
                        _1018 = mem[96]
                        _1209 = mem[mem[_415]]
                        s = s + 1
                        continue 
                    if mem[mem[(32 * s) + mem[_415] + 32] + 44 len 20] != address(cd[36]):
                        _1018 = mem[96]
                        _1209 = mem[mem[_415]]
                        s = s + 1
                        continue 
                    _1272 = mem[mem[(32 * s) + mem[_415] + 32] + 96]
                    _1273 = mem[mem[(32 * s) + mem[_415] + 32] + 64]
                    require idx < mem[96]
                    _1290 = mem[(32 * idx) + 128]
                    mem[mem[64] + 4] = 10^18
                    mem[mem[64] + 36] = Mask(112, 0, _1272)
                    mem[mem[64] + 68] = Mask(112, 0, _1273)
                    require ext_code.size(address(_1290))
                    staticcall address(_1290).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args 10^18, _1272 << 144, Mask(112, 0, _1273)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1306 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if mem[_1306] > 0:
                        require idx < mem[96]
                else:
                    if mem[mem[(32 * s) + mem[_415] + 32] + 12 len 20] != address(cd[36]):
                        if mem[mem[(32 * s) + mem[_415] + 32] + 140 len 20] != address(_1079):
                            _1018 = mem[96]
                            _1209 = mem[mem[_415]]
                            s = s + 1
                            continue 
                        if mem[mem[(32 * s) + mem[_415] + 32] + 12 len 20] != address(cd[68]):
                            _1018 = mem[96]
                            _1209 = mem[mem[_415]]
                            s = s + 1
                            continue 
                        if mem[mem[(32 * s) + mem[_415] + 32] + 44 len 20] != address(cd[36]):
                            _1018 = mem[96]
                            _1209 = mem[mem[_415]]
                            s = s + 1
                            continue 
                        _1282 = mem[mem[(32 * s) + mem[_415] + 32] + 96]
                        _1283 = mem[mem[(32 * s) + mem[_415] + 32] + 64]
                        require idx < mem[96]
                        _1294 = mem[(32 * idx) + 128]
                        mem[mem[64] + 4] = 10^18
                        mem[mem[64] + 36] = Mask(112, 0, _1282)
                        mem[mem[64] + 68] = Mask(112, 0, _1283)
                        require ext_code.size(address(_1294))
                        staticcall address(_1294).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args 10^18, _1282 << 144, Mask(112, 0, _1283)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1308 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_1308] > 0:
                            require idx < mem[96]
                    else:
                        if mem[mem[(32 * s) + mem[_415] + 32] + 44 len 20] == address(cd[68]):
                            _1262 = mem[mem[(32 * s) + mem[_415] + 32] + 64]
                            _1263 = mem[mem[(32 * s) + mem[_415] + 32] + 96]
                            require idx < mem[96]
                            _1275 = mem[(32 * idx) + 128]
                            mem[mem[64] + 4] = 10^18
                            mem[mem[64] + 36] = Mask(112, 0, _1262)
                            mem[mem[64] + 68] = Mask(112, 0, _1263)
                            require ext_code.size(address(_1275))
                            staticcall address(_1275).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args 10^18, _1262 << 144, Mask(112, 0, _1263)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1297 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_1297] > 0:
                                require idx < mem[96]
                        else:
                            if mem[mem[(32 * s) + mem[_415] + 32] + 140 len 20] != address(_1079):
                                _1018 = mem[96]
                                _1209 = mem[mem[_415]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_415] + 32] + 12 len 20] != address(cd[68]):
                                _1018 = mem[96]
                                _1209 = mem[mem[_415]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_415] + 32] + 44 len 20] != address(cd[36]):
                                _1018 = mem[96]
                                _1209 = mem[mem[_415]]
                                s = s + 1
                                continue 
                            _1286 = mem[mem[(32 * s) + mem[_415] + 32] + 96]
                            _1287 = mem[mem[(32 * s) + mem[_415] + 32] + 64]
                            require idx < mem[96]
                            _1300 = mem[(32 * idx) + 128]
                            mem[mem[64] + 4] = 10^18
                            mem[mem[64] + 36] = Mask(112, 0, _1286)
                            mem[mem[64] + 68] = Mask(112, 0, _1287)
                            require ext_code.size(address(_1300))
                            staticcall address(_1300).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args 10^18, _1286 << 144, Mask(112, 0, _1287)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1311 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_1311] > 0:
                                require idx < mem[96]
                _1018 = mem[96]
                _1209 = mem[mem[_415]]
                idx = idx + 1
                continue 
            require ext_code.size(address(_1079))
            staticcall address(_1079).factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if ext_call.success:
                _1227 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1244 = mem[_1227]
                require mem[_1227] == mem[_1227 + 12 len 20]
                mem[mem[64] + 4] = address(cd[36])
                mem[mem[64] + 36] = address(cd[68])
                require ext_code.size(address(_1244))
                staticcall address(_1244).0xe6a43905 with:
                        gas gas_remaining wei
                       args address(cd[36]), address(cd[68])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1293 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1302 = mem[_1293]
                require mem[_1293] == mem[_1293 + 12 len 20]
                require ext_code.size(mem[_1293 + 12 len 20])
                staticcall mem[_1293 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1320 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1326 = mem[_1320]
                require mem[_1320] == mem[_1320 + 18 len 14]
                _1329 = mem[_1320 + 32]
                require mem[_1320 + 32] == mem[_1320 + 50 len 14]
                require mem[_1320 + 64] == mem[_1320 + 92 len 4]
                require ext_code.size(address(_1302))
                staticcall address(_1302).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1337 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_1337] == mem[_1337 + 12 len 20]
                require idx < mem[96]
                if mem[_1337 + 12 len 20] != address(cd[68]):
                    _1343 = mem[(32 * idx) + 128]
                    mem[mem[64] + 4] = 10^18
                    mem[mem[64] + 36] = Mask(112, 0, _1326)
                    mem[mem[64] + 68] = Mask(112, 0, _1329)
                    require ext_code.size(address(_1343))
                    staticcall address(_1343).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args 10^18, _1326 << 144, Mask(112, 0, _1329)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1357 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if mem[_1357] > 0:
                        require idx < mem[96]
                else:
                    _1349 = mem[(32 * idx) + 128]
                    mem[mem[64] + 4] = 10^18
                    mem[mem[64] + 36] = Mask(112, 0, _1329)
                    mem[mem[64] + 68] = Mask(112, 0, _1326)
                    require ext_code.size(address(_1349))
                    staticcall address(_1349).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args 10^18, _1329 << 144, Mask(112, 0, _1326)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1359 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if mem[_1359] > 0:
                        require idx < mem[96]
            else:
                require ext_code.size(address(_1079))
                staticcall address(_1079).FACTORY() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1249 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1259 = mem[_1249]
                require mem[_1249] == mem[_1249 + 12 len 20]
                mem[mem[64] + 4] = address(cd[36])
                mem[mem[64] + 36] = address(cd[68])
                require ext_code.size(address(_1259))
                staticcall address(_1259).0xe6a43905 with:
                        gas gas_remaining wei
                       args address(cd[36]), address(cd[68])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1298 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1305 = mem[_1298]
                require mem[_1298] == mem[_1298 + 12 len 20]
                require ext_code.size(mem[_1298 + 12 len 20])
                staticcall mem[_1298 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1323 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1328 = mem[_1323]
                require mem[_1323] == mem[_1323 + 18 len 14]
                _1330 = mem[_1323 + 32]
                require mem[_1323 + 32] == mem[_1323 + 50 len 14]
                require mem[_1323 + 64] == mem[_1323 + 92 len 4]
                require ext_code.size(address(_1305))
                staticcall address(_1305).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1338 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_1338] == mem[_1338 + 12 len 20]
                require idx < mem[96]
                if mem[_1338 + 12 len 20] != address(cd[68]):
                    _1346 = mem[(32 * idx) + 128]
                    mem[mem[64] + 4] = 10^18
                    mem[mem[64] + 36] = Mask(112, 0, _1328)
                    mem[mem[64] + 68] = Mask(112, 0, _1330)
                    require ext_code.size(address(_1346))
                    staticcall address(_1346).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args 10^18, _1328 << 144, Mask(112, 0, _1330)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1358 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if mem[_1358] > 0:
                        require idx < mem[96]
                else:
                    _1351 = mem[(32 * idx) + 128]
                    mem[mem[64] + 4] = 10^18
                    mem[mem[64] + 36] = Mask(112, 0, _1330)
                    mem[mem[64] + 68] = Mask(112, 0, _1328)
                    require ext_code.size(address(_1351))
                    staticcall address(_1351).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args 10^18, _1330 << 144, Mask(112, 0, _1328)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1360 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if mem[_1360] > 0:
                        require idx < mem[96]
        _1018 = mem[96]
        idx = idx + 1
        continue 
    _1020 = mem[mem[(32 * ('cd', 4).length) + 128]]
    require mem[mem[(32 * ('cd', 4).length) + 128]] + 1 <= test266151307()
    _1023 = mem[64]
    mem[mem[64]] = mem[mem[(32 * ('cd', 4).length) + 128]] + 1
    mem[64] = mem[64] + (32 * _1020 + 1) + 32
    if not _1020 + 1:
        mem[_619] = _1023
        _1207 = mem[mem[(32 * ('cd', 4).length) + 128]]
        idx = 0
        while idx < _1207:
            require idx < mem[mem[(32 * ('cd', 4).length) + 128]]
            require idx < mem[mem[_619]]
            mem[(32 * idx) + mem[_619] + 32] = mem[(32 * idx) + mem[(32 * ('cd', 4).length) + 128] + 32]
            _1207 = mem[mem[(32 * ('cd', 4).length) + 128]]
            idx = idx + 1
            continue 
        _1210 = mem[64]
        mem[64] = mem[64] + 96
        mem[_1210] = address(cd[36])
        mem[_1210 + 32] = address(cd[68])
        mem[_1210 + 64] = 0
        require mem[mem[(32 * ('cd', 4).length) + 128]] < mem[mem[_619]]
        mem[(32 * mem[mem[(32 * ('cd', 4).length) + 128]]) + mem[_619] + 32] = _1210
        _1226 = mem[64]
        mem[mem[64]] = 32
        _1230 = mem[_619]
        mem[mem[64] + 32] = 32
        _1231 = mem[_1230]
        mem[mem[64] + 64] = mem[_1230]
        idx = 0
        s = mem[64] + 96
        t = _1230 + 32
        while idx < _1231:
            _1374 = mem[t]
            mem[s] = mem[mem[t] + 12 len 20]
            mem[s + 32] = mem[_1374 + 44 len 20]
            mem[s + 64] = mem[_1374 + 76 len 20]
            idx = idx + 1
            s = s + 96
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _1226 + (96 * _1231) + -mem[64] + 96
    mem[64] = _1023 + (32 * _1020 + 1) + 128
    mem[_1023 + (32 * _1020 + 1) + 32] = 0
    mem[_1023 + (32 * _1020 + 1) + 64] = 0
    mem[_1023 + (32 * _1020 + 1) + 96] = 0
    mem[var81001] = _1023 + (32 * _1020 + 1) + 32
    s = var81001
    idx = var81002
    while idx - 1:
        mem[64] = mem[64] + 96
        mem[_1023 + (32 * _1020 + 1) + 32] = 0
        mem[_1023 + (32 * _1020 + 1) + 64] = 0
        mem[_1023 + (32 * _1020 + 1) + 96] = 0
        mem[s + 32] = _1023 + (32 * _1020 + 1) + 32
        s = s + 32
        idx = idx - 1
        continue 
    mem[_619] = _1023
    _1400 = mem[mem[(32 * ('cd', 4).length) + 128]]
    idx = 0
    while idx < _1400:
        require idx < mem[mem[(32 * ('cd', 4).length) + 128]]
        require idx < mem[mem[_619]]
        mem[(32 * idx) + mem[_619] + 32] = mem[(32 * idx) + mem[(32 * ('cd', 4).length) + 128] + 32]
        _1400 = mem[mem[(32 * ('cd', 4).length) + 128]]
        idx = idx + 1
        continue 
    _1401 = mem[64]
    mem[64] = mem[64] + 96
    mem[_1401] = address(cd[36])
    mem[_1401 + 32] = address(cd[68])
    mem[_1401 + 64] = 0
    require mem[mem[(32 * ('cd', 4).length) + 128]] < mem[mem[_619]]
    mem[(32 * mem[mem[(32 * ('cd', 4).length) + 128]]) + mem[_619] + 32] = _1401
    _1411 = mem[64]
    mem[mem[64]] = 32
    _1412 = mem[_619]
    mem[mem[64] + 32] = 32
    _1413 = mem[_1412]
    mem[mem[64] + 64] = mem[_1412]
    idx = 0
    s = mem[64] + 96
    t = _1412 + 32
    while idx < _1413:
        _1419 = mem[t]
        mem[s] = mem[mem[t] + 12 len 20]
        mem[s + 32] = mem[_1419 + 44 len 20]
        mem[s + 64] = mem[_1419 + 76 len 20]
        idx = idx + 1
        s = s + 96
        t = t + 32
        continue 
    return memory
      from mem[64]
       len _1411 + (96 * _1413) + -mem[64] + 96
}

function sub_53aedfb5(?) {
    require calldata.size - 4 >= 128
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require (32 * ('cd', 4).length) + 128 >= 96 and (32 * ('cd', 4).length) + 128 <= test266151307()
    mem[96] = ('cd', 4).length
    require calldata.size >= cd[4] + (32 * ('cd', 4).length) + 36
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require (32 * ('cd', 36).length) + 160 >= 128 and (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160 <= test266151307()
    mem[(32 * ('cd', 4).length) + 128] = ('cd', 36).length
    require calldata.size >= cd[36] + (32 * ('cd', 36).length) + 36
    idx = 0
    s = cd[36] + 36
    t = (32 * ('cd', 4).length) + 160
    while idx < ('cd', 36).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[68] <= test266151307()
    require calldata.size + -cd[68] - 4 >= 32
    require bool((32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192 <= test266151307())
    require ('cd', 68).length <= test266151307()
    require calldata.size > cd[68] + ('cd', 68).length + 35
    require cd[(cd[68] + ('cd', 68).length + 4)] <= test266151307()
    require (32 * cd[(cd[68] + ('cd', 68).length + 4)]) + 224 >= 192 and (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * cd[(cd[68] + ('cd', 68).length + 4)]) + 224 <= test266151307()
    mem[64] = (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * cd[(cd[68] + ('cd', 68).length + 4)]) + 224
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = cd[(cd[68] + ('cd', 68).length + 4)]
    require calldata.size >= cd[68] + ('cd', 68).length + (96 * cd[(cd[68] + ('cd', 68).length + 4)]) + 36
    s = cd[68] + ('cd', 68).length + 36
    t = (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 224
    idx = 0
    while idx < cd[(cd[68] + ('cd', 68).length + 4)]:
        require calldata.size - s >= 96
        _592 = mem[64]
        require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
        mem[64] = mem[64] + 96
        require cd[s] == address(cd[s])
        mem[_592] = cd[s]
        require cd[(s + 32)] == address(cd[(s + 32)])
        mem[_592 + 32] = cd[(s + 32)]
        require cd[(s + 64)] == address(cd[(s + 64)])
        mem[_592 + 64] = cd[(s + 64)]
        mem[t] = _592
        s = s + 96
        t = t + 32
        idx = idx + 1
        continue 
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160] = (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192
    require cd[100] <= test266151307()
    require calldata.size + -cd[100] - 4 >= 32
    _593 = mem[64]
    require mem[64] + 32 >= mem[64] and mem[64] + 32 <= test266151307()
    mem[64] = mem[64] + 32
    require ('cd', 100).length <= test266151307()
    require calldata.size > cd[100] + ('cd', 100).length + 35
    require cd[(cd[100] + ('cd', 100).length + 4)] <= test266151307()
    _594 = mem[64]
    require mem[64] + (32 * cd[(cd[100] + ('cd', 100).length + 4)]) + 32 >= mem[64] and mem[64] + (32 * cd[(cd[100] + ('cd', 100).length + 4)]) + 32 <= test266151307()
    mem[64] = mem[64] + (32 * cd[(cd[100] + ('cd', 100).length + 4)]) + 32
    mem[_594] = cd[(cd[100] + ('cd', 100).length + 4)]
    require calldata.size >= cd[100] + ('cd', 100).length + (160 * cd[(cd[100] + ('cd', 100).length + 4)]) + 36
    s = cd[100] + ('cd', 100).length + 36
    t = _594 + 32
    idx = 0
    while idx < cd[(cd[100] + ('cd', 100).length + 4)]:
        require calldata.size - s >= 160
        _786 = mem[64]
        require mem[64] + 160 >= mem[64] and mem[64] + 160 <= test266151307()
        mem[64] = mem[64] + 160
        require cd[s] == address(cd[s])
        mem[_786] = cd[s]
        require cd[(s + 32)] == address(cd[(s + 32)])
        mem[_786 + 32] = cd[(s + 32)]
        require cd[(s + 64)] == Mask(112, 0, cd[(s + 64)])
        mem[_786 + 64] = cd[(s + 64)]
        require cd[(s + 96)] == Mask(112, 0, cd[(s + 96)])
        mem[_786 + 96] = cd[(s + 96)]
        require cd[(s + 128)] == address(cd[(s + 128)])
        mem[_786 + 128] = cd[(s + 128)]
        mem[t] = _786
        s = s + 160
        t = t + 32
        idx = idx + 1
        continue 
    mem[_593] = _594
    _787 = mem[64]
    mem[64] = mem[64] + 32
    mem[_787] = 96
    _977 = mem[96]
    idx = 0
    while idx < _977 - 1:
        require idx < mem[96]
        _980 = mem[(32 * idx) + 128]
        require idx + 1 < mem[96]
        _984 = mem[(32 * idx + 1) + 128]
        _986 = mem[64]
        mem[64] = mem[64] + 32
        mem[_986] = 96
        _1167 = mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]]
        s = 0
        while s < _1167:
            _1173 = mem[64]
            mem[64] = mem[64] + 96
            mem[_1173] = 0
            mem[_1173 + 32] = 0
            mem[_1173 + 64] = 0
            require s < mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]]
            _977 = mem[96]
            _1167 = mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]]
            if mem[mem[(32 * s) + mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160] + 32] + 12 len 20] != address(_980):
                s = s + 1
                continue 
            if mem[mem[(32 * s) + mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160] + 32] + 44 len 20] != address(_984):
                s = s + 1
                continue 
            idx = idx + 1
            continue 
        _1346 = mem[(32 * ('cd', 4).length) + 128]
        s = 0
        while s < _1346:
            require s < mem[(32 * ('cd', 4).length) + 128]
            require ext_code.size(mem[(32 * s) + (32 * ('cd', 4).length) + 172 len 20])
            staticcall mem[(32 * s) + (32 * ('cd', 4).length) + 172 len 20].factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1364 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1368 = mem[_1364]
            require mem[_1364] == mem[_1364 + 12 len 20]
            mem[mem[64] + 4] = address(_980)
            mem[mem[64] + 36] = address(_984)
            require ext_code.size(address(_1368))
            staticcall address(_1368).0xe6a43905 with:
                    gas gas_remaining wei
                   args address(_980), address(_984)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1383 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_1383] == mem[_1383 + 12 len 20]
            if mem[_1383 + 12 len 20]:
                require s < mem[(32 * ('cd', 4).length) + 128]
                _1386 = mem[(32 * s) + (32 * ('cd', 4).length) + 160]
                _1516 = mem[mem[_593]]
                idx = 0
                while idx < _1516:
                    _1530 = mem[64]
                    mem[64] = mem[64] + 160
                    mem[_1530] = 0
                    mem[_1530 + 32] = 0
                    mem[_1530 + 64] = 0
                    mem[_1530 + 96] = 0
                    mem[_1530 + 128] = 0
                    require idx < mem[mem[_593]]
                    if mem[mem[(32 * idx) + mem[_593] + 32] + 140 len 20] != address(_1386):
                        if mem[mem[(32 * idx) + mem[_593] + 32] + 140 len 20] != address(_1386):
                            _977 = mem[96]
                            _1346 = mem[(32 * ('cd', 4).length) + 128]
                            _1516 = mem[mem[_593]]
                            idx = idx + 1
                            continue 
                        if mem[mem[(32 * idx) + mem[_593] + 32] + 12 len 20] != address(_984):
                            _977 = mem[96]
                            _1346 = mem[(32 * ('cd', 4).length) + 128]
                            _1516 = mem[mem[_593]]
                            idx = idx + 1
                            continue 
                        if mem[mem[(32 * idx) + mem[_593] + 32] + 44 len 20] != address(_980):
                            _977 = mem[96]
                            _1346 = mem[(32 * ('cd', 4).length) + 128]
                            _1516 = mem[mem[_593]]
                            idx = idx + 1
                            continue 
                        _1567 = mem[mem[(32 * idx) + mem[_593] + 32] + 96]
                        _1568 = mem[mem[(32 * idx) + mem[_593] + 32] + 64]
                        require s < mem[(32 * ('cd', 4).length) + 128]
                        _1581 = mem[(32 * s) + (32 * ('cd', 4).length) + 160]
                        mem[mem[64] + 4] = 10^18
                        mem[mem[64] + 36] = Mask(112, 0, _1567)
                        mem[mem[64] + 68] = Mask(112, 0, _1568)
                        require ext_code.size(address(_1581))
                        staticcall address(_1581).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args 10^18, _1567 << 144, Mask(112, 0, _1568)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1597 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_1597] > 0:
                            require s < mem[(32 * ('cd', 4).length) + 128]
                    else:
                        if mem[mem[(32 * idx) + mem[_593] + 32] + 12 len 20] != address(_980):
                            if mem[mem[(32 * idx) + mem[_593] + 32] + 140 len 20] != address(_1386):
                                _977 = mem[96]
                                _1346 = mem[(32 * ('cd', 4).length) + 128]
                                _1516 = mem[mem[_593]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_593] + 32] + 12 len 20] != address(_984):
                                _977 = mem[96]
                                _1346 = mem[(32 * ('cd', 4).length) + 128]
                                _1516 = mem[mem[_593]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_593] + 32] + 44 len 20] != address(_980):
                                _977 = mem[96]
                                _1346 = mem[(32 * ('cd', 4).length) + 128]
                                _1516 = mem[mem[_593]]
                                idx = idx + 1
                                continue 
                            _1573 = mem[mem[(32 * idx) + mem[_593] + 32] + 96]
                            _1574 = mem[mem[(32 * idx) + mem[_593] + 32] + 64]
                            require s < mem[(32 * ('cd', 4).length) + 128]
                            _1585 = mem[(32 * s) + (32 * ('cd', 4).length) + 160]
                            mem[mem[64] + 4] = 10^18
                            mem[mem[64] + 36] = Mask(112, 0, _1573)
                            mem[mem[64] + 68] = Mask(112, 0, _1574)
                            require ext_code.size(address(_1585))
                            staticcall address(_1585).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args 10^18, _1573 << 144, Mask(112, 0, _1574)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1599 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_1599] > 0:
                                require s < mem[(32 * ('cd', 4).length) + 128]
                        else:
                            if mem[mem[(32 * idx) + mem[_593] + 32] + 44 len 20] == address(_984):
                                _1560 = mem[mem[(32 * idx) + mem[_593] + 32] + 64]
                                _1561 = mem[mem[(32 * idx) + mem[_593] + 32] + 96]
                                require s < mem[(32 * ('cd', 4).length) + 128]
                                _1570 = mem[(32 * s) + (32 * ('cd', 4).length) + 160]
                                mem[mem[64] + 4] = 10^18
                                mem[mem[64] + 36] = Mask(112, 0, _1560)
                                mem[mem[64] + 68] = Mask(112, 0, _1561)
                                require ext_code.size(address(_1570))
                                staticcall address(_1570).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args 10^18, _1560 << 144, Mask(112, 0, _1561)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1588 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if mem[_1588] > 0:
                                    require s < mem[(32 * ('cd', 4).length) + 128]
                            else:
                                if mem[mem[(32 * idx) + mem[_593] + 32] + 140 len 20] != address(_1386):
                                    _977 = mem[96]
                                    _1346 = mem[(32 * ('cd', 4).length) + 128]
                                    _1516 = mem[mem[_593]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_593] + 32] + 12 len 20] != address(_984):
                                    _977 = mem[96]
                                    _1346 = mem[(32 * ('cd', 4).length) + 128]
                                    _1516 = mem[mem[_593]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_593] + 32] + 44 len 20] != address(_980):
                                    _977 = mem[96]
                                    _1346 = mem[(32 * ('cd', 4).length) + 128]
                                    _1516 = mem[mem[_593]]
                                    idx = idx + 1
                                    continue 
                                _1577 = mem[mem[(32 * idx) + mem[_593] + 32] + 96]
                                _1578 = mem[mem[(32 * idx) + mem[_593] + 32] + 64]
                                require s < mem[(32 * ('cd', 4).length) + 128]
                                _1591 = mem[(32 * s) + (32 * ('cd', 4).length) + 160]
                                mem[mem[64] + 4] = 10^18
                                mem[mem[64] + 36] = Mask(112, 0, _1577)
                                mem[mem[64] + 68] = Mask(112, 0, _1578)
                                require ext_code.size(address(_1591))
                                staticcall address(_1591).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args 10^18, _1577 << 144, Mask(112, 0, _1578)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1602 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if mem[_1602] > 0:
                                    require s < mem[(32 * ('cd', 4).length) + 128]
                    _977 = mem[96]
                    _1346 = mem[(32 * ('cd', 4).length) + 128]
                    _1516 = mem[mem[_593]]
                    s = s + 1
                    continue 
                require ext_code.size(address(_1386))
                staticcall address(_1386).factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if ext_call.success:
                    _1533 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1548 = mem[_1533]
                    require mem[_1533] == mem[_1533 + 12 len 20]
                    mem[mem[64] + 4] = address(_980)
                    mem[mem[64] + 36] = address(_984)
                    require ext_code.size(address(_1548))
                    staticcall address(_1548).0xe6a43905 with:
                            gas gas_remaining wei
                           args address(_980), address(_984)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1584 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1593 = mem[_1584]
                    require mem[_1584] == mem[_1584 + 12 len 20]
                    require ext_code.size(mem[_1584 + 12 len 20])
                    staticcall mem[_1584 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1611 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1617 = mem[_1611]
                    require mem[_1611] == mem[_1611 + 18 len 14]
                    _1620 = mem[_1611 + 32]
                    require mem[_1611 + 32] == mem[_1611 + 50 len 14]
                    require mem[_1611 + 64] == mem[_1611 + 92 len 4]
                    require ext_code.size(address(_1593))
                    staticcall address(_1593).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1628 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1628] == mem[_1628 + 12 len 20]
                    require s < mem[(32 * ('cd', 4).length) + 128]
                    if mem[_1628 + 12 len 20] != address(_984):
                        _1634 = mem[(32 * s) + (32 * ('cd', 4).length) + 160]
                        mem[mem[64] + 4] = 10^18
                        mem[mem[64] + 36] = Mask(112, 0, _1617)
                        mem[mem[64] + 68] = Mask(112, 0, _1620)
                        require ext_code.size(address(_1634))
                        staticcall address(_1634).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args 10^18, _1617 << 144, Mask(112, 0, _1620)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1648 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_1648] > 0:
                            require s < mem[(32 * ('cd', 4).length) + 128]
                    else:
                        _1640 = mem[(32 * s) + (32 * ('cd', 4).length) + 160]
                        mem[mem[64] + 4] = 10^18
                        mem[mem[64] + 36] = Mask(112, 0, _1620)
                        mem[mem[64] + 68] = Mask(112, 0, _1617)
                        require ext_code.size(address(_1640))
                        staticcall address(_1640).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args 10^18, _1620 << 144, Mask(112, 0, _1617)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1650 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_1650] > 0:
                            require s < mem[(32 * ('cd', 4).length) + 128]
                else:
                    require ext_code.size(address(_1386))
                    staticcall address(_1386).FACTORY() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1552 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1557 = mem[_1552]
                    require mem[_1552] == mem[_1552 + 12 len 20]
                    mem[mem[64] + 4] = address(_980)
                    mem[mem[64] + 36] = address(_984)
                    require ext_code.size(address(_1557))
                    staticcall address(_1557).0xe6a43905 with:
                            gas gas_remaining wei
                           args address(_980), address(_984)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1589 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1596 = mem[_1589]
                    require mem[_1589] == mem[_1589 + 12 len 20]
                    require ext_code.size(mem[_1589 + 12 len 20])
                    staticcall mem[_1589 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1614 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1619 = mem[_1614]
                    require mem[_1614] == mem[_1614 + 18 len 14]
                    _1621 = mem[_1614 + 32]
                    require mem[_1614 + 32] == mem[_1614 + 50 len 14]
                    require mem[_1614 + 64] == mem[_1614 + 92 len 4]
                    require ext_code.size(address(_1596))
                    staticcall address(_1596).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1629 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1629] == mem[_1629 + 12 len 20]
                    require s < mem[(32 * ('cd', 4).length) + 128]
                    if mem[_1629 + 12 len 20] != address(_984):
                        _1637 = mem[(32 * s) + (32 * ('cd', 4).length) + 160]
                        mem[mem[64] + 4] = 10^18
                        mem[mem[64] + 36] = Mask(112, 0, _1619)
                        mem[mem[64] + 68] = Mask(112, 0, _1621)
                        require ext_code.size(address(_1637))
                        staticcall address(_1637).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args 10^18, _1619 << 144, Mask(112, 0, _1621)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1649 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_1649] > 0:
                            require s < mem[(32 * ('cd', 4).length) + 128]
                    else:
                        _1642 = mem[(32 * s) + (32 * ('cd', 4).length) + 160]
                        mem[mem[64] + 4] = 10^18
                        mem[mem[64] + 36] = Mask(112, 0, _1621)
                        mem[mem[64] + 68] = Mask(112, 0, _1619)
                        require ext_code.size(address(_1642))
                        staticcall address(_1642).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args 10^18, _1621 << 144, Mask(112, 0, _1619)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1651 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_1651] > 0:
                            require s < mem[(32 * ('cd', 4).length) + 128]
            _977 = mem[96]
            _1346 = mem[(32 * ('cd', 4).length) + 128]
            s = s + 1
            continue 
        _1348 = mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]]
        require mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]] + 1 <= test266151307()
        _1350 = mem[64]
        mem[mem[64]] = mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]] + 1
        mem[64] = mem[64] + (32 * _1348 + 1) + 32
        if not _1348 + 1:
            mem[_986] = _1350
            _1514 = mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]]
            s = 0
            while s < _1514:
                require s < mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]]
                require s < mem[mem[_986]]
                mem[(32 * s) + mem[_986] + 32] = mem[(32 * s) + mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160] + 32]
                _977 = mem[96]
                _1514 = mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]]
                s = s + 1
                continue 
            _1517 = mem[64]
            mem[64] = mem[64] + 96
            mem[_1517] = address(_980)
            mem[_1517 + 32] = address(_984)
            mem[_1517 + 64] = 0
            require mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]] < mem[mem[_986]]
            mem[(32 * mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]]) + mem[_986] + 32] = _1517
        else:
            mem[64] = _1350 + (32 * _1348 + 1) + 128
            mem[_1350 + (32 * _1348 + 1) + 32] = 0
            mem[_1350 + (32 * _1348 + 1) + 64] = 0
            mem[_1350 + (32 * _1348 + 1) + 96] = 0
            mem[var97001] = _1350 + (32 * _1348 + 1) + 32
            t = var97001
            s = var97002
            while s - 1:
                _977 = mem[96]
                mem[64] = mem[64] + 96
                mem[_1350 + (32 * _1348 + 1) + 32] = 0
                mem[_1350 + (32 * _1348 + 1) + 64] = 0
                mem[_1350 + (32 * _1348 + 1) + 96] = 0
                mem[t + 32] = _1350 + (32 * _1348 + 1) + 32
                t = t + 32
                s = s - 1
                continue 
            mem[_986] = _1350
            _1678 = mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]]
            s = 0
            while s < _1678:
                require s < mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]]
                require s < mem[mem[_986]]
                mem[(32 * s) + mem[_986] + 32] = mem[(32 * s) + mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160] + 32]
                _977 = mem[96]
                _1678 = mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]]
                s = s + 1
                continue 
            _1679 = mem[64]
            mem[64] = mem[64] + 96
            mem[_1679] = address(_980)
            mem[_1679 + 32] = address(_984)
            mem[_1679 + 64] = 0
            require mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]] < mem[mem[_986]]
            mem[(32 * mem[mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]]) + mem[_986] + 32] = _1679
        _977 = mem[96]
        idx = idx + 1
        continue 
    _979 = mem[64]
    mem[mem[64]] = 32
    _982 = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
    mem[mem[64] + 32] = 32
    _983 = mem[_982]
    mem[mem[64] + 64] = mem[_982]
    idx = 0
    s = mem[64] + 96
    t = _982 + 32
    while idx < _983:
        _1168 = mem[t]
        mem[s] = mem[mem[t] + 12 len 20]
        mem[s + 32] = mem[_1168 + 44 len 20]
        mem[s + 64] = mem[_1168 + 76 len 20]
        idx = idx + 1
        s = s + 96
        t = t + 32
        continue 
    return memory
      from mem[64]
       len _979 + (96 * _983) + -mem[64] + 96
}

function sub_cf50bacb(?) payable {
    require calldata.size - 4 >= 96
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require (32 * ('cd', 4).length) + 128 >= 96 and (32 * ('cd', 4).length) + 128 <= test266151307()
    mem[96] = ('cd', 4).length
    require calldata.size >= cd[4] + (32 * ('cd', 4).length) + 36
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require (32 * ('cd', 36).length) + 160 >= 128 and (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160 <= test266151307()
    mem[(32 * ('cd', 4).length) + 128] = ('cd', 36).length
    require calldata.size >= cd[36] + (32 * ('cd', 36).length) + 36
    idx = 0
    s = cd[36] + 36
    t = (32 * ('cd', 4).length) + 160
    while idx < ('cd', 36).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 192 >= 160 and (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192 <= test266151307()
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192
    while idx < ('cd', 68).length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if stor0 != msg.sender:
        revert with 0, '!owner'
    require 0 < ('cd', 4).length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].deposit() with:
       value msg.value wei
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 196] = this.address
    require ext_code.size(mem[140 len 20])
    staticcall mem[140 len 20].0x70a08231 with:
            gas gas_remaining wei
           args address(this.address)
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192] = 2
    mem[64] = (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 288
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 224 len 64] = call.data[calldata.size len 64]
    idx = 0
    s = ext_call.return_data[0]
    while idx < ('cd', 4).length - 1:
        require idx < mem[96]
        require 0 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
        mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 224] = mem[(32 * idx) + 140 len 20]
        require idx + 1 < mem[96]
        require 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
        mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 256] = mem[(32 * idx + 1) + 140 len 20]
        require 0 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
        _2233 = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 224]
        require idx < mem[(32 * ('cd', 4).length) + 128]
        _2238 = mem[64]
        mem[mem[64] + 36] = mem[(32 * idx) + (32 * ('cd', 4).length) + 172 len 20]
        mem[mem[64] + 68] = s
        _2242 = mem[64]
        mem[mem[64]] = 68
        mem[64] = mem[64] + 100
        mem[_2242 + 32] = mem[_2242 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
        _2246 = mem[_2242]
        t = 0
        while t < _2246:
            mem[t + _2238 + 100] = mem[t + _2242 + 32]
            t = t + 32
            continue 
        if ceil32(_2246) <= _2246:
            call address(_2233).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _2246 + _2238 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    if idx < mem[(32 * ('cd', 4).length) + 128]:
                        _2811 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                        if idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]:
                            _2823 = mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            if block.timestamp + 600 < block.timestamp:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64]] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = _2823
                            mem[mem[64] + 68] = 160
                            _2899 = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
                            mem[mem[64] + 164] = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
                            t = 0
                            u = (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 224
                            v = mem[64] + 196
                            while t < _2899:
                                mem[v] = mem[u + 12 len 20]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[mem[64] + 100] = this.address
                            mem[mem[64] + 132] = block.timestamp + 600
                            require ext_code.size(address(_2811))
                            call address(_2811).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, _2823, 160, address(this.address), block.timestamp + 600, mem[mem[64] + 164 len (32 * _2899) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3323 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3355 = mem[_3323]
                            require mem[_3323] <= test266151307()
                            require _3323 + return_data.size > _3323 + mem[_3323] + 31
                            _3443 = mem[_3323 + mem[_3323]]
                            require mem[_3323 + mem[_3323]] <= test266151307()
                            require (32 * mem[_3323 + mem[_3323]]) + 32 >= 0 and _3323 + ceil32(return_data.size) + (32 * mem[_3323 + mem[_3323]]) + 32 <= test266151307()
                            mem[64] = _3323 + ceil32(return_data.size) + (32 * mem[_3323 + mem[_3323]]) + 32
                            mem[_3323 + ceil32(return_data.size)] = _3443
                            require return_data.size >= _3355 + (32 * _3443) + 32
                            t = _3323 + _3355 + 32
                            u = _3323 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _3443:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            if _3443 - 1 < _3443:
                                idx = idx + 1
                                s = mem[(32 * _3443 - 1) + _3323 + ceil32(return_data.size) + 32]
                                continue 
                else:
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if idx < mem[(32 * ('cd', 4).length) + 128]:
                        _2864 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                        if idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]:
                            _2880 = mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            if block.timestamp + 600 < block.timestamp:
                                revert with 0, 'SafeMath: addition overflow'
                            _2922 = mem[64]
                            mem[mem[64]] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = _2880
                            mem[mem[64] + 68] = 160
                            _2944 = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
                            mem[mem[64] + 164] = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
                            t = 0
                            u = (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 224
                            v = mem[64] + 196
                            while t < _2944:
                                mem[v] = mem[u + 12 len 20]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_2922 + 100] = this.address
                            mem[_2922 + 132] = block.timestamp + 600
                            require ext_code.size(address(_2864))
                            call address(_2864).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2922 + (32 * _2944) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3324 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3356 = mem[_3324]
                            require mem[_3324] <= test266151307()
                            require _3324 + return_data.size > _3324 + mem[_3324] + 31
                            _3444 = mem[_3324 + mem[_3324]]
                            require mem[_3324 + mem[_3324]] <= test266151307()
                            require (32 * mem[_3324 + mem[_3324]]) + 32 >= 0 and _3324 + ceil32(return_data.size) + (32 * mem[_3324 + mem[_3324]]) + 32 <= test266151307()
                            mem[64] = _3324 + ceil32(return_data.size) + (32 * mem[_3324 + mem[_3324]]) + 32
                            mem[_3324 + ceil32(return_data.size)] = _3444
                            require return_data.size >= _3356 + (32 * _3444) + 32
                            u = _3324 + _3356 + 32
                            v = _3324 + ceil32(return_data.size) + 32
                            t = 0
                            while t < _3444:
                                mem[v] = mem[u]
                                u = u + 32
                                v = v + 32
                                t = t + 1
                                continue 
                            if _3444 - 1 < _3444:
                                u = _3324 + _3356 + (32 * _3444) + 33
                                v = mem[(32 * _3444 - 1) + _3324 + ceil32(return_data.size) + 32]
                                continue 
            else:
                _2767 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_2767] = return_data.size
                mem[_2767 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    if idx < mem[(32 * ('cd', 4).length) + 128]:
                        _2813 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                        if idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]:
                            _2824 = mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            if block.timestamp + 600 < block.timestamp:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64]] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = _2824
                            mem[mem[64] + 68] = 160
                            _2900 = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
                            mem[mem[64] + 164] = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
                            t = 0
                            u = (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 224
                            v = mem[64] + 196
                            while t < _2900:
                                mem[v] = mem[u + 12 len 20]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[mem[64] + 100] = this.address
                            mem[mem[64] + 132] = block.timestamp + 600
                            require ext_code.size(address(_2813))
                            call address(_2813).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, _2824, 160, address(this.address), block.timestamp + 600, mem[mem[64] + 164 len (32 * _2900) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3325 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3357 = mem[_3325]
                            require mem[_3325] <= test266151307()
                            require _3325 + return_data.size > _3325 + mem[_3325] + 31
                            _3445 = mem[_3325 + mem[_3325]]
                            require mem[_3325 + mem[_3325]] <= test266151307()
                            require (32 * mem[_3325 + mem[_3325]]) + 32 >= 0 and _3325 + ceil32(return_data.size) + (32 * mem[_3325 + mem[_3325]]) + 32 <= test266151307()
                            mem[64] = _3325 + ceil32(return_data.size) + (32 * mem[_3325 + mem[_3325]]) + 32
                            mem[_3325 + ceil32(return_data.size)] = _3445
                            require return_data.size >= _3357 + (32 * _3445) + 32
                            t = _3325 + _3357 + 32
                            u = _3325 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _3445:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            if _3445 - 1 < _3445:
                                idx = idx + 1
                                s = mem[(32 * _3445 - 1) + _3325 + ceil32(return_data.size) + 32]
                                continue 
                else:
                    require return_data.size >= 32
                    require mem[_2767 + 32] == bool(mem[_2767 + 32])
                    if not mem[_2767 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if idx < mem[(32 * ('cd', 4).length) + 128]:
                        _2868 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                        if idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]:
                            _2882 = mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            if block.timestamp + 600 < block.timestamp:
                                revert with 0, 'SafeMath: addition overflow'
                            _2924 = mem[64]
                            mem[mem[64]] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = _2882
                            mem[mem[64] + 68] = 160
                            _2946 = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
                            mem[mem[64] + 164] = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
                            t = 0
                            u = (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 224
                            v = mem[64] + 196
                            while t < _2946:
                                mem[v] = mem[u + 12 len 20]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_2924 + 100] = this.address
                            mem[_2924 + 132] = block.timestamp + 600
                            require ext_code.size(address(_2868))
                            call address(_2868).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2924 + (32 * _2946) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3326 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3358 = mem[_3326]
                            require mem[_3326] <= test266151307()
                            require _3326 + return_data.size > _3326 + mem[_3326] + 31
                            _3446 = mem[_3326 + mem[_3326]]
                            require mem[_3326 + mem[_3326]] <= test266151307()
                            require (32 * mem[_3326 + mem[_3326]]) + 32 >= 0 and _3326 + ceil32(return_data.size) + (32 * mem[_3326 + mem[_3326]]) + 32 <= test266151307()
                            mem[64] = _3326 + ceil32(return_data.size) + (32 * mem[_3326 + mem[_3326]]) + 32
                            mem[_3326 + ceil32(return_data.size)] = _3446
                            require return_data.size >= _3358 + (32 * _3446) + 32
                            u = _3326 + _3358 + 32
                            v = _3326 + ceil32(return_data.size) + 32
                            t = 0
                            while t < _3446:
                                mem[v] = mem[u]
                                u = u + 32
                                v = v + 32
                                t = t + 1
                                continue 
                            if _3446 - 1 < _3446:
                                u = _3326 + _3358 + (32 * _3446) + 33
                                v = mem[(32 * _3446 - 1) + _3326 + ceil32(return_data.size) + 32]
                                continue 
        else:
            mem[_2238 + _2246 + 100] = 0
            call address(_2233).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _2246 + _2238 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    if idx < mem[(32 * ('cd', 4).length) + 128]:
                        _2825 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                        if idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]:
                            _2839 = mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            if block.timestamp + 600 < block.timestamp:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64]] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = _2839
                            mem[mem[64] + 68] = 160
                            _2917 = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
                            mem[mem[64] + 164] = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
                            t = 0
                            u = (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 224
                            v = mem[64] + 196
                            while t < _2917:
                                mem[v] = mem[u + 12 len 20]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[mem[64] + 100] = this.address
                            mem[mem[64] + 132] = block.timestamp + 600
                            require ext_code.size(address(_2825))
                            call address(_2825).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, _2839, 160, address(this.address), block.timestamp + 600, mem[mem[64] + 164 len (32 * _2917) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3327 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3359 = mem[_3327]
                            require mem[_3327] <= test266151307()
                            require _3327 + return_data.size > _3327 + mem[_3327] + 31
                            _3447 = mem[_3327 + mem[_3327]]
                            require mem[_3327 + mem[_3327]] <= test266151307()
                            require (32 * mem[_3327 + mem[_3327]]) + 32 >= 0 and _3327 + ceil32(return_data.size) + (32 * mem[_3327 + mem[_3327]]) + 32 <= test266151307()
                            mem[64] = _3327 + ceil32(return_data.size) + (32 * mem[_3327 + mem[_3327]]) + 32
                            mem[_3327 + ceil32(return_data.size)] = _3447
                            require return_data.size >= _3359 + (32 * _3447) + 32
                            t = _3327 + _3359 + 32
                            u = _3327 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _3447:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            if _3447 - 1 < _3447:
                                idx = idx + 1
                                s = mem[(32 * _3447 - 1) + _3327 + ceil32(return_data.size) + 32]
                                continue 
                else:
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if idx < mem[(32 * ('cd', 4).length) + 128]:
                        _2884 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                        if idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]:
                            _2902 = mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            if block.timestamp + 600 < block.timestamp:
                                revert with 0, 'SafeMath: addition overflow'
                            _2932 = mem[64]
                            mem[mem[64]] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = _2902
                            mem[mem[64] + 68] = 160
                            _2958 = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
                            mem[mem[64] + 164] = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
                            s = 0
                            t = (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 224
                            u = mem[64] + 196
                            while s < _2958:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_2932 + 100] = this.address
                            mem[_2932 + 132] = block.timestamp + 600
                            require ext_code.size(address(_2884))
                            call address(_2884).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2932 + (32 * _2958) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3328 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3360 = mem[_3328]
                            require mem[_3328] <= test266151307()
                            require _3328 + return_data.size > _3328 + mem[_3328] + 31
                            _3448 = mem[_3328 + mem[_3328]]
                            require mem[_3328 + mem[_3328]] <= test266151307()
                            require (32 * mem[_3328 + mem[_3328]]) + 32 >= 0 and _3328 + ceil32(return_data.size) + (32 * mem[_3328 + mem[_3328]]) + 32 <= test266151307()
                            mem[64] = _3328 + ceil32(return_data.size) + (32 * mem[_3328 + mem[_3328]]) + 32
                            mem[_3328 + ceil32(return_data.size)] = _3448
                            require return_data.size >= _3360 + (32 * _3448) + 32
                            t = _3328 + _3360 + 32
                            u = _3328 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _3448:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            if _3448 - 1 < _3448:
                                idx = idx + 1
                                s = mem[(32 * _3448 - 1) + _3328 + ceil32(return_data.size) + 32]
                                continue 
            else:
                _2770 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_2770] = return_data.size
                mem[_2770 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    if idx < mem[(32 * ('cd', 4).length) + 128]:
                        _2827 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                        if idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]:
                            _2840 = mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            if block.timestamp + 600 < block.timestamp:
                                revert with 0, 'SafeMath: addition overflow'
                            _2887 = mem[64]
                            mem[mem[64]] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = _2840
                            mem[mem[64] + 68] = 160
                            _2918 = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
                            mem[mem[64] + 164] = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
                            s = 0
                            t = (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 224
                            u = mem[64] + 196
                            while s < _2918:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_2887 + 100] = this.address
                            mem[_2887 + 132] = block.timestamp + 600
                            require ext_code.size(address(_2827))
                            call address(_2827).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2887 + (32 * _2918) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3329 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3361 = mem[_3329]
                            require mem[_3329] <= test266151307()
                            require _3329 + return_data.size > _3329 + mem[_3329] + 31
                            _3449 = mem[_3329 + mem[_3329]]
                            require mem[_3329 + mem[_3329]] <= test266151307()
                            require (32 * mem[_3329 + mem[_3329]]) + 32 >= 0 and _3329 + ceil32(return_data.size) + (32 * mem[_3329 + mem[_3329]]) + 32 <= test266151307()
                            mem[64] = _3329 + ceil32(return_data.size) + (32 * mem[_3329 + mem[_3329]]) + 32
                            mem[_3329 + ceil32(return_data.size)] = _3449
                            require return_data.size >= _3361 + (32 * _3449) + 32
                            t = _3329 + _3361 + 32
                            u = _3329 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _3449:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            if _3449 - 1 < _3449:
                                idx = idx + 1
                                s = mem[(32 * _3449 - 1) + _3329 + ceil32(return_data.size) + 32]
                                continue 
                else:
                    require return_data.size >= 32
                    require mem[_2770 + 32] == bool(mem[_2770 + 32])
                    if not mem[_2770 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if idx < mem[(32 * ('cd', 4).length) + 128]:
                        _2888 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                        if idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]:
                            _2904 = mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            if block.timestamp + 600 < block.timestamp:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64]] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = _2904
                            mem[mem[64] + 68] = 160
                            _2960 = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
                            mem[mem[64] + 164] = mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 192]
                            t = 0
                            u = (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + ceil32(return_data.size) + 224
                            v = mem[64] + 196
                            while t < _2960:
                                mem[v] = mem[u + 12 len 20]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[mem[64] + 100] = this.address
                            mem[mem[64] + 132] = block.timestamp + 600
                            require ext_code.size(address(_2888))
                            call address(_2888).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, _2904, 160, address(this.address), block.timestamp + 600, mem[mem[64] + 164 len (32 * _2960) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3330 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3362 = mem[_3330]
                            require mem[_3330] <= test266151307()
                            require _3330 + return_data.size > _3330 + mem[_3330] + 31
                            _3450 = mem[_3330 + mem[_3330]]
                            require mem[_3330 + mem[_3330]] <= test266151307()
                            require (32 * mem[_3330 + mem[_3330]]) + 32 >= 0 and _3330 + ceil32(return_data.size) + (32 * mem[_3330 + mem[_3330]]) + 32 <= test266151307()
                            mem[64] = _3330 + ceil32(return_data.size) + (32 * mem[_3330 + mem[_3330]]) + 32
                            mem[_3330 + ceil32(return_data.size)] = _3450
                            require return_data.size >= _3362 + (32 * _3450) + 32
                            t = _3330 + _3362 + 32
                            u = _3330 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _3450:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            if _3450 - 1 < _3450:
                                idx = idx + 1
                                s = mem[(32 * _3450 - 1) + _3330 + ceil32(return_data.size) + 32]
                                continue 
        revert
    if s <= ext_call.return_data[0]:
        revert with 0, 'Nope!'
    require mem[96] - 1 < mem[96]
    _2226 = mem[(32 * mem[96] - 1) + 128]
    if stor0 != msg.sender:
        revert with 0, '!owner'
    _2236 = mem[64]
    mem[mem[64] + 36] = this.address
    mem[mem[64] + 68] = s
    _2239 = mem[64]
    mem[mem[64]] = 68
    mem[64] = mem[64] + 100
    mem[_2239 + 32 len 4] = approve(address rg1, uint256 rg2)
    _2245 = mem[_2239]
    mem[_2236 + 100 len ceil32(mem[_2239])] = mem[_2239 + 32 len ceil32(mem[_2239])]
    var79001 = ceil32(_2245)
    if ceil32(_2245) <= _2245:
        call address(_2226) with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _2245 + _2236 + -mem[64] + 96]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not mem[96]:
                _2805 = mem[64]
                mem[mem[64] + 36] = this.address
                mem[mem[64] + 68] = msg.sender
                mem[mem[64] + 100] = s
                _2829 = mem[64]
                mem[mem[64]] = 100
                mem[64] = mem[64] + 132
                mem[_2829 + 32 len 4] = unknown_0x23b872dd(?????)
                _2841 = mem[_2829]
                mem[_2805 + 132 len ceil32(mem[_2829])] = mem[_2829 + 32 len ceil32(mem[_2829])]
                if ceil32(_2841) <= _2841:
                    call address(_2226) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2841 + _2805 + -mem[64] + 128]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if mem[96]:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                    else:
                        _3307 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_3307 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if return_data.size:
                            require return_data.size >= 32
                            require mem[_3307 + 32] == bool(mem[_3307 + 32])
                            if not mem[_3307 + 32]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                else:
                    mem[_2805 + _2841 + 132] = 0
                    call address(_2226) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2841 + _2805 + -mem[64] + 128]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if mem[96]:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                    else:
                        _3331 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_3331 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if return_data.size:
                            require return_data.size >= 32
                            require mem[_3331 + 32] == bool(mem[_3331 + 32])
                            if not mem[_3331 + 32]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
            else:
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                _2857 = mem[64]
                mem[mem[64] + 36] = this.address
                mem[mem[64] + 68] = msg.sender
                mem[mem[64] + 100] = s
                _2892 = mem[64]
                mem[mem[64]] = 100
                mem[64] = mem[64] + 132
                mem[_2892 + 32 len 4] = unknown_0x23b872dd(?????)
                _2905 = mem[_2892]
                mem[_2857 + 132 len ceil32(mem[_2892])] = mem[_2892 + 32 len ceil32(mem[_2892])]
                if ceil32(_2905) <= _2905:
                    call address(_2226) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2905 + _2857 + -mem[64] + 128]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if mem[96]:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                    else:
                        _3309 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_3309 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if return_data.size:
                            require return_data.size >= 32
                            require mem[_3309 + 32] == bool(mem[_3309 + 32])
                            if not mem[_3309 + 32]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                else:
                    mem[_2857 + _2905 + 132] = 0
                    call address(_2226) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2905 + _2857 + -mem[64] + 128]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if mem[96]:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                    else:
                        _3332 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_3332 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if return_data.size:
                            require return_data.size >= 32
                            require mem[_3332 + 32] == bool(mem[_3332 + 32])
                            if not mem[_3332 + 32]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
        else:
            _2765 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_2765] = return_data.size
            mem[_2765 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                _2806 = mem[64]
                mem[mem[64] + 36] = this.address
                mem[mem[64] + 68] = msg.sender
                mem[mem[64] + 100] = s
                _2833 = mem[64]
                mem[mem[64]] = 100
                mem[64] = mem[64] + 132
                mem[_2833 + 32 len 4] = unknown_0x23b872dd(?????)
                _2842 = mem[_2833]
                mem[_2806 + 132 len ceil32(mem[_2833])] = mem[_2833 + 32 len ceil32(mem[_2833])]
                if ceil32(_2842) <= _2842:
                    call address(_2226) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2842 + _2806 + -mem[64] + 128]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if mem[96]:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                    else:
                        _3311 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_3311 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if return_data.size:
                            require return_data.size >= 32
                            require mem[_3311 + 32] == bool(mem[_3311 + 32])
                            if not mem[_3311 + 32]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                else:
                    mem[_2806 + _2842 + 132] = 0
                    call address(_2226) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2842 + _2806 + -mem[64] + 128]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if mem[96]:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                    else:
                        _3333 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_3333 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if return_data.size:
                            require return_data.size >= 32
                            require mem[_3333 + 32] == bool(mem[_3333 + 32])
                            if not mem[_3333 + 32]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
            else:
                require return_data.size >= 32
                require mem[_2765 + 32] == bool(mem[_2765 + 32])
                if not mem[_2765 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                _2859 = mem[64]
                mem[mem[64] + 36] = this.address
                mem[mem[64] + 68] = msg.sender
                mem[mem[64] + 100] = s
                _2896 = mem[64]
                mem[mem[64]] = 100
                mem[64] = mem[64] + 132
                mem[_2896 + 32 len 4] = unknown_0x23b872dd(?????)
                _2906 = mem[_2896]
                mem[_2859 + 132 len ceil32(mem[_2896])] = mem[_2896 + 32 len ceil32(mem[_2896])]
                if ceil32(_2906) <= _2906:
                    call address(_2226) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2906 + _2859 + -mem[64] + 128]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if mem[96]:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                    else:
                        _3313 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_3313 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if return_data.size:
                            require return_data.size >= 32
                            require mem[_3313 + 32] == bool(mem[_3313 + 32])
                            if not mem[_3313 + 32]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                else:
                    mem[_2859 + _2906 + 132] = 0
                    call address(_2226) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2906 + _2859 + -mem[64] + 128]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if mem[96]:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                    else:
                        _3334 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_3334 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if return_data.size:
                            require return_data.size >= 32
                            require mem[_3334 + 32] == bool(mem[_3334 + 32])
                            if not mem[_3334 + 32]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
    else:
        mem[_2236 + _2245 + 100] = 0
        call address(_2226) with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _2245 + _2236 + -mem[64] + 96]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not mem[96]:
                _2821 = mem[64]
                mem[mem[64] + 36] = this.address
                mem[mem[64] + 68] = msg.sender
                mem[mem[64] + 100] = s
                _2843 = mem[64]
                mem[mem[64]] = 100
                mem[64] = mem[64] + 132
                mem[_2843 + 32 len 4] = unknown_0x23b872dd(?????)
                _2861 = mem[_2843]
                mem[_2821 + 132 len ceil32(mem[_2843])] = mem[_2843 + 32 len ceil32(mem[_2843])]
                if ceil32(_2861) <= _2861:
                    call address(_2226) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2861 + _2821 + -mem[64] + 128]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if mem[96]:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                    else:
                        _3315 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_3315 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if return_data.size:
                            require return_data.size >= 32
                            require mem[_3315 + 32] == bool(mem[_3315 + 32])
                            if not mem[_3315 + 32]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                else:
                    mem[_2821 + _2861 + 132] = 0
                    call address(_2226) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2861 + _2821 + -mem[64] + 128]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if mem[96]:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                    else:
                        _3335 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_3335 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if return_data.size:
                            require return_data.size >= 32
                            require mem[_3335 + 32] == bool(mem[_3335 + 32])
                            if not mem[_3335 + 32]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
            else:
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                _2875 = mem[64]
                mem[mem[64] + 36] = this.address
                mem[mem[64] + 68] = msg.sender
                mem[mem[64] + 100] = s
                _2908 = mem[64]
                mem[mem[64]] = 100
                mem[64] = mem[64] + 132
                mem[_2908 + 32 len 4] = unknown_0x23b872dd(?????)
                _2919 = mem[_2908]
                mem[_2875 + 132 len ceil32(mem[_2908])] = mem[_2908 + 32 len ceil32(mem[_2908])]
                if ceil32(_2919) <= _2919:
                    call address(_2226) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2919 + _2875 + -mem[64] + 128]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if mem[96]:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                    else:
                        _3317 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_3317 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if return_data.size:
                            require return_data.size >= 32
                            require mem[_3317 + 32] == bool(mem[_3317 + 32])
                            if not mem[_3317 + 32]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                else:
                    mem[_2875 + _2919 + 132] = 0
                    call address(_2226) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2919 + _2875 + -mem[64] + 128]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if mem[96]:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                    else:
                        _3336 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_3336 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if return_data.size:
                            require return_data.size >= 32
                            require mem[_3336 + 32] == bool(mem[_3336 + 32])
                            if not mem[_3336 + 32]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
        else:
            _2769 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_2769] = return_data.size
            mem[_2769 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                _2822 = mem[64]
                mem[mem[64] + 36] = this.address
                mem[mem[64] + 68] = msg.sender
                mem[mem[64] + 100] = s
                _2847 = mem[64]
                mem[mem[64]] = 100
                mem[64] = mem[64] + 132
                mem[_2847 + 32 len 4] = unknown_0x23b872dd(?????)
                _2862 = mem[_2847]
                mem[_2822 + 132 len ceil32(mem[_2847])] = mem[_2847 + 32 len ceil32(mem[_2847])]
                if ceil32(_2862) <= _2862:
                    call address(_2226) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2862 + _2822 + -mem[64] + 128]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if mem[96]:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                    else:
                        _3319 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_3319 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if return_data.size:
                            require return_data.size >= 32
                            require mem[_3319 + 32] == bool(mem[_3319 + 32])
                            if not mem[_3319 + 32]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                else:
                    mem[_2822 + _2862 + 132] = 0
                    call address(_2226) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2862 + _2822 + -mem[64] + 128]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if mem[96]:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                    else:
                        _3337 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_3337 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if return_data.size:
                            require return_data.size >= 32
                            require mem[_3337 + 32] == bool(mem[_3337 + 32])
                            if not mem[_3337 + 32]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
            else:
                require return_data.size >= 32
                require mem[_2769 + 32] == bool(mem[_2769 + 32])
                if not mem[_2769 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                _2877 = mem[64]
                mem[mem[64] + 36] = this.address
                mem[mem[64] + 68] = msg.sender
                mem[mem[64] + 100] = s
                _2912 = mem[64]
                mem[mem[64]] = 100
                mem[64] = mem[64] + 132
                mem[_2912 + 32 len 4] = unknown_0x23b872dd(?????)
                _2920 = mem[_2912]
                mem[_2877 + 132 len ceil32(mem[_2912])] = mem[_2912 + 32 len ceil32(mem[_2912])]
                if ceil32(_2920) <= _2920:
                    call address(_2226) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2920 + _2877 + -mem[64] + 128]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if mem[96]:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                    else:
                        _3321 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_3321 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if return_data.size:
                            require return_data.size >= 32
                            require mem[_3321 + 32] == bool(mem[_3321 + 32])
                            if not mem[_3321 + 32]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                else:
                    mem[_2877 + _2920 + 132] = 0
                    call address(_2226) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2920 + _2877 + -mem[64] + 128]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if mem[96]:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                    else:
                        _3338 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_3338 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
                        if return_data.size:
                            require return_data.size >= 32
                            require mem[_3338 + 32] == bool(mem[_3338 + 32])
                            if not mem[_3338 + 32]:
                                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
}

function sub_cb22e939(?) {
    require calldata.size - 4 >= 128
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require (32 * ('cd', 4).length) + 128 >= 96 and (32 * ('cd', 4).length) + 128 <= test266151307()
    mem[96] = ('cd', 4).length
    require calldata.size >= cd[4] + (32 * ('cd', 4).length) + 36
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[36] <= test266151307()
    require calldata.size + -cd[36] - 4 >= 32
    require bool((32 * ('cd', 4).length) + 160 <= test266151307())
    require ('cd', 36).length <= test266151307()
    require calldata.size > cd[36] + ('cd', 36).length + 35
    require cd[(cd[36] + ('cd', 36).length + 4)] <= test266151307()
    require (32 * cd[(cd[36] + ('cd', 36).length + 4)]) + 192 >= 160 and (32 * ('cd', 4).length) + (32 * cd[(cd[36] + ('cd', 36).length + 4)]) + 192 <= test266151307()
    mem[64] = (32 * ('cd', 4).length) + (32 * cd[(cd[36] + ('cd', 36).length + 4)]) + 192
    mem[(32 * ('cd', 4).length) + 160] = cd[(cd[36] + ('cd', 36).length + 4)]
    require calldata.size >= cd[36] + ('cd', 36).length + (96 * cd[(cd[36] + ('cd', 36).length + 4)]) + 36
    s = cd[36] + ('cd', 36).length + 36
    t = (32 * ('cd', 4).length) + 192
    idx = 0
    while idx < cd[(cd[36] + ('cd', 36).length + 4)]:
        require calldata.size - s >= 96
        _2002 = mem[64]
        require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
        mem[64] = mem[64] + 96
        require cd[s] == address(cd[s])
        mem[_2002] = cd[s]
        require cd[(s + 32)] == address(cd[(s + 32)])
        mem[_2002 + 32] = cd[(s + 32)]
        require cd[(s + 64)] == address(cd[(s + 64)])
        mem[_2002 + 64] = cd[(s + 64)]
        mem[t] = _2002
        s = s + 96
        t = t + 32
        idx = idx + 1
        continue 
    mem[(32 * ('cd', 4).length) + 128] = (32 * ('cd', 4).length) + 160
    require cd[100] <= test266151307()
    require calldata.size + -cd[100] - 4 >= 32
    _2003 = mem[64]
    require mem[64] + 32 >= mem[64] and mem[64] + 32 <= test266151307()
    mem[64] = mem[64] + 32
    require ('cd', 100).length <= test266151307()
    require calldata.size > cd[100] + ('cd', 100).length + 35
    require cd[(cd[100] + ('cd', 100).length + 4)] <= test266151307()
    _2004 = mem[64]
    require mem[64] + (32 * cd[(cd[100] + ('cd', 100).length + 4)]) + 32 >= mem[64] and mem[64] + (32 * cd[(cd[100] + ('cd', 100).length + 4)]) + 32 <= test266151307()
    mem[64] = mem[64] + (32 * cd[(cd[100] + ('cd', 100).length + 4)]) + 32
    mem[_2004] = cd[(cd[100] + ('cd', 100).length + 4)]
    require calldata.size >= cd[100] + ('cd', 100).length + (160 * cd[(cd[100] + ('cd', 100).length + 4)]) + 36
    s = cd[100] + ('cd', 100).length + 36
    t = _2004 + 32
    idx = 0
    while idx < cd[(cd[100] + ('cd', 100).length + 4)]:
        require calldata.size - s >= 160
        _3001 = mem[64]
        require mem[64] + 160 >= mem[64] and mem[64] + 160 <= test266151307()
        mem[64] = mem[64] + 160
        require cd[s] == address(cd[s])
        mem[_3001] = cd[s]
        require cd[(s + 32)] == address(cd[(s + 32)])
        mem[_3001 + 32] = cd[(s + 32)]
        require cd[(s + 64)] == Mask(112, 0, cd[(s + 64)])
        mem[_3001 + 64] = cd[(s + 64)]
        require cd[(s + 96)] == Mask(112, 0, cd[(s + 96)])
        mem[_3001 + 96] = cd[(s + 96)]
        require cd[(s + 128)] == address(cd[(s + 128)])
        mem[_3001 + 128] = cd[(s + 128)]
        mem[t] = _3001
        s = s + 160
        t = t + 32
        idx = idx + 1
        continue 
    mem[_2003] = _2004
    _3000 = mem[96]
    require mem[96] - 1 <= test266151307()
    _3002 = mem[64]
    mem[mem[64]] = mem[96] - 1
    if not _3000 - 1:
        require mem[96] - 1 <= test266151307()
        mem[mem[64] + (32 * _3000 - 1) + 32] = mem[96] - 1
        mem[64] = mem[64] + (32 * _3000 - 1) + (32 * mem[96] - 1) + 64
        if not mem[96] - 1:
            _3995 = mem[96]
            idx = 0
            s = cd[68]
            while idx < _3995 - 1:
                require idx < mem[96]
                _4004 = mem[(32 * idx) + 128]
                require idx + 1 < mem[96]
                _4015 = mem[(32 * idx + 1) + 128]
                _4020 = mem[64]
                mem[64] = mem[64] + 96
                mem[_4020] = 0
                mem[_4020 + 32] = 0
                mem[_4020 + 64] = 0
                _4031 = mem[64]
                mem[64] = mem[64] + 96
                mem[_4031] = 0
                mem[_4031 + 32] = 0
                mem[_4031 + 64] = 0
                _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                t = 0
                while t < _4984:
                    _4995 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_4995] = 0
                    mem[_4995 + 32] = 0
                    mem[_4995 + 64] = 0
                    require t < mem[mem[(32 * ('cd', 4).length) + 128]]
                    _5020 = mem[(32 * t) + mem[(32 * ('cd', 4).length) + 128] + 32]
                    if mem[mem[(32 * t) + mem[(32 * ('cd', 4).length) + 128] + 32] + 12 len 20] != address(_4004):
                        _3995 = mem[96]
                        _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[(32 * ('cd', 4).length) + 128] + 32] + 44 len 20] != address(_4015):
                        _3995 = mem[96]
                        _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        t = t + 1
                        continue 
                    require idx < mem[_3002]
                    mem[(32 * idx) + _3002 + 32] = mem[mem[(32 * t) + mem[(32 * ('cd', 4).length) + 128] + 32] + 76 len 20]
                    _5082 = mem[_5020 + 64]
                    _5938 = mem[mem[_2003]]
                    t = 0
                    while t < _5938:
                        _5960 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_5960] = 0
                        mem[_5960 + 32] = 0
                        mem[_5960 + 64] = 0
                        mem[_5960 + 96] = 0
                        mem[_5960 + 128] = 0
                        require t < mem[mem[_2003]]
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5082):
                            if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5082):
                                _3995 = mem[96]
                                _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                                _5938 = mem[mem[_2003]]
                                t = t + 1
                                continue 
                            if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4015):
                                _3995 = mem[96]
                                _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                                _5938 = mem[mem[_2003]]
                                t = t + 1
                                continue 
                            if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4004):
                                _3995 = mem[96]
                                _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                                _5938 = mem[mem[_2003]]
                                t = t + 1
                                continue 
                            _6180 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                            _6181 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                            _6245 = mem[_5020 + 64]
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = Mask(112, 0, _6180)
                            mem[mem[64] + 68] = Mask(112, 0, _6181)
                            require ext_code.size(address(_6245))
                            staticcall address(_6245).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args s, _6180 << 144, Mask(112, 0, _6181)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6372 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _6417 = mem[_6372]
                            require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                            mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6372]
                            _3995 = mem[96]
                            _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5938 = mem[mem[_2003]]
                            idx = idx + 1
                            s = _6417
                            continue 
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4004):
                            if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5082):
                                _3995 = mem[96]
                                _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                                _5938 = mem[mem[_2003]]
                                t = t + 1
                                continue 
                            if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4015):
                                _3995 = mem[96]
                                _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                                _5938 = mem[mem[_2003]]
                                t = t + 1
                                continue 
                            if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4004):
                                _3995 = mem[96]
                                _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                                _5938 = mem[mem[_2003]]
                                t = t + 1
                                continue 
                            _6212 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                            _6213 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                            _6284 = mem[_5020 + 64]
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = Mask(112, 0, _6212)
                            mem[mem[64] + 68] = Mask(112, 0, _6213)
                            require ext_code.size(address(_6284))
                            staticcall address(_6284).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args s, _6212 << 144, Mask(112, 0, _6213)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6402 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _6434 = mem[_6402]
                            require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                            mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6402]
                            _3995 = mem[96]
                            _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5938 = mem[mem[_2003]]
                            idx = idx + 1
                            s = _6434
                            continue 
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] == address(_4015):
                            _6103 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                            _6104 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                            _6155 = mem[_5020 + 64]
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = Mask(112, 0, _6103)
                            mem[mem[64] + 68] = Mask(112, 0, _6104)
                            require ext_code.size(address(_6155))
                            staticcall address(_6155).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args s, _6103 << 144, Mask(112, 0, _6104)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6286 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _6348 = mem[_6286]
                            require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                            mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6286]
                            _3995 = mem[96]
                            _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5938 = mem[mem[_2003]]
                            idx = idx + 1
                            s = _6348
                            continue 
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5082):
                            _3995 = mem[96]
                            _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5938 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4015):
                            _3995 = mem[96]
                            _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5938 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4004):
                            _3995 = mem[96]
                            _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5938 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        _6247 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                        _6248 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                        _6317 = mem[_5020 + 64]
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = Mask(112, 0, _6247)
                        mem[mem[64] + 68] = Mask(112, 0, _6248)
                        require ext_code.size(address(_6317))
                        staticcall address(_6317).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args s, _6247 << 144, Mask(112, 0, _6248)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6418 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6454 = mem[_6418]
                        require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                        mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6418]
                        _3995 = mem[96]
                        _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5938 = mem[mem[_2003]]
                        idx = idx + 1
                        s = _6454
                        continue 
                    require ext_code.size(address(_5082))
                    staticcall address(_5082).factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if ext_call.success:
                        _6002 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6048 = mem[_6002]
                        require mem[_6002] == mem[_6002 + 12 len 20]
                        mem[mem[64] + 4] = address(_4004)
                        mem[mem[64] + 36] = address(_4015)
                        require ext_code.size(address(_6048))
                        staticcall address(_6048).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_4004), address(_4015)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6315 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6371 = mem[_6315]
                        require mem[_6315] == mem[_6315 + 12 len 20]
                        require ext_code.size(mem[_6315 + 12 len 20])
                        staticcall mem[_6315 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6504 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _6520 = mem[_6504]
                        require mem[_6504] == mem[_6504 + 18 len 14]
                        _6536 = mem[_6504 + 32]
                        require mem[_6504 + 32] == mem[_6504 + 50 len 14]
                        require mem[_6504 + 64] == mem[_6504 + 92 len 4]
                        require ext_code.size(address(_6371))
                        staticcall address(_6371).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6600 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_6600] == mem[_6600 + 12 len 20]
                        if mem[_6600 + 12 len 20] != address(_4015):
                            _6633 = mem[_5020 + 64]
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = Mask(112, 0, _6520)
                            mem[mem[64] + 68] = Mask(112, 0, _6536)
                            require ext_code.size(address(_6633))
                            staticcall address(_6633).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args s, _6520 << 144, Mask(112, 0, _6536)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6722 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _6754 = mem[_6722]
                            require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                            mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6722]
                            _3995 = mem[96]
                            _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            idx = idx + 1
                            s = _6754
                            continue 
                        _6653 = mem[_5020 + 64]
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = Mask(112, 0, _6536)
                        mem[mem[64] + 68] = Mask(112, 0, _6520)
                        require ext_code.size(address(_6653))
                        staticcall address(_6653).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args s, _6536 << 144, Mask(112, 0, _6520)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6738 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6772 = mem[_6738]
                        require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                        mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6738]
                        _3995 = mem[96]
                        _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        idx = idx + 1
                        s = _6772
                        continue 
                    require ext_code.size(address(_5082))
                    staticcall address(_5082).FACTORY() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6058 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6100 = mem[_6058]
                    require mem[_6058] == mem[_6058 + 12 len 20]
                    mem[mem[64] + 4] = address(_4004)
                    mem[mem[64] + 36] = address(_4015)
                    require ext_code.size(address(_6100))
                    staticcall address(_6100).0xe6a43905 with:
                            gas gas_remaining wei
                           args address(_4004), address(_4015)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6346 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6401 = mem[_6346]
                    require mem[_6346] == mem[_6346 + 12 len 20]
                    require ext_code.size(mem[_6346 + 12 len 20])
                    staticcall mem[_6346 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6512 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _6528 = mem[_6512]
                    require mem[_6512] == mem[_6512 + 18 len 14]
                    _6544 = mem[_6512 + 32]
                    require mem[_6512 + 32] == mem[_6512 + 50 len 14]
                    require mem[_6512 + 64] == mem[_6512 + 92 len 4]
                    require ext_code.size(address(_6401))
                    staticcall address(_6401).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6608 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_6608] == mem[_6608 + 12 len 20]
                    if mem[_6608 + 12 len 20] != address(_4015):
                        _6651 = mem[_5020 + 64]
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = Mask(112, 0, _6528)
                        mem[mem[64] + 68] = Mask(112, 0, _6544)
                        require ext_code.size(address(_6651))
                        staticcall address(_6651).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args s, _6528 << 144, Mask(112, 0, _6544)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6737 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6770 = mem[_6737]
                        require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                        mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6737]
                        _3995 = mem[96]
                        _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        idx = idx + 1
                        s = _6770
                        continue 
                    _6682 = mem[_5020 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6544)
                    mem[mem[64] + 68] = Mask(112, 0, _6528)
                    require ext_code.size(address(_6682))
                    staticcall address(_6682).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6544 << 144, Mask(112, 0, _6528)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6753 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6795 = mem[_6753]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6753]
                    _3995 = mem[96]
                    _4984 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    idx = idx + 1
                    s = _6795
                    continue 
                require idx < mem[_3002]
                mem[(32 * idx) + _3002 + 32] = mem[_4031 + 76 len 20]
                _5019 = mem[_4031 + 64]
                _5936 = mem[mem[_2003]]
                t = 0
                while t < _5936:
                    _5957 = mem[64]
                    mem[64] = mem[64] + 160
                    mem[_5957] = 0
                    mem[_5957 + 32] = 0
                    mem[_5957 + 64] = 0
                    mem[_5957 + 96] = 0
                    mem[_5957 + 128] = 0
                    require t < mem[mem[_2003]]
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5019):
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5019):
                            _3995 = mem[96]
                            _5936 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4015):
                            _3995 = mem[96]
                            _5936 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4004):
                            _3995 = mem[96]
                            _5936 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        _6176 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                        _6177 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                        _6240 = mem[_4031 + 64]
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = Mask(112, 0, _6176)
                        mem[mem[64] + 68] = Mask(112, 0, _6177)
                        require ext_code.size(address(_6240))
                        staticcall address(_6240).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args s, _6176 << 144, Mask(112, 0, _6177)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6368 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6415 = mem[_6368]
                        require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                        mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6368]
                        _3995 = mem[96]
                        _5936 = mem[mem[_2003]]
                        idx = idx + 1
                        s = _6415
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4004):
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5019):
                            _3995 = mem[96]
                            _5936 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4015):
                            _3995 = mem[96]
                            _5936 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4004):
                            _3995 = mem[96]
                            _5936 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        _6208 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                        _6209 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                        _6280 = mem[_4031 + 64]
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = Mask(112, 0, _6208)
                        mem[mem[64] + 68] = Mask(112, 0, _6209)
                        require ext_code.size(address(_6280))
                        staticcall address(_6280).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args s, _6208 << 144, Mask(112, 0, _6209)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6400 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6432 = mem[_6400]
                        require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                        mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6400]
                        _3995 = mem[96]
                        _5936 = mem[mem[_2003]]
                        idx = idx + 1
                        s = _6432
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] == address(_4015):
                        _6098 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                        _6099 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                        _6152 = mem[_4031 + 64]
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = Mask(112, 0, _6098)
                        mem[mem[64] + 68] = Mask(112, 0, _6099)
                        require ext_code.size(address(_6152))
                        staticcall address(_6152).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args s, _6098 << 144, Mask(112, 0, _6099)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6282 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6345 = mem[_6282]
                        require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                        mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6282]
                        _3995 = mem[96]
                        _5936 = mem[mem[_2003]]
                        idx = idx + 1
                        s = _6345
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5019):
                        _3995 = mem[96]
                        _5936 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4015):
                        _3995 = mem[96]
                        _5936 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4004):
                        _3995 = mem[96]
                        _5936 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    _6242 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                    _6243 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                    _6313 = mem[_4031 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6242)
                    mem[mem[64] + 68] = Mask(112, 0, _6243)
                    require ext_code.size(address(_6313))
                    staticcall address(_6313).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6242 << 144, Mask(112, 0, _6243)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6416 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6450 = mem[_6416]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6416]
                    _3995 = mem[96]
                    _5936 = mem[mem[_2003]]
                    idx = idx + 1
                    s = _6450
                    continue 
                require ext_code.size(address(_5019))
                staticcall address(_5019).factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if ext_call.success:
                    _5999 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6047 = mem[_5999]
                    require mem[_5999] == mem[_5999 + 12 len 20]
                    mem[mem[64] + 4] = address(_4004)
                    mem[mem[64] + 36] = address(_4015)
                    require ext_code.size(address(_6047))
                    staticcall address(_6047).0xe6a43905 with:
                            gas gas_remaining wei
                           args address(_4004), address(_4015)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6311 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6367 = mem[_6311]
                    require mem[_6311] == mem[_6311 + 12 len 20]
                    require ext_code.size(mem[_6311 + 12 len 20])
                    staticcall mem[_6311 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6503 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _6519 = mem[_6503]
                    require mem[_6503] == mem[_6503 + 18 len 14]
                    _6535 = mem[_6503 + 32]
                    require mem[_6503 + 32] == mem[_6503 + 50 len 14]
                    require mem[_6503 + 64] == mem[_6503 + 92 len 4]
                    require ext_code.size(address(_6367))
                    staticcall address(_6367).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6599 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_6599] == mem[_6599 + 12 len 20]
                    if mem[_6599 + 12 len 20] != address(_4015):
                        _6631 = mem[_4031 + 64]
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = Mask(112, 0, _6519)
                        mem[mem[64] + 68] = Mask(112, 0, _6535)
                        require ext_code.size(address(_6631))
                        staticcall address(_6631).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args s, _6519 << 144, Mask(112, 0, _6535)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6720 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6752 = mem[_6720]
                        require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                        mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6720]
                        _3995 = mem[96]
                        idx = idx + 1
                        s = _6752
                        continue 
                    _6649 = mem[_4031 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6535)
                    mem[mem[64] + 68] = Mask(112, 0, _6519)
                    require ext_code.size(address(_6649))
                    staticcall address(_6649).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6535 << 144, Mask(112, 0, _6519)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6736 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6769 = mem[_6736]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6736]
                    _3995 = mem[96]
                    idx = idx + 1
                    s = _6769
                    continue 
                require ext_code.size(address(_5019))
                staticcall address(_5019).FACTORY() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6055 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6095 = mem[_6055]
                require mem[_6055] == mem[_6055 + 12 len 20]
                mem[mem[64] + 4] = address(_4004)
                mem[mem[64] + 36] = address(_4015)
                require ext_code.size(address(_6095))
                staticcall address(_6095).0xe6a43905 with:
                        gas gas_remaining wei
                       args address(_4004), address(_4015)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6343 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6399 = mem[_6343]
                require mem[_6343] == mem[_6343 + 12 len 20]
                require ext_code.size(mem[_6343 + 12 len 20])
                staticcall mem[_6343 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6511 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _6527 = mem[_6511]
                require mem[_6511] == mem[_6511 + 18 len 14]
                _6543 = mem[_6511 + 32]
                require mem[_6511 + 32] == mem[_6511 + 50 len 14]
                require mem[_6511 + 64] == mem[_6511 + 92 len 4]
                require ext_code.size(address(_6399))
                staticcall address(_6399).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6607 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_6607] == mem[_6607 + 12 len 20]
                if mem[_6607 + 12 len 20] != address(_4015):
                    _6647 = mem[_4031 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6527)
                    mem[mem[64] + 68] = Mask(112, 0, _6543)
                    require ext_code.size(address(_6647))
                    staticcall address(_6647).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6527 << 144, Mask(112, 0, _6543)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6735 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6767 = mem[_6735]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6735]
                    _3995 = mem[96]
                    idx = idx + 1
                    s = _6767
                    continue 
                _6679 = mem[_4031 + 64]
                mem[mem[64] + 4] = s
                mem[mem[64] + 36] = Mask(112, 0, _6543)
                mem[mem[64] + 68] = Mask(112, 0, _6527)
                require ext_code.size(address(_6679))
                staticcall address(_6679).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args s, _6543 << 144, Mask(112, 0, _6527)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6751 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6792 = mem[_6751]
                require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6751]
                _3995 = mem[96]
                idx = idx + 1
                s = _6792
                continue 
            _4003 = mem[64]
            mem[mem[64]] = s
            mem[mem[64] + 32] = 96
            _4019 = mem[_3002]
            mem[mem[64] + 96] = mem[_3002]
            idx = 0
            s = _3002 + 32
            t = mem[64] + 128
            while idx < _4019:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_4003 + 64] = (32 * _4019) + 128
            _4999 = mem[_3002 + (32 * _3000 - 1) + 32]
            mem[_4003 + (32 * _4019) + 128] = mem[_3002 + (32 * _3000 - 1) + 32]
            idx = 0
            s = _3002 + (32 * _3000 - 1) + 64
            s = _4003 + (32 * _4019) + 160
            while idx < _4999:
                mem[s] = mem[cd[100] + ('cd', 100).length + (160 * cd[(cd[100] + ('cd', 100).length + 4)]) + 36]
                idx = idx + 1
                s = cd[100] + ('cd', 100).length + (160 * cd[(cd[100] + ('cd', 100).length + 4)]) + 68
                s = s + 32
                continue 
            return memory
              from mem[64]
               len _4003 + (32 * _4019) + (32 * _4999) + -mem[64] + 160
        mem[_3002 + (32 * _3000 - 1) + 64 len 32 * mem[96] - 1] = call.data[calldata.size len 32 * mem[96] - 1]
        _3996 = mem[96]
        idx = 0
        s = cd[68]
        while idx < _3996 - 1:
            require idx < mem[96]
            _4007 = mem[(32 * idx) + 128]
            require idx + 1 < mem[96]
            _4016 = mem[(32 * idx + 1) + 128]
            _4022 = mem[64]
            mem[64] = mem[64] + 96
            mem[_4022] = 0
            mem[_4022 + 32] = 0
            mem[_4022 + 64] = 0
            _4032 = mem[64]
            mem[64] = mem[64] + 96
            mem[_4032] = 0
            mem[_4032 + 32] = 0
            mem[_4032 + 64] = 0
            _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
            t = 0
            while t < _4986:
                _4996 = mem[64]
                mem[64] = mem[64] + 96
                mem[_4996] = 0
                mem[_4996 + 32] = 0
                mem[_4996 + 64] = 0
                require t < mem[mem[(32 * ('cd', 4).length) + 128]]
                _5023 = mem[(32 * t) + mem[(32 * ('cd', 4).length) + 128] + 32]
                if mem[mem[(32 * t) + mem[(32 * ('cd', 4).length) + 128] + 32] + 12 len 20] != address(_4007):
                    _3996 = mem[96]
                    _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    t = t + 1
                    continue 
                if mem[mem[(32 * t) + mem[(32 * ('cd', 4).length) + 128] + 32] + 44 len 20] != address(_4016):
                    _3996 = mem[96]
                    _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    t = t + 1
                    continue 
                require idx < mem[_3002]
                mem[(32 * idx) + _3002 + 32] = mem[mem[(32 * t) + mem[(32 * ('cd', 4).length) + 128] + 32] + 76 len 20]
                _5086 = mem[_5023 + 64]
                _5942 = mem[mem[_2003]]
                t = 0
                while t < _5942:
                    _5966 = mem[64]
                    mem[64] = mem[64] + 160
                    mem[_5966] = 0
                    mem[_5966 + 32] = 0
                    mem[_5966 + 64] = 0
                    mem[_5966 + 96] = 0
                    mem[_5966 + 128] = 0
                    require t < mem[mem[_2003]]
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5086):
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5086):
                            _3996 = mem[96]
                            _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5942 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4016):
                            _3996 = mem[96]
                            _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5942 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4007):
                            _3996 = mem[96]
                            _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5942 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        _6188 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                        _6189 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                        _6255 = mem[_5023 + 64]
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = Mask(112, 0, _6188)
                        mem[mem[64] + 68] = Mask(112, 0, _6189)
                        require ext_code.size(address(_6255))
                        staticcall address(_6255).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args s, _6188 << 144, Mask(112, 0, _6189)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6380 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6421 = mem[_6380]
                        require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                        mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6380]
                        _3996 = mem[96]
                        _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5942 = mem[mem[_2003]]
                        idx = idx + 1
                        s = _6421
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4007):
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5086):
                            _3996 = mem[96]
                            _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5942 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4016):
                            _3996 = mem[96]
                            _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5942 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4007):
                            _3996 = mem[96]
                            _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5942 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        _6220 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                        _6221 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                        _6292 = mem[_5023 + 64]
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = Mask(112, 0, _6220)
                        mem[mem[64] + 68] = Mask(112, 0, _6221)
                        require ext_code.size(address(_6292))
                        staticcall address(_6292).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args s, _6220 << 144, Mask(112, 0, _6221)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6406 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6438 = mem[_6406]
                        require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                        mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6406]
                        _3996 = mem[96]
                        _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5942 = mem[mem[_2003]]
                        idx = idx + 1
                        s = _6438
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] == address(_4016):
                        _6113 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                        _6114 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                        _6161 = mem[_5023 + 64]
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = Mask(112, 0, _6113)
                        mem[mem[64] + 68] = Mask(112, 0, _6114)
                        require ext_code.size(address(_6161))
                        staticcall address(_6161).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args s, _6113 << 144, Mask(112, 0, _6114)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6294 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6354 = mem[_6294]
                        require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                        mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6294]
                        _3996 = mem[96]
                        _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5942 = mem[mem[_2003]]
                        idx = idx + 1
                        s = _6354
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5086):
                        _3996 = mem[96]
                        _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5942 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4016):
                        _3996 = mem[96]
                        _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5942 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4007):
                        _3996 = mem[96]
                        _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5942 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    _6257 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                    _6258 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                    _6325 = mem[_5023 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6257)
                    mem[mem[64] + 68] = Mask(112, 0, _6258)
                    require ext_code.size(address(_6325))
                    staticcall address(_6325).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6257 << 144, Mask(112, 0, _6258)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6422 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6462 = mem[_6422]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6422]
                    _3996 = mem[96]
                    _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    _5942 = mem[mem[_2003]]
                    idx = idx + 1
                    s = _6462
                    continue 
                require ext_code.size(address(_5086))
                staticcall address(_5086).factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if ext_call.success:
                    _6008 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6050 = mem[_6008]
                    require mem[_6008] == mem[_6008 + 12 len 20]
                    mem[mem[64] + 4] = address(_4007)
                    mem[mem[64] + 36] = address(_4016)
                    require ext_code.size(address(_6050))
                    staticcall address(_6050).0xe6a43905 with:
                            gas gas_remaining wei
                           args address(_4007), address(_4016)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6323 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6379 = mem[_6323]
                    require mem[_6323] == mem[_6323 + 12 len 20]
                    require ext_code.size(mem[_6323 + 12 len 20])
                    staticcall mem[_6323 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6506 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _6522 = mem[_6506]
                    require mem[_6506] == mem[_6506 + 18 len 14]
                    _6538 = mem[_6506 + 32]
                    require mem[_6506 + 32] == mem[_6506 + 50 len 14]
                    require mem[_6506 + 64] == mem[_6506 + 92 len 4]
                    require ext_code.size(address(_6379))
                    staticcall address(_6379).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6602 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_6602] == mem[_6602 + 12 len 20]
                    if mem[_6602 + 12 len 20] != address(_4016):
                        _6637 = mem[_5023 + 64]
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = Mask(112, 0, _6522)
                        mem[mem[64] + 68] = Mask(112, 0, _6538)
                        require ext_code.size(address(_6637))
                        staticcall address(_6637).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args s, _6522 << 144, Mask(112, 0, _6538)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6726 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6758 = mem[_6726]
                        require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                        mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6726]
                        _3996 = mem[96]
                        _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        idx = idx + 1
                        s = _6758
                        continue 
                    _6661 = mem[_5023 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6538)
                    mem[mem[64] + 68] = Mask(112, 0, _6522)
                    require ext_code.size(address(_6661))
                    staticcall address(_6661).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6538 << 144, Mask(112, 0, _6522)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6742 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6778 = mem[_6742]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6742]
                    _3996 = mem[96]
                    _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    idx = idx + 1
                    s = _6778
                    continue 
                require ext_code.size(address(_5086))
                staticcall address(_5086).FACTORY() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6064 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6110 = mem[_6064]
                require mem[_6064] == mem[_6064 + 12 len 20]
                mem[mem[64] + 4] = address(_4007)
                mem[mem[64] + 36] = address(_4016)
                require ext_code.size(address(_6110))
                staticcall address(_6110).0xe6a43905 with:
                        gas gas_remaining wei
                       args address(_4007), address(_4016)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6352 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6405 = mem[_6352]
                require mem[_6352] == mem[_6352 + 12 len 20]
                require ext_code.size(mem[_6352 + 12 len 20])
                staticcall mem[_6352 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6514 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _6530 = mem[_6514]
                require mem[_6514] == mem[_6514 + 18 len 14]
                _6546 = mem[_6514 + 32]
                require mem[_6514 + 32] == mem[_6514 + 50 len 14]
                require mem[_6514 + 64] == mem[_6514 + 92 len 4]
                require ext_code.size(address(_6405))
                staticcall address(_6405).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6610 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_6610] == mem[_6610 + 12 len 20]
                if mem[_6610 + 12 len 20] != address(_4016):
                    _6659 = mem[_5023 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6530)
                    mem[mem[64] + 68] = Mask(112, 0, _6546)
                    require ext_code.size(address(_6659))
                    staticcall address(_6659).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6530 << 144, Mask(112, 0, _6546)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6741 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6776 = mem[_6741]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6741]
                    _3996 = mem[96]
                    _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    idx = idx + 1
                    s = _6776
                    continue 
                _6688 = mem[_5023 + 64]
                mem[mem[64] + 4] = s
                mem[mem[64] + 36] = Mask(112, 0, _6546)
                mem[mem[64] + 68] = Mask(112, 0, _6530)
                require ext_code.size(address(_6688))
                staticcall address(_6688).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args s, _6546 << 144, Mask(112, 0, _6530)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6757 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6801 = mem[_6757]
                require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6757]
                _3996 = mem[96]
                _4986 = mem[mem[(32 * ('cd', 4).length) + 128]]
                idx = idx + 1
                s = _6801
                continue 
            require idx < mem[_3002]
            mem[(32 * idx) + _3002 + 32] = mem[_4032 + 76 len 20]
            _5022 = mem[_4032 + 64]
            _5940 = mem[mem[_2003]]
            t = 0
            while t < _5940:
                _5963 = mem[64]
                mem[64] = mem[64] + 160
                mem[_5963] = 0
                mem[_5963 + 32] = 0
                mem[_5963 + 64] = 0
                mem[_5963 + 96] = 0
                mem[_5963 + 128] = 0
                require t < mem[mem[_2003]]
                if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5022):
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5022):
                        _3996 = mem[96]
                        _5940 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4016):
                        _3996 = mem[96]
                        _5940 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4007):
                        _3996 = mem[96]
                        _5940 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    _6184 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                    _6185 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                    _6250 = mem[_4032 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6184)
                    mem[mem[64] + 68] = Mask(112, 0, _6185)
                    require ext_code.size(address(_6250))
                    staticcall address(_6250).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6184 << 144, Mask(112, 0, _6185)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6376 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6419 = mem[_6376]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6376]
                    _3996 = mem[96]
                    _5940 = mem[mem[_2003]]
                    idx = idx + 1
                    s = _6419
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4007):
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5022):
                        _3996 = mem[96]
                        _5940 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4016):
                        _3996 = mem[96]
                        _5940 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4007):
                        _3996 = mem[96]
                        _5940 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    _6216 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                    _6217 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                    _6288 = mem[_4032 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6216)
                    mem[mem[64] + 68] = Mask(112, 0, _6217)
                    require ext_code.size(address(_6288))
                    staticcall address(_6288).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6216 << 144, Mask(112, 0, _6217)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6404 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6436 = mem[_6404]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6404]
                    _3996 = mem[96]
                    _5940 = mem[mem[_2003]]
                    idx = idx + 1
                    s = _6436
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] == address(_4016):
                    _6108 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                    _6109 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                    _6158 = mem[_4032 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6108)
                    mem[mem[64] + 68] = Mask(112, 0, _6109)
                    require ext_code.size(address(_6158))
                    staticcall address(_6158).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6108 << 144, Mask(112, 0, _6109)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6290 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6351 = mem[_6290]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6290]
                    _3996 = mem[96]
                    _5940 = mem[mem[_2003]]
                    idx = idx + 1
                    s = _6351
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5022):
                    _3996 = mem[96]
                    _5940 = mem[mem[_2003]]
                    t = t + 1
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4016):
                    _3996 = mem[96]
                    _5940 = mem[mem[_2003]]
                    t = t + 1
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4007):
                    _3996 = mem[96]
                    _5940 = mem[mem[_2003]]
                    t = t + 1
                    continue 
                _6252 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                _6253 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                _6321 = mem[_4032 + 64]
                mem[mem[64] + 4] = s
                mem[mem[64] + 36] = Mask(112, 0, _6252)
                mem[mem[64] + 68] = Mask(112, 0, _6253)
                require ext_code.size(address(_6321))
                staticcall address(_6321).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args s, _6252 << 144, Mask(112, 0, _6253)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6420 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6458 = mem[_6420]
                require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6420]
                _3996 = mem[96]
                _5940 = mem[mem[_2003]]
                idx = idx + 1
                s = _6458
                continue 
            require ext_code.size(address(_5022))
            staticcall address(_5022).factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if ext_call.success:
                _6005 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6049 = mem[_6005]
                require mem[_6005] == mem[_6005 + 12 len 20]
                mem[mem[64] + 4] = address(_4007)
                mem[mem[64] + 36] = address(_4016)
                require ext_code.size(address(_6049))
                staticcall address(_6049).0xe6a43905 with:
                        gas gas_remaining wei
                       args address(_4007), address(_4016)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6319 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6375 = mem[_6319]
                require mem[_6319] == mem[_6319 + 12 len 20]
                require ext_code.size(mem[_6319 + 12 len 20])
                staticcall mem[_6319 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6505 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _6521 = mem[_6505]
                require mem[_6505] == mem[_6505 + 18 len 14]
                _6537 = mem[_6505 + 32]
                require mem[_6505 + 32] == mem[_6505 + 50 len 14]
                require mem[_6505 + 64] == mem[_6505 + 92 len 4]
                require ext_code.size(address(_6375))
                staticcall address(_6375).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6601 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_6601] == mem[_6601 + 12 len 20]
                if mem[_6601 + 12 len 20] != address(_4016):
                    _6635 = mem[_4032 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6521)
                    mem[mem[64] + 68] = Mask(112, 0, _6537)
                    require ext_code.size(address(_6635))
                    staticcall address(_6635).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6521 << 144, Mask(112, 0, _6537)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6724 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6756 = mem[_6724]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6724]
                    _3996 = mem[96]
                    idx = idx + 1
                    s = _6756
                    continue 
                _6657 = mem[_4032 + 64]
                mem[mem[64] + 4] = s
                mem[mem[64] + 36] = Mask(112, 0, _6537)
                mem[mem[64] + 68] = Mask(112, 0, _6521)
                require ext_code.size(address(_6657))
                staticcall address(_6657).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args s, _6537 << 144, Mask(112, 0, _6521)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6740 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6775 = mem[_6740]
                require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6740]
                _3996 = mem[96]
                idx = idx + 1
                s = _6775
                continue 
            require ext_code.size(address(_5022))
            staticcall address(_5022).FACTORY() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6061 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6105 = mem[_6061]
            require mem[_6061] == mem[_6061 + 12 len 20]
            mem[mem[64] + 4] = address(_4007)
            mem[mem[64] + 36] = address(_4016)
            require ext_code.size(address(_6105))
            staticcall address(_6105).0xe6a43905 with:
                    gas gas_remaining wei
                   args address(_4007), address(_4016)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6349 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6403 = mem[_6349]
            require mem[_6349] == mem[_6349 + 12 len 20]
            require ext_code.size(mem[_6349 + 12 len 20])
            staticcall mem[_6349 + 12 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6513 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _6529 = mem[_6513]
            require mem[_6513] == mem[_6513 + 18 len 14]
            _6545 = mem[_6513 + 32]
            require mem[_6513 + 32] == mem[_6513 + 50 len 14]
            require mem[_6513 + 64] == mem[_6513 + 92 len 4]
            require ext_code.size(address(_6403))
            staticcall address(_6403).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6609 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_6609] == mem[_6609 + 12 len 20]
            if mem[_6609 + 12 len 20] != address(_4016):
                _6655 = mem[_4032 + 64]
                mem[mem[64] + 4] = s
                mem[mem[64] + 36] = Mask(112, 0, _6529)
                mem[mem[64] + 68] = Mask(112, 0, _6545)
                require ext_code.size(address(_6655))
                staticcall address(_6655).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args s, _6529 << 144, Mask(112, 0, _6545)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6739 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6773 = mem[_6739]
                require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6739]
                _3996 = mem[96]
                idx = idx + 1
                s = _6773
                continue 
            _6685 = mem[_4032 + 64]
            mem[mem[64] + 4] = s
            mem[mem[64] + 36] = Mask(112, 0, _6545)
            mem[mem[64] + 68] = Mask(112, 0, _6529)
            require ext_code.size(address(_6685))
            staticcall address(_6685).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                    gas gas_remaining wei
                   args s, _6545 << 144, Mask(112, 0, _6529)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6755 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6798 = mem[_6755]
            require idx < mem[_3002 + (32 * _3000 - 1) + 32]
            mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6755]
            _3996 = mem[96]
            idx = idx + 1
            s = _6798
            continue 
        _4006 = mem[64]
        mem[mem[64]] = s
        mem[mem[64] + 32] = 96
        _4021 = mem[_3002]
        mem[mem[64] + 96] = mem[_3002]
        idx = 0
        s = _3002 + 32
        t = mem[64] + 128
        while idx < _4021:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_4006 + 64] = (32 * _4021) + 128
        _5004 = mem[_3002 + (32 * _3000 - 1) + 32]
        mem[_4006 + (32 * _4021) + 128] = mem[_3002 + (32 * _3000 - 1) + 32]
        mem[_4006 + (32 * _4021) + 160 len 32 * _5004] = mem[_3002 + (32 * _3000 - 1) + 64 len 32 * _5004]
        return memory
          from mem[64]
           len _4006 + (32 * _4021) + (32 * _5004) + -mem[64] + 160
    mem[mem[64] + 32 len 32 * _3000 - 1] = call.data[calldata.size len 32 * _3000 - 1]
    require mem[96] - 1 <= test266151307()
    mem[mem[64] + (32 * _3000 - 1) + 32] = mem[96] - 1
    mem[64] = mem[64] + (32 * _3000 - 1) + (32 * mem[96] - 1) + 64
    if not mem[96] - 1:
        _3997 = mem[96]
        idx = 0
        s = cd[68]
        while idx < _3997 - 1:
            require idx < mem[96]
            _4010 = mem[(32 * idx) + 128]
            require idx + 1 < mem[96]
            _4017 = mem[(32 * idx + 1) + 128]
            _4024 = mem[64]
            mem[64] = mem[64] + 96
            mem[_4024] = 0
            mem[_4024 + 32] = 0
            mem[_4024 + 64] = 0
            _4033 = mem[64]
            mem[64] = mem[64] + 96
            mem[_4033] = 0
            mem[_4033 + 32] = 0
            mem[_4033 + 64] = 0
            _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
            t = 0
            while t < _4988:
                _4997 = mem[64]
                mem[64] = mem[64] + 96
                mem[_4997] = 0
                mem[_4997 + 32] = 0
                mem[_4997 + 64] = 0
                require t < mem[mem[(32 * ('cd', 4).length) + 128]]
                _5026 = mem[(32 * t) + mem[(32 * ('cd', 4).length) + 128] + 32]
                if mem[mem[(32 * t) + mem[(32 * ('cd', 4).length) + 128] + 32] + 12 len 20] != address(_4010):
                    _3997 = mem[96]
                    _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    t = t + 1
                    continue 
                if mem[mem[(32 * t) + mem[(32 * ('cd', 4).length) + 128] + 32] + 44 len 20] != address(_4017):
                    _3997 = mem[96]
                    _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    t = t + 1
                    continue 
                require idx < mem[_3002]
                mem[(32 * idx) + _3002 + 32] = mem[mem[(32 * t) + mem[(32 * ('cd', 4).length) + 128] + 32] + 76 len 20]
                _5090 = mem[_5026 + 64]
                _5946 = mem[mem[_2003]]
                t = 0
                while t < _5946:
                    _5972 = mem[64]
                    mem[64] = mem[64] + 160
                    mem[_5972] = 0
                    mem[_5972 + 32] = 0
                    mem[_5972 + 64] = 0
                    mem[_5972 + 96] = 0
                    mem[_5972 + 128] = 0
                    require t < mem[mem[_2003]]
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5090):
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5090):
                            _3997 = mem[96]
                            _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5946 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4017):
                            _3997 = mem[96]
                            _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5946 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4010):
                            _3997 = mem[96]
                            _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5946 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        _6196 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                        _6197 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                        _6265 = mem[_5026 + 64]
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = Mask(112, 0, _6196)
                        mem[mem[64] + 68] = Mask(112, 0, _6197)
                        require ext_code.size(address(_6265))
                        staticcall address(_6265).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args s, _6196 << 144, Mask(112, 0, _6197)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6388 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6425 = mem[_6388]
                        require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                        mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6388]
                        _3997 = mem[96]
                        _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5946 = mem[mem[_2003]]
                        idx = idx + 1
                        s = _6425
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4010):
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5090):
                            _3997 = mem[96]
                            _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5946 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4017):
                            _3997 = mem[96]
                            _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5946 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4010):
                            _3997 = mem[96]
                            _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                            _5946 = mem[mem[_2003]]
                            t = t + 1
                            continue 
                        _6228 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                        _6229 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                        _6300 = mem[_5026 + 64]
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = Mask(112, 0, _6228)
                        mem[mem[64] + 68] = Mask(112, 0, _6229)
                        require ext_code.size(address(_6300))
                        staticcall address(_6300).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args s, _6228 << 144, Mask(112, 0, _6229)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6410 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6442 = mem[_6410]
                        require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                        mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6410]
                        _3997 = mem[96]
                        _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5946 = mem[mem[_2003]]
                        idx = idx + 1
                        s = _6442
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] == address(_4017):
                        _6123 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                        _6124 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                        _6167 = mem[_5026 + 64]
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = Mask(112, 0, _6123)
                        mem[mem[64] + 68] = Mask(112, 0, _6124)
                        require ext_code.size(address(_6167))
                        staticcall address(_6167).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args s, _6123 << 144, Mask(112, 0, _6124)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6302 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6360 = mem[_6302]
                        require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                        mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6302]
                        _3997 = mem[96]
                        _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5946 = mem[mem[_2003]]
                        idx = idx + 1
                        s = _6360
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5090):
                        _3997 = mem[96]
                        _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5946 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4017):
                        _3997 = mem[96]
                        _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5946 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4010):
                        _3997 = mem[96]
                        _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5946 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    _6267 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                    _6268 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                    _6333 = mem[_5026 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6267)
                    mem[mem[64] + 68] = Mask(112, 0, _6268)
                    require ext_code.size(address(_6333))
                    staticcall address(_6333).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6267 << 144, Mask(112, 0, _6268)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6426 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6470 = mem[_6426]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6426]
                    _3997 = mem[96]
                    _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    _5946 = mem[mem[_2003]]
                    idx = idx + 1
                    s = _6470
                    continue 
                require ext_code.size(address(_5090))
                staticcall address(_5090).factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if ext_call.success:
                    _6014 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6052 = mem[_6014]
                    require mem[_6014] == mem[_6014 + 12 len 20]
                    mem[mem[64] + 4] = address(_4010)
                    mem[mem[64] + 36] = address(_4017)
                    require ext_code.size(address(_6052))
                    staticcall address(_6052).0xe6a43905 with:
                            gas gas_remaining wei
                           args address(_4010), address(_4017)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6331 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6387 = mem[_6331]
                    require mem[_6331] == mem[_6331 + 12 len 20]
                    require ext_code.size(mem[_6331 + 12 len 20])
                    staticcall mem[_6331 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6508 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _6524 = mem[_6508]
                    require mem[_6508] == mem[_6508 + 18 len 14]
                    _6540 = mem[_6508 + 32]
                    require mem[_6508 + 32] == mem[_6508 + 50 len 14]
                    require mem[_6508 + 64] == mem[_6508 + 92 len 4]
                    require ext_code.size(address(_6387))
                    staticcall address(_6387).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6604 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_6604] == mem[_6604 + 12 len 20]
                    if mem[_6604 + 12 len 20] != address(_4017):
                        _6641 = mem[_5026 + 64]
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = Mask(112, 0, _6524)
                        mem[mem[64] + 68] = Mask(112, 0, _6540)
                        require ext_code.size(address(_6641))
                        staticcall address(_6641).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args s, _6524 << 144, Mask(112, 0, _6540)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6730 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _6762 = mem[_6730]
                        require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                        mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6730]
                        _3997 = mem[96]
                        _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        idx = idx + 1
                        s = _6762
                        continue 
                    _6669 = mem[_5026 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6540)
                    mem[mem[64] + 68] = Mask(112, 0, _6524)
                    require ext_code.size(address(_6669))
                    staticcall address(_6669).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6540 << 144, Mask(112, 0, _6524)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6746 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6784 = mem[_6746]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6746]
                    _3997 = mem[96]
                    _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    idx = idx + 1
                    s = _6784
                    continue 
                require ext_code.size(address(_5090))
                staticcall address(_5090).FACTORY() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6070 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6120 = mem[_6070]
                require mem[_6070] == mem[_6070 + 12 len 20]
                mem[mem[64] + 4] = address(_4010)
                mem[mem[64] + 36] = address(_4017)
                require ext_code.size(address(_6120))
                staticcall address(_6120).0xe6a43905 with:
                        gas gas_remaining wei
                       args address(_4010), address(_4017)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6358 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6409 = mem[_6358]
                require mem[_6358] == mem[_6358 + 12 len 20]
                require ext_code.size(mem[_6358 + 12 len 20])
                staticcall mem[_6358 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6516 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _6532 = mem[_6516]
                require mem[_6516] == mem[_6516 + 18 len 14]
                _6548 = mem[_6516 + 32]
                require mem[_6516 + 32] == mem[_6516 + 50 len 14]
                require mem[_6516 + 64] == mem[_6516 + 92 len 4]
                require ext_code.size(address(_6409))
                staticcall address(_6409).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6612 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_6612] == mem[_6612 + 12 len 20]
                if mem[_6612 + 12 len 20] != address(_4017):
                    _6667 = mem[_5026 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6532)
                    mem[mem[64] + 68] = Mask(112, 0, _6548)
                    require ext_code.size(address(_6667))
                    staticcall address(_6667).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6532 << 144, Mask(112, 0, _6548)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6745 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6782 = mem[_6745]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6745]
                    _3997 = mem[96]
                    _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    idx = idx + 1
                    s = _6782
                    continue 
                _6694 = mem[_5026 + 64]
                mem[mem[64] + 4] = s
                mem[mem[64] + 36] = Mask(112, 0, _6548)
                mem[mem[64] + 68] = Mask(112, 0, _6532)
                require ext_code.size(address(_6694))
                staticcall address(_6694).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args s, _6548 << 144, Mask(112, 0, _6532)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6761 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6807 = mem[_6761]
                require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6761]
                _3997 = mem[96]
                _4988 = mem[mem[(32 * ('cd', 4).length) + 128]]
                idx = idx + 1
                s = _6807
                continue 
            require idx < mem[_3002]
            mem[(32 * idx) + _3002 + 32] = mem[_4033 + 76 len 20]
            _5025 = mem[_4033 + 64]
            _5944 = mem[mem[_2003]]
            t = 0
            while t < _5944:
                _5969 = mem[64]
                mem[64] = mem[64] + 160
                mem[_5969] = 0
                mem[_5969 + 32] = 0
                mem[_5969 + 64] = 0
                mem[_5969 + 96] = 0
                mem[_5969 + 128] = 0
                require t < mem[mem[_2003]]
                if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5025):
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5025):
                        _3997 = mem[96]
                        _5944 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4017):
                        _3997 = mem[96]
                        _5944 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4010):
                        _3997 = mem[96]
                        _5944 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    _6192 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                    _6193 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                    _6260 = mem[_4033 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6192)
                    mem[mem[64] + 68] = Mask(112, 0, _6193)
                    require ext_code.size(address(_6260))
                    staticcall address(_6260).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6192 << 144, Mask(112, 0, _6193)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6384 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6423 = mem[_6384]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6384]
                    _3997 = mem[96]
                    _5944 = mem[mem[_2003]]
                    idx = idx + 1
                    s = _6423
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4010):
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5025):
                        _3997 = mem[96]
                        _5944 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4017):
                        _3997 = mem[96]
                        _5944 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4010):
                        _3997 = mem[96]
                        _5944 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    _6224 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                    _6225 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                    _6296 = mem[_4033 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6224)
                    mem[mem[64] + 68] = Mask(112, 0, _6225)
                    require ext_code.size(address(_6296))
                    staticcall address(_6296).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6224 << 144, Mask(112, 0, _6225)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6408 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6440 = mem[_6408]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6408]
                    _3997 = mem[96]
                    _5944 = mem[mem[_2003]]
                    idx = idx + 1
                    s = _6440
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] == address(_4017):
                    _6118 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                    _6119 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                    _6164 = mem[_4033 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6118)
                    mem[mem[64] + 68] = Mask(112, 0, _6119)
                    require ext_code.size(address(_6164))
                    staticcall address(_6164).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6118 << 144, Mask(112, 0, _6119)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6298 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6357 = mem[_6298]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6298]
                    _3997 = mem[96]
                    _5944 = mem[mem[_2003]]
                    idx = idx + 1
                    s = _6357
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5025):
                    _3997 = mem[96]
                    _5944 = mem[mem[_2003]]
                    t = t + 1
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4017):
                    _3997 = mem[96]
                    _5944 = mem[mem[_2003]]
                    t = t + 1
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4010):
                    _3997 = mem[96]
                    _5944 = mem[mem[_2003]]
                    t = t + 1
                    continue 
                _6262 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                _6263 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                _6329 = mem[_4033 + 64]
                mem[mem[64] + 4] = s
                mem[mem[64] + 36] = Mask(112, 0, _6262)
                mem[mem[64] + 68] = Mask(112, 0, _6263)
                require ext_code.size(address(_6329))
                staticcall address(_6329).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args s, _6262 << 144, Mask(112, 0, _6263)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6424 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6466 = mem[_6424]
                require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6424]
                _3997 = mem[96]
                _5944 = mem[mem[_2003]]
                idx = idx + 1
                s = _6466
                continue 
            require ext_code.size(address(_5025))
            staticcall address(_5025).factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if ext_call.success:
                _6011 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6051 = mem[_6011]
                require mem[_6011] == mem[_6011 + 12 len 20]
                mem[mem[64] + 4] = address(_4010)
                mem[mem[64] + 36] = address(_4017)
                require ext_code.size(address(_6051))
                staticcall address(_6051).0xe6a43905 with:
                        gas gas_remaining wei
                       args address(_4010), address(_4017)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6327 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6383 = mem[_6327]
                require mem[_6327] == mem[_6327 + 12 len 20]
                require ext_code.size(mem[_6327 + 12 len 20])
                staticcall mem[_6327 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6507 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _6523 = mem[_6507]
                require mem[_6507] == mem[_6507 + 18 len 14]
                _6539 = mem[_6507 + 32]
                require mem[_6507 + 32] == mem[_6507 + 50 len 14]
                require mem[_6507 + 64] == mem[_6507 + 92 len 4]
                require ext_code.size(address(_6383))
                staticcall address(_6383).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6603 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_6603] == mem[_6603 + 12 len 20]
                if mem[_6603 + 12 len 20] != address(_4017):
                    _6639 = mem[_4033 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6523)
                    mem[mem[64] + 68] = Mask(112, 0, _6539)
                    require ext_code.size(address(_6639))
                    staticcall address(_6639).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6523 << 144, Mask(112, 0, _6539)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6728 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6760 = mem[_6728]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6728]
                    _3997 = mem[96]
                    idx = idx + 1
                    s = _6760
                    continue 
                _6665 = mem[_4033 + 64]
                mem[mem[64] + 4] = s
                mem[mem[64] + 36] = Mask(112, 0, _6539)
                mem[mem[64] + 68] = Mask(112, 0, _6523)
                require ext_code.size(address(_6665))
                staticcall address(_6665).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args s, _6539 << 144, Mask(112, 0, _6523)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6744 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6781 = mem[_6744]
                require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6744]
                _3997 = mem[96]
                idx = idx + 1
                s = _6781
                continue 
            require ext_code.size(address(_5025))
            staticcall address(_5025).FACTORY() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6067 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6115 = mem[_6067]
            require mem[_6067] == mem[_6067 + 12 len 20]
            mem[mem[64] + 4] = address(_4010)
            mem[mem[64] + 36] = address(_4017)
            require ext_code.size(address(_6115))
            staticcall address(_6115).0xe6a43905 with:
                    gas gas_remaining wei
                   args address(_4010), address(_4017)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6355 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6407 = mem[_6355]
            require mem[_6355] == mem[_6355 + 12 len 20]
            require ext_code.size(mem[_6355 + 12 len 20])
            staticcall mem[_6355 + 12 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6515 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _6531 = mem[_6515]
            require mem[_6515] == mem[_6515 + 18 len 14]
            _6547 = mem[_6515 + 32]
            require mem[_6515 + 32] == mem[_6515 + 50 len 14]
            require mem[_6515 + 64] == mem[_6515 + 92 len 4]
            require ext_code.size(address(_6407))
            staticcall address(_6407).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6611 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_6611] == mem[_6611 + 12 len 20]
            if mem[_6611 + 12 len 20] != address(_4017):
                _6663 = mem[_4033 + 64]
                mem[mem[64] + 4] = s
                mem[mem[64] + 36] = Mask(112, 0, _6531)
                mem[mem[64] + 68] = Mask(112, 0, _6547)
                require ext_code.size(address(_6663))
                staticcall address(_6663).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args s, _6531 << 144, Mask(112, 0, _6547)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6743 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6779 = mem[_6743]
                require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6743]
                _3997 = mem[96]
                idx = idx + 1
                s = _6779
                continue 
            _6691 = mem[_4033 + 64]
            mem[mem[64] + 4] = s
            mem[mem[64] + 36] = Mask(112, 0, _6547)
            mem[mem[64] + 68] = Mask(112, 0, _6531)
            require ext_code.size(address(_6691))
            staticcall address(_6691).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                    gas gas_remaining wei
                   args s, _6547 << 144, Mask(112, 0, _6531)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6759 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6804 = mem[_6759]
            require idx < mem[_3002 + (32 * _3000 - 1) + 32]
            mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6759]
            _3997 = mem[96]
            idx = idx + 1
            s = _6804
            continue 
        _4009 = mem[64]
        mem[mem[64]] = s
        mem[mem[64] + 32] = 96
        _4023 = mem[_3002]
        mem[mem[64] + 96] = mem[_3002]
        idx = 0
        s = _3002 + 32
        t = mem[64] + 128
        while idx < _4023:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 64] = (32 * _4023) + 128
        _5009 = mem[_3002 + (32 * _3000 - 1) + 32]
        mem[_4009 + (32 * _4023) + 128] = mem[_3002 + (32 * _3000 - 1) + 32]
        mem[_4009 + (32 * _4023) + 160 len 32 * _5009] = mem[_3002 + (32 * _3000 - 1) + 64 len 32 * _5009]
        return memory
          from mem[64]
           len _4009 + (32 * _4023) + (32 * _5009) + -mem[64] + 160
    mem[_3002 + (32 * _3000 - 1) + 64 len 32 * mem[96] - 1] = call.data[calldata.size len 32 * mem[96] - 1]
    _3998 = mem[96]
    idx = 0
    s = cd[68]
    while idx < _3998 - 1:
        require idx < mem[96]
        _4013 = mem[(32 * idx) + 128]
        require idx + 1 < mem[96]
        _4018 = mem[(32 * idx + 1) + 128]
        _4026 = mem[64]
        mem[64] = mem[64] + 96
        mem[_4026] = 0
        mem[_4026 + 32] = 0
        mem[_4026 + 64] = 0
        _4034 = mem[64]
        mem[64] = mem[64] + 96
        mem[_4034] = 0
        mem[_4034 + 32] = 0
        mem[_4034 + 64] = 0
        _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
        t = 0
        while t < _4990:
            _4998 = mem[64]
            mem[64] = mem[64] + 96
            mem[_4998] = 0
            mem[_4998 + 32] = 0
            mem[_4998 + 64] = 0
            require t < mem[mem[(32 * ('cd', 4).length) + 128]]
            _5029 = mem[(32 * t) + mem[(32 * ('cd', 4).length) + 128] + 32]
            if mem[mem[(32 * t) + mem[(32 * ('cd', 4).length) + 128] + 32] + 12 len 20] != address(_4013):
                _3998 = mem[96]
                _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                t = t + 1
                continue 
            if mem[mem[(32 * t) + mem[(32 * ('cd', 4).length) + 128] + 32] + 44 len 20] != address(_4018):
                _3998 = mem[96]
                _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                t = t + 1
                continue 
            require idx < mem[_3002]
            mem[(32 * idx) + _3002 + 32] = mem[mem[(32 * t) + mem[(32 * ('cd', 4).length) + 128] + 32] + 76 len 20]
            _5094 = mem[_5029 + 64]
            _5950 = mem[mem[_2003]]
            t = 0
            while t < _5950:
                _5978 = mem[64]
                mem[64] = mem[64] + 160
                mem[_5978] = 0
                mem[_5978 + 32] = 0
                mem[_5978 + 64] = 0
                mem[_5978 + 96] = 0
                mem[_5978 + 128] = 0
                require t < mem[mem[_2003]]
                if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5094):
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5094):
                        _3998 = mem[96]
                        _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5950 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4018):
                        _3998 = mem[96]
                        _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5950 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4013):
                        _3998 = mem[96]
                        _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5950 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    _6204 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                    _6205 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                    _6275 = mem[_5029 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6204)
                    mem[mem[64] + 68] = Mask(112, 0, _6205)
                    require ext_code.size(address(_6275))
                    staticcall address(_6275).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6204 << 144, Mask(112, 0, _6205)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6396 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6429 = mem[_6396]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6396]
                    _3998 = mem[96]
                    _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    _5950 = mem[mem[_2003]]
                    idx = idx + 1
                    s = _6429
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4013):
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5094):
                        _3998 = mem[96]
                        _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5950 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4018):
                        _3998 = mem[96]
                        _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5950 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4013):
                        _3998 = mem[96]
                        _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                        _5950 = mem[mem[_2003]]
                        t = t + 1
                        continue 
                    _6236 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                    _6237 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                    _6308 = mem[_5029 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6236)
                    mem[mem[64] + 68] = Mask(112, 0, _6237)
                    require ext_code.size(address(_6308))
                    staticcall address(_6308).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6236 << 144, Mask(112, 0, _6237)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6414 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6446 = mem[_6414]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6414]
                    _3998 = mem[96]
                    _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    _5950 = mem[mem[_2003]]
                    idx = idx + 1
                    s = _6446
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] == address(_4018):
                    _6133 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                    _6134 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                    _6173 = mem[_5029 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6133)
                    mem[mem[64] + 68] = Mask(112, 0, _6134)
                    require ext_code.size(address(_6173))
                    staticcall address(_6173).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6133 << 144, Mask(112, 0, _6134)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6310 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6366 = mem[_6310]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6310]
                    _3998 = mem[96]
                    _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    _5950 = mem[mem[_2003]]
                    idx = idx + 1
                    s = _6366
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5094):
                    _3998 = mem[96]
                    _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    _5950 = mem[mem[_2003]]
                    t = t + 1
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4018):
                    _3998 = mem[96]
                    _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    _5950 = mem[mem[_2003]]
                    t = t + 1
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4013):
                    _3998 = mem[96]
                    _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    _5950 = mem[mem[_2003]]
                    t = t + 1
                    continue 
                _6277 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                _6278 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                _6341 = mem[_5029 + 64]
                mem[mem[64] + 4] = s
                mem[mem[64] + 36] = Mask(112, 0, _6277)
                mem[mem[64] + 68] = Mask(112, 0, _6278)
                require ext_code.size(address(_6341))
                staticcall address(_6341).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args s, _6277 << 144, Mask(112, 0, _6278)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6430 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6478 = mem[_6430]
                require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6430]
                _3998 = mem[96]
                _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                _5950 = mem[mem[_2003]]
                idx = idx + 1
                s = _6478
                continue 
            require ext_code.size(address(_5094))
            staticcall address(_5094).factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if ext_call.success:
                _6020 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6054 = mem[_6020]
                require mem[_6020] == mem[_6020 + 12 len 20]
                mem[mem[64] + 4] = address(_4013)
                mem[mem[64] + 36] = address(_4018)
                require ext_code.size(address(_6054))
                staticcall address(_6054).0xe6a43905 with:
                        gas gas_remaining wei
                       args address(_4013), address(_4018)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6339 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6395 = mem[_6339]
                require mem[_6339] == mem[_6339 + 12 len 20]
                require ext_code.size(mem[_6339 + 12 len 20])
                staticcall mem[_6339 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6510 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _6526 = mem[_6510]
                require mem[_6510] == mem[_6510 + 18 len 14]
                _6542 = mem[_6510 + 32]
                require mem[_6510 + 32] == mem[_6510 + 50 len 14]
                require mem[_6510 + 64] == mem[_6510 + 92 len 4]
                require ext_code.size(address(_6395))
                staticcall address(_6395).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6606 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_6606] == mem[_6606 + 12 len 20]
                if mem[_6606 + 12 len 20] != address(_4018):
                    _6645 = mem[_5029 + 64]
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = Mask(112, 0, _6526)
                    mem[mem[64] + 68] = Mask(112, 0, _6542)
                    require ext_code.size(address(_6645))
                    staticcall address(_6645).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args s, _6526 << 144, Mask(112, 0, _6542)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6734 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6766 = mem[_6734]
                    require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                    mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6734]
                    _3998 = mem[96]
                    _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                    idx = idx + 1
                    s = _6766
                    continue 
                _6677 = mem[_5029 + 64]
                mem[mem[64] + 4] = s
                mem[mem[64] + 36] = Mask(112, 0, _6542)
                mem[mem[64] + 68] = Mask(112, 0, _6526)
                require ext_code.size(address(_6677))
                staticcall address(_6677).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args s, _6542 << 144, Mask(112, 0, _6526)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6750 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6790 = mem[_6750]
                require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6750]
                _3998 = mem[96]
                _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                idx = idx + 1
                s = _6790
                continue 
            require ext_code.size(address(_5094))
            staticcall address(_5094).FACTORY() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6076 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6130 = mem[_6076]
            require mem[_6076] == mem[_6076 + 12 len 20]
            mem[mem[64] + 4] = address(_4013)
            mem[mem[64] + 36] = address(_4018)
            require ext_code.size(address(_6130))
            staticcall address(_6130).0xe6a43905 with:
                    gas gas_remaining wei
                   args address(_4013), address(_4018)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6364 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6413 = mem[_6364]
            require mem[_6364] == mem[_6364 + 12 len 20]
            require ext_code.size(mem[_6364 + 12 len 20])
            staticcall mem[_6364 + 12 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6518 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _6534 = mem[_6518]
            require mem[_6518] == mem[_6518 + 18 len 14]
            _6550 = mem[_6518 + 32]
            require mem[_6518 + 32] == mem[_6518 + 50 len 14]
            require mem[_6518 + 64] == mem[_6518 + 92 len 4]
            require ext_code.size(address(_6413))
            staticcall address(_6413).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6614 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_6614] == mem[_6614 + 12 len 20]
            if mem[_6614 + 12 len 20] != address(_4018):
                _6675 = mem[_5029 + 64]
                mem[mem[64] + 4] = s
                mem[mem[64] + 36] = Mask(112, 0, _6534)
                mem[mem[64] + 68] = Mask(112, 0, _6550)
                require ext_code.size(address(_6675))
                staticcall address(_6675).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args s, _6534 << 144, Mask(112, 0, _6550)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6749 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6788 = mem[_6749]
                require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6749]
                _3998 = mem[96]
                _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
                idx = idx + 1
                s = _6788
                continue 
            _6700 = mem[_5029 + 64]
            mem[mem[64] + 4] = s
            mem[mem[64] + 36] = Mask(112, 0, _6550)
            mem[mem[64] + 68] = Mask(112, 0, _6534)
            require ext_code.size(address(_6700))
            staticcall address(_6700).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                    gas gas_remaining wei
                   args s, _6550 << 144, Mask(112, 0, _6534)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6765 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6813 = mem[_6765]
            require idx < mem[_3002 + (32 * _3000 - 1) + 32]
            mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6765]
            _3998 = mem[96]
            _4990 = mem[mem[(32 * ('cd', 4).length) + 128]]
            idx = idx + 1
            s = _6813
            continue 
        require idx < mem[_3002]
        mem[(32 * idx) + _3002 + 32] = mem[_4034 + 76 len 20]
        _5028 = mem[_4034 + 64]
        _5948 = mem[mem[_2003]]
        t = 0
        while t < _5948:
            _5975 = mem[64]
            mem[64] = mem[64] + 160
            mem[_5975] = 0
            mem[_5975 + 32] = 0
            mem[_5975 + 64] = 0
            mem[_5975 + 96] = 0
            mem[_5975 + 128] = 0
            require t < mem[mem[_2003]]
            if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5028):
                if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5028):
                    _3998 = mem[96]
                    _5948 = mem[mem[_2003]]
                    t = t + 1
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4018):
                    _3998 = mem[96]
                    _5948 = mem[mem[_2003]]
                    t = t + 1
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4013):
                    _3998 = mem[96]
                    _5948 = mem[mem[_2003]]
                    t = t + 1
                    continue 
                _6200 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                _6201 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                _6270 = mem[_4034 + 64]
                mem[mem[64] + 4] = s
                mem[mem[64] + 36] = Mask(112, 0, _6200)
                mem[mem[64] + 68] = Mask(112, 0, _6201)
                require ext_code.size(address(_6270))
                staticcall address(_6270).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args s, _6200 << 144, Mask(112, 0, _6201)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6392 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6427 = mem[_6392]
                require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6392]
                _3998 = mem[96]
                _5948 = mem[mem[_2003]]
                idx = idx + 1
                s = _6427
                continue 
            if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4013):
                if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5028):
                    _3998 = mem[96]
                    _5948 = mem[mem[_2003]]
                    t = t + 1
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4018):
                    _3998 = mem[96]
                    _5948 = mem[mem[_2003]]
                    t = t + 1
                    continue 
                if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4013):
                    _3998 = mem[96]
                    _5948 = mem[mem[_2003]]
                    t = t + 1
                    continue 
                _6232 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                _6233 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                _6304 = mem[_4034 + 64]
                mem[mem[64] + 4] = s
                mem[mem[64] + 36] = Mask(112, 0, _6232)
                mem[mem[64] + 68] = Mask(112, 0, _6233)
                require ext_code.size(address(_6304))
                staticcall address(_6304).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args s, _6232 << 144, Mask(112, 0, _6233)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6412 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6444 = mem[_6412]
                require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6412]
                _3998 = mem[96]
                _5948 = mem[mem[_2003]]
                idx = idx + 1
                s = _6444
                continue 
            if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] == address(_4018):
                _6128 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
                _6129 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
                _6170 = mem[_4034 + 64]
                mem[mem[64] + 4] = s
                mem[mem[64] + 36] = Mask(112, 0, _6128)
                mem[mem[64] + 68] = Mask(112, 0, _6129)
                require ext_code.size(address(_6170))
                staticcall address(_6170).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args s, _6128 << 144, Mask(112, 0, _6129)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6306 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6363 = mem[_6306]
                require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6306]
                _3998 = mem[96]
                _5948 = mem[mem[_2003]]
                idx = idx + 1
                s = _6363
                continue 
            if mem[mem[(32 * t) + mem[_2003] + 32] + 140 len 20] != address(_5028):
                _3998 = mem[96]
                _5948 = mem[mem[_2003]]
                t = t + 1
                continue 
            if mem[mem[(32 * t) + mem[_2003] + 32] + 12 len 20] != address(_4018):
                _3998 = mem[96]
                _5948 = mem[mem[_2003]]
                t = t + 1
                continue 
            if mem[mem[(32 * t) + mem[_2003] + 32] + 44 len 20] != address(_4013):
                _3998 = mem[96]
                _5948 = mem[mem[_2003]]
                t = t + 1
                continue 
            _6272 = mem[mem[(32 * t) + mem[_2003] + 32] + 96]
            _6273 = mem[mem[(32 * t) + mem[_2003] + 32] + 64]
            _6337 = mem[_4034 + 64]
            mem[mem[64] + 4] = s
            mem[mem[64] + 36] = Mask(112, 0, _6272)
            mem[mem[64] + 68] = Mask(112, 0, _6273)
            require ext_code.size(address(_6337))
            staticcall address(_6337).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                    gas gas_remaining wei
                   args s, _6272 << 144, Mask(112, 0, _6273)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6428 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6474 = mem[_6428]
            require idx < mem[_3002 + (32 * _3000 - 1) + 32]
            mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6428]
            _3998 = mem[96]
            _5948 = mem[mem[_2003]]
            idx = idx + 1
            s = _6474
            continue 
        require ext_code.size(address(_5028))
        staticcall address(_5028).factory() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if ext_call.success:
            _6017 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6053 = mem[_6017]
            require mem[_6017] == mem[_6017 + 12 len 20]
            mem[mem[64] + 4] = address(_4013)
            mem[mem[64] + 36] = address(_4018)
            require ext_code.size(address(_6053))
            staticcall address(_6053).0xe6a43905 with:
                    gas gas_remaining wei
                   args address(_4013), address(_4018)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6335 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6391 = mem[_6335]
            require mem[_6335] == mem[_6335 + 12 len 20]
            require ext_code.size(mem[_6335 + 12 len 20])
            staticcall mem[_6335 + 12 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6509 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _6525 = mem[_6509]
            require mem[_6509] == mem[_6509 + 18 len 14]
            _6541 = mem[_6509 + 32]
            require mem[_6509 + 32] == mem[_6509 + 50 len 14]
            require mem[_6509 + 64] == mem[_6509 + 92 len 4]
            require ext_code.size(address(_6391))
            staticcall address(_6391).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6605 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_6605] == mem[_6605 + 12 len 20]
            if mem[_6605 + 12 len 20] != address(_4018):
                _6643 = mem[_4034 + 64]
                mem[mem[64] + 4] = s
                mem[mem[64] + 36] = Mask(112, 0, _6525)
                mem[mem[64] + 68] = Mask(112, 0, _6541)
                require ext_code.size(address(_6643))
                staticcall address(_6643).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args s, _6525 << 144, Mask(112, 0, _6541)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6732 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6764 = mem[_6732]
                require idx < mem[_3002 + (32 * _3000 - 1) + 32]
                mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6732]
                _3998 = mem[96]
                idx = idx + 1
                s = _6764
                continue 
            _6673 = mem[_4034 + 64]
            mem[mem[64] + 4] = s
            mem[mem[64] + 36] = Mask(112, 0, _6541)
            mem[mem[64] + 68] = Mask(112, 0, _6525)
            require ext_code.size(address(_6673))
            staticcall address(_6673).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                    gas gas_remaining wei
                   args s, _6541 << 144, Mask(112, 0, _6525)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6748 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6787 = mem[_6748]
            require idx < mem[_3002 + (32 * _3000 - 1) + 32]
            mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6748]
            _3998 = mem[96]
            idx = idx + 1
            s = _6787
            continue 
        require ext_code.size(address(_5028))
        staticcall address(_5028).FACTORY() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _6073 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _6125 = mem[_6073]
        require mem[_6073] == mem[_6073 + 12 len 20]
        mem[mem[64] + 4] = address(_4013)
        mem[mem[64] + 36] = address(_4018)
        require ext_code.size(address(_6125))
        staticcall address(_6125).0xe6a43905 with:
                gas gas_remaining wei
               args address(_4013), address(_4018)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _6361 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _6411 = mem[_6361]
        require mem[_6361] == mem[_6361 + 12 len 20]
        require ext_code.size(mem[_6361 + 12 len 20])
        staticcall mem[_6361 + 12 len 20].getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _6517 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _6533 = mem[_6517]
        require mem[_6517] == mem[_6517 + 18 len 14]
        _6549 = mem[_6517 + 32]
        require mem[_6517 + 32] == mem[_6517 + 50 len 14]
        require mem[_6517 + 64] == mem[_6517 + 92 len 4]
        require ext_code.size(address(_6411))
        staticcall address(_6411).token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _6613 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_6613] == mem[_6613 + 12 len 20]
        if mem[_6613 + 12 len 20] != address(_4018):
            _6671 = mem[_4034 + 64]
            mem[mem[64] + 4] = s
            mem[mem[64] + 36] = Mask(112, 0, _6533)
            mem[mem[64] + 68] = Mask(112, 0, _6549)
            require ext_code.size(address(_6671))
            staticcall address(_6671).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                    gas gas_remaining wei
                   args s, _6533 << 144, Mask(112, 0, _6549)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6747 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6785 = mem[_6747]
            require idx < mem[_3002 + (32 * _3000 - 1) + 32]
            mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6747]
            _3998 = mem[96]
            idx = idx + 1
            s = _6785
            continue 
        _6697 = mem[_4034 + 64]
        mem[mem[64] + 4] = s
        mem[mem[64] + 36] = Mask(112, 0, _6549)
        mem[mem[64] + 68] = Mask(112, 0, _6533)
        require ext_code.size(address(_6697))
        staticcall address(_6697).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                gas gas_remaining wei
               args s, _6549 << 144, Mask(112, 0, _6533)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _6763 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _6810 = mem[_6763]
        require idx < mem[_3002 + (32 * _3000 - 1) + 32]
        mem[(32 * idx) + _3002 + (32 * _3000 - 1) + 64] = mem[_6763]
        _3998 = mem[96]
        idx = idx + 1
        s = _6810
        continue 
    _4012 = mem[64]
    mem[mem[64]] = s
    mem[mem[64] + 32] = 96
    _4025 = mem[_3002]
    mem[mem[64] + 96] = mem[_3002]
    idx = 0
    s = _3002 + 32
    t = mem[64] + 128
    while idx < _4025:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_4012 + 64] = (32 * _4025) + 128
    _5014 = mem[_3002 + (32 * _3000 - 1) + 32]
    mem[_4012 + (32 * _4025) + 128] = mem[_3002 + (32 * _3000 - 1) + 32]
    mem[_4012 + (32 * _4025) + 160 len 32 * _5014] = mem[_3002 + (32 * _3000 - 1) + 64 len 32 * _5014]
    return memory
      from mem[64]
       len _4012 + (32 * _4025) + (32 * _5014) + -mem[64] + 160
}

function sub_a684db2e(?) {
    require calldata.size - 4 >= 192
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require (32 * ('cd', 4).length) + 128 >= 96 and (32 * ('cd', 4).length) + 128 <= test266151307()
    mem[64] = (32 * ('cd', 4).length) + 128
    mem[96] = ('cd', 4).length
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[4] + cd[s] + 67 < calldata.size
        require cd[(cd[4] + cd[s] + 36)] <= test266151307()
        _3215 = mem[64]
        require mem[64] + (32 * cd[(cd[4] + cd[s] + 36)]) + 32 >= mem[64] and mem[64] + (32 * cd[(cd[4] + cd[s] + 36)]) + 32 <= test266151307()
        mem[64] = mem[64] + (32 * cd[(cd[4] + cd[s] + 36)]) + 32
        mem[_3215] = cd[(cd[4] + cd[s] + 36)]
        require calldata.size >= cd[4] + cd[s] + (32 * cd[(cd[4] + cd[s] + 36)]) + 68
        u = 0
        v = cd[4] + cd[s] + 68
        w = _3215 + 32
        while u < cd[(cd[4] + cd[s] + 36)]:
            require cd[v] == address(cd[v])
            mem[w] = cd[v]
            u = u + 1
            v = v + 32
            w = w + 32
            continue 
        mem[t] = _3215
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    _3216 = mem[64]
    require mem[64] + (32 * ('cd', 36).length) + 32 >= mem[64] and mem[64] + (32 * ('cd', 36).length) + 32 <= test266151307()
    mem[64] = mem[64] + (32 * ('cd', 36).length) + 32
    mem[_3216] = ('cd', 36).length
    require calldata.size >= cd[36] + (32 * ('cd', 36).length) + 36
    idx = 0
    s = cd[36] + 36
    t = _3216 + 32
    while idx < ('cd', 36).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[68] <= test266151307()
    require calldata.size + -cd[68] - 4 >= 32
    _6428 = mem[64]
    require mem[64] + 32 >= mem[64] and mem[64] + 32 <= test266151307()
    mem[64] = mem[64] + 32
    require ('cd', 68).length <= test266151307()
    require calldata.size > cd[68] + ('cd', 68).length + 35
    require cd[(cd[68] + ('cd', 68).length + 4)] <= test266151307()
    _6429 = mem[64]
    require mem[64] + (32 * cd[(cd[68] + ('cd', 68).length + 4)]) + 32 >= mem[64] and mem[64] + (32 * cd[(cd[68] + ('cd', 68).length + 4)]) + 32 <= test266151307()
    mem[64] = mem[64] + (32 * cd[(cd[68] + ('cd', 68).length + 4)]) + 32
    mem[_6429] = cd[(cd[68] + ('cd', 68).length + 4)]
    require calldata.size >= cd[68] + ('cd', 68).length + (160 * cd[(cd[68] + ('cd', 68).length + 4)]) + 36
    s = cd[68] + ('cd', 68).length + 36
    t = _6429 + 32
    idx = 0
    while idx < cd[(cd[68] + ('cd', 68).length + 4)]:
        require calldata.size - s >= 160
        _9639 = mem[64]
        require mem[64] + 160 >= mem[64] and mem[64] + 160 <= test266151307()
        mem[64] = mem[64] + 160
        require cd[s] == address(cd[s])
        mem[_9639] = cd[s]
        require cd[(s + 32)] == address(cd[(s + 32)])
        mem[_9639 + 32] = cd[(s + 32)]
        require cd[(s + 64)] == Mask(112, 0, cd[(s + 64)])
        mem[_9639 + 64] = cd[(s + 64)]
        require cd[(s + 96)] == Mask(112, 0, cd[(s + 96)])
        mem[_9639 + 96] = cd[(s + 96)]
        require cd[(s + 128)] == address(cd[(s + 128)])
        mem[_9639 + 128] = cd[(s + 128)]
        mem[t] = _9639
        s = s + 160
        t = t + 32
        idx = idx + 1
        continue 
    mem[_6428] = _6429
    require calldata.size - 100 >= 96
    _9640 = mem[64]
    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
    mem[64] = mem[64] + 96
    mem[_9640] = cd[100]
    mem[_9640 + 32] = cd[132]
    mem[_9640 + 64] = cd[164]
    _9641 = mem[64]
    mem[64] = mem[64] + 32
    mem[_9641] = 96
    _12848 = mem[96]
    idx = 0
    s = 96
    t = 96
    u = 0
    while idx < _12848:
        require idx < mem[96]
        _12852 = mem[(32 * idx) + 128]
        _12854 = mem[64]
        mem[64] = mem[64] + 32
        mem[_12854] = 96
        _16055 = mem[_12852]
        v = 0
        while v < _16055 - 1:
            require v < mem[_12852]
            _16058 = mem[(32 * v) + _12852 + 32]
            require v + 1 < mem[_12852]
            _16061 = mem[(32 * v + 1) + _12852 + 32]
            _16065 = mem[64]
            mem[64] = mem[64] + 32
            mem[_16065] = 96
            _19267 = mem[mem[_9641]]
            idx = 0
            while idx < _19267:
                _19280 = mem[64]
                mem[64] = mem[64] + 96
                mem[_19280] = 0
                mem[_19280 + 32] = 0
                mem[_19280 + 64] = 0
                require idx < mem[mem[_9641]]
                _12848 = mem[96]
                _16055 = mem[_12852]
                _19267 = mem[mem[_9641]]
                if mem[mem[(32 * idx) + mem[_9641] + 32] + 12 len 20] != address(_16058):
                    idx = idx + 1
                    continue 
                if mem[mem[(32 * idx) + mem[_9641] + 32] + 44 len 20] != address(_16061):
                    idx = idx + 1
                    continue 
                v = v + 1
                continue 
            _22471 = mem[_3216]
            idx = 0
            while idx < _22471:
                require idx < mem[_3216]
                require ext_code.size(mem[(32 * idx) + _3216 + 44 len 20])
                staticcall mem[(32 * idx) + _3216 + 44 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22528 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _22543 = mem[_22528]
                require mem[_22528] == mem[_22528 + 12 len 20]
                mem[mem[64] + 4] = address(_16058)
                mem[mem[64] + 36] = address(_16061)
                require ext_code.size(address(_22543))
                staticcall address(_22543).0xe6a43905 with:
                        gas gas_remaining wei
                       args address(_16058), address(_16061)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22708 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_22708] == mem[_22708 + 12 len 20]
                if mem[_22708 + 12 len 20]:
                    require idx < mem[_3216]
                    _23008 = mem[(32 * idx) + _3216 + 32]
                    _25639 = mem[mem[_6428]]
                    s = 0
                    while s < _25639:
                        _25678 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_25678] = 0
                        mem[_25678 + 32] = 0
                        mem[_25678 + 64] = 0
                        mem[_25678 + 96] = 0
                        mem[_25678 + 128] = 0
                        require s < mem[mem[_6428]]
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_23008):
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_23008):
                                _12848 = mem[96]
                                _16055 = mem[_12852]
                                _22471 = mem[_3216]
                                _25639 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_16061):
                                _12848 = mem[96]
                                _16055 = mem[_12852]
                                _22471 = mem[_3216]
                                _25639 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_16058):
                                _12848 = mem[96]
                                _16055 = mem[_12852]
                                _22471 = mem[_3216]
                                _25639 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _25961 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _25962 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            require idx < mem[_3216]
                            _26091 = mem[(32 * idx) + _3216 + 32]
                            mem[mem[64] + 4] = 10^18
                            mem[mem[64] + 36] = Mask(112, 0, _25961)
                            mem[mem[64] + 68] = Mask(112, 0, _25962)
                            require ext_code.size(address(_26091))
                            staticcall address(_26091).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args 10^18, _25961 << 144, Mask(112, 0, _25962)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26232 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_26232] > 0:
                                require idx < mem[_3216]
                        else:
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_16058):
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_23008):
                                    _12848 = mem[96]
                                    _16055 = mem[_12852]
                                    _22471 = mem[_3216]
                                    _25639 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_16061):
                                    _12848 = mem[96]
                                    _16055 = mem[_12852]
                                    _22471 = mem[_3216]
                                    _25639 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_16058):
                                    _12848 = mem[96]
                                    _16055 = mem[_12852]
                                    _22471 = mem[_3216]
                                    _25639 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _26002 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _26003 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                require idx < mem[_3216]
                                _26130 = mem[(32 * idx) + _3216 + 32]
                                mem[mem[64] + 4] = 10^18
                                mem[mem[64] + 36] = Mask(112, 0, _26002)
                                mem[mem[64] + 68] = Mask(112, 0, _26003)
                                require ext_code.size(address(_26130))
                                staticcall address(_26130).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args 10^18, _26002 << 144, Mask(112, 0, _26003)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26259 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if mem[_26259] > 0:
                                    require idx < mem[_3216]
                            else:
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] == address(_16061):
                                    _25876 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                    _25877 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                    require idx < mem[_3216]
                                    _25964 = mem[(32 * idx) + _3216 + 32]
                                    mem[mem[64] + 4] = 10^18
                                    mem[mem[64] + 36] = Mask(112, 0, _25876)
                                    mem[mem[64] + 68] = Mask(112, 0, _25877)
                                    require ext_code.size(address(_25964))
                                    staticcall address(_25964).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                            gas gas_remaining wei
                                           args 10^18, _25876 << 144, Mask(112, 0, _25877)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _26133 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if mem[_26133] > 0:
                                        require idx < mem[_3216]
                                else:
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_23008):
                                        _12848 = mem[96]
                                        _16055 = mem[_12852]
                                        _22471 = mem[_3216]
                                        _25639 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_16061):
                                        _12848 = mem[96]
                                        _16055 = mem[_12852]
                                        _22471 = mem[_3216]
                                        _25639 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_16058):
                                        _12848 = mem[96]
                                        _16055 = mem[_12852]
                                        _22471 = mem[_3216]
                                        _25639 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    _26049 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                    _26050 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                    require idx < mem[_3216]
                                    _26166 = mem[(32 * idx) + _3216 + 32]
                                    mem[mem[64] + 4] = 10^18
                                    mem[mem[64] + 36] = Mask(112, 0, _26049)
                                    mem[mem[64] + 68] = Mask(112, 0, _26050)
                                    require ext_code.size(address(_26166))
                                    staticcall address(_26166).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                            gas gas_remaining wei
                                           args 10^18, _26049 << 144, Mask(112, 0, _26050)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _26288 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if mem[_26288] > 0:
                                        require idx < mem[_3216]
                        _12848 = mem[96]
                        _16055 = mem[_12852]
                        _22471 = mem[_3216]
                        _25639 = mem[mem[_6428]]
                        idx = idx + 1
                        continue 
                    require ext_code.size(address(_23008))
                    staticcall address(_23008).factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if ext_call.success:
                        _25723 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25773 = mem[_25723]
                        require mem[_25723] == mem[_25723 + 12 len 20]
                        mem[mem[64] + 4] = address(_16058)
                        mem[mem[64] + 36] = address(_16061)
                        require ext_code.size(address(_25773))
                        staticcall address(_25773).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_16058), address(_16061)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26129 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26205 = mem[_26129]
                        require mem[_26129] == mem[_26129 + 12 len 20]
                        require ext_code.size(mem[_26129 + 12 len 20])
                        staticcall mem[_26129 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26386 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _26426 = mem[_26386]
                        require mem[_26386] == mem[_26386 + 18 len 14]
                        _26486 = mem[_26386 + 32]
                        require mem[_26386 + 32] == mem[_26386 + 50 len 14]
                        require mem[_26386 + 64] == mem[_26386 + 92 len 4]
                        require ext_code.size(address(_26205))
                        staticcall address(_26205).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26721 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26721] == mem[_26721 + 12 len 20]
                        require idx < mem[_3216]
                        if mem[_26721 + 12 len 20] != address(_16061):
                            _27304 = mem[(32 * idx) + _3216 + 32]
                            mem[mem[64] + 4] = 10^18
                            mem[mem[64] + 36] = Mask(112, 0, _26426)
                            mem[mem[64] + 68] = Mask(112, 0, _26486)
                            require ext_code.size(address(_27304))
                            staticcall address(_27304).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args 10^18, _26426 << 144, Mask(112, 0, _26486)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27612 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_27612] > 0:
                                require idx < mem[_3216]
                        else:
                            _27391 = mem[(32 * idx) + _3216 + 32]
                            mem[mem[64] + 4] = 10^18
                            mem[mem[64] + 36] = Mask(112, 0, _26486)
                            mem[mem[64] + 68] = Mask(112, 0, _26426)
                            require ext_code.size(address(_27391))
                            staticcall address(_27391).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args 10^18, _26486 << 144, Mask(112, 0, _26426)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27684 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_27684] > 0:
                                require idx < mem[_3216]
                    else:
                        require ext_code.size(address(_23008))
                        staticcall address(_23008).FACTORY() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25806 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25873 = mem[_25806]
                        require mem[_25806] == mem[_25806 + 12 len 20]
                        mem[mem[64] + 4] = address(_16058)
                        mem[mem[64] + 36] = address(_16061)
                        require ext_code.size(address(_25873))
                        staticcall address(_25873).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_16058), address(_16061)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26164 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26231 = mem[_26164]
                        require mem[_26164] == mem[_26164 + 12 len 20]
                        require ext_code.size(mem[_26164 + 12 len 20])
                        staticcall mem[_26164 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26405 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _26448 = mem[_26405]
                        require mem[_26405] == mem[_26405 + 18 len 14]
                        _26518 = mem[_26405 + 32]
                        require mem[_26405 + 32] == mem[_26405 + 50 len 14]
                        require mem[_26405 + 64] == mem[_26405 + 92 len 4]
                        require ext_code.size(address(_26231))
                        staticcall address(_26231).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26761 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26761] == mem[_26761 + 12 len 20]
                        require idx < mem[_3216]
                        if mem[_26761 + 12 len 20] != address(_16061):
                            _27388 = mem[(32 * idx) + _3216 + 32]
                            mem[mem[64] + 4] = 10^18
                            mem[mem[64] + 36] = Mask(112, 0, _26448)
                            mem[mem[64] + 68] = Mask(112, 0, _26518)
                            require ext_code.size(address(_27388))
                            staticcall address(_27388).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args 10^18, _26448 << 144, Mask(112, 0, _26518)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27683 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_27683] > 0:
                                require idx < mem[_3216]
                        else:
                            _27466 = mem[(32 * idx) + _3216 + 32]
                            mem[mem[64] + 4] = 10^18
                            mem[mem[64] + 36] = Mask(112, 0, _26518)
                            mem[mem[64] + 68] = Mask(112, 0, _26448)
                            require ext_code.size(address(_27466))
                            staticcall address(_27466).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args 10^18, _26518 << 144, Mask(112, 0, _26448)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27763 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_27763] > 0:
                                require idx < mem[_3216]
                _12848 = mem[96]
                _16055 = mem[_12852]
                _22471 = mem[_3216]
                idx = idx + 1
                continue 
            _22473 = mem[mem[_9641]]
            require mem[mem[_9641]] + 1 <= test266151307()
            _22480 = mem[64]
            mem[mem[64]] = mem[mem[_9641]] + 1
            mem[64] = mem[64] + (32 * _22473 + 1) + 32
            if not _22473 + 1:
                mem[_16065] = _22480
                _25637 = mem[mem[_9641]]
                idx = 0
                while idx < _25637:
                    require idx < mem[mem[_9641]]
                    require idx < mem[mem[_16065]]
                    mem[(32 * idx) + mem[_16065] + 32] = mem[(32 * idx) + mem[_9641] + 32]
                    _12848 = mem[96]
                    _16055 = mem[_12852]
                    _25637 = mem[mem[_9641]]
                    idx = idx + 1
                    continue 
                _25641 = mem[64]
                mem[64] = mem[64] + 96
                mem[_25641] = address(_16058)
                mem[_25641 + 32] = address(_16061)
                mem[_25641 + 64] = 0
                require mem[mem[_9641]] < mem[mem[_16065]]
                mem[(32 * mem[mem[_9641]]) + mem[_16065] + 32] = _25641
            else:
                mem[64] = _22480 + (32 * _22473 + 1) + 128
                mem[_22480 + (32 * _22473 + 1) + 32] = 0
                mem[_22480 + (32 * _22473 + 1) + 64] = 0
                mem[_22480 + (32 * _22473 + 1) + 96] = 0
                mem[var90001] = _22480 + (32 * _22473 + 1) + 32
                s = var90001
                idx = var90002
                while idx - 1:
                    _12848 = mem[96]
                    _16055 = mem[_12852]
                    mem[64] = mem[64] + 96
                    mem[_22480 + (32 * _22473 + 1) + 32] = 0
                    mem[_22480 + (32 * _22473 + 1) + 64] = 0
                    mem[_22480 + (32 * _22473 + 1) + 96] = 0
                    mem[s + 32] = _22480 + (32 * _22473 + 1) + 32
                    s = s + 32
                    idx = idx - 1
                    continue 
                mem[_16065] = _22480
                _30849 = mem[mem[_9641]]
                idx = 0
                while idx < _30849:
                    require idx < mem[mem[_9641]]
                    require idx < mem[mem[_16065]]
                    mem[(32 * idx) + mem[_16065] + 32] = mem[(32 * idx) + mem[_9641] + 32]
                    _12848 = mem[96]
                    _16055 = mem[_12852]
                    _30849 = mem[mem[_9641]]
                    idx = idx + 1
                    continue 
                _30851 = mem[64]
                mem[64] = mem[64] + 96
                mem[_30851] = address(_16058)
                mem[_30851 + 32] = address(_16061)
                mem[_30851 + 64] = 0
                require mem[mem[_9641]] < mem[mem[_16065]]
                mem[(32 * mem[mem[_9641]]) + mem[_16065] + 32] = _30851
            _12848 = mem[96]
            _16055 = mem[_12852]
            v = v + 1
            continue 
        require idx < mem[96]
        _16060 = mem[(32 * idx) + 128]
        _16063 = mem[mem[(32 * idx) + 128]]
        require mem[mem[(32 * idx) + 128]] - 1 <= test266151307()
        _16064 = mem[64]
        mem[mem[64]] = mem[mem[(32 * idx) + 128]] - 1
        mem[64] = mem[64] + (32 * _16063 - 1) + 32
        if not _16063 - 1:
            _16067 = mem[_16060]
            require mem[_16060] - 1 <= test266151307()
            mem[_16064 + (32 * _16063 - 1) + 32] = mem[_16060] - 1
            mem[64] = _16064 + (32 * _16063 - 1) + (32 * _16067 - 1) + 64
            if not _16067 - 1:
                _19262 = mem[_16060]
                v = 0
                w = 10^18
                while v < _19262 - 1:
                    require v < mem[_16060]
                    _19272 = mem[(32 * v) + _16060 + 32]
                    require v + 1 < mem[_16060]
                    _19283 = mem[(32 * v + 1) + _16060 + 32]
                    _19293 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_19293] = 0
                    mem[_19293 + 32] = 0
                    mem[_19293 + 64] = 0
                    _19312 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_19312] = 0
                    mem[_19312 + 32] = 0
                    mem[_19312 + 64] = 0
                    _22464 = mem[mem[_9641]]
                    idx = 0
                    while idx < _22464:
                        _22476 = mem[64]
                        mem[64] = mem[64] + 96
                        mem[_22476] = 0
                        mem[_22476 + 32] = 0
                        mem[_22476 + 64] = 0
                        require idx < mem[mem[_9641]]
                        _22502 = mem[(32 * idx) + mem[_9641] + 32]
                        if mem[mem[(32 * idx) + mem[_9641] + 32] + 12 len 20] != address(_19272):
                            _12848 = mem[96]
                            _19262 = mem[_16060]
                            _22464 = mem[mem[_9641]]
                            idx = idx + 1
                            continue 
                        if mem[mem[(32 * idx) + mem[_9641] + 32] + 44 len 20] != address(_19283):
                            _12848 = mem[96]
                            _19262 = mem[_16060]
                            _22464 = mem[mem[_9641]]
                            idx = idx + 1
                            continue 
                        require v < mem[_16064]
                        mem[(32 * v) + _16064 + 32] = mem[mem[(32 * idx) + mem[_9641] + 32] + 76 len 20]
                        _22586 = mem[_22502 + 64]
                        _25623 = mem[mem[_6428]]
                        idx = 0
                        while idx < _25623:
                            _25654 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_25654] = 0
                            mem[_25654 + 32] = 0
                            mem[_25654 + 64] = 0
                            mem[_25654 + 96] = 0
                            mem[_25654 + 128] = 0
                            require idx < mem[mem[_6428]]
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22586):
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22586):
                                    _12848 = mem[96]
                                    _19262 = mem[_16060]
                                    _22464 = mem[mem[_9641]]
                                    _25623 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19283):
                                    _12848 = mem[96]
                                    _19262 = mem[_16060]
                                    _22464 = mem[mem[_9641]]
                                    _25623 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19272):
                                    _12848 = mem[96]
                                    _19262 = mem[_16060]
                                    _22464 = mem[mem[_9641]]
                                    _25623 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                _25933 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                                _25934 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                                _26013 = mem[_22502 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _25933)
                                mem[mem[64] + 68] = Mask(112, 0, _25934)
                                require ext_code.size(address(_26013))
                                staticcall address(_26013).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _25933 << 144, Mask(112, 0, _25934)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26178 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _26245 = mem[_26178]
                                require v < mem[_16064 + (32 * _16063 - 1) + 32]
                                mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26178]
                                _12848 = mem[96]
                                _19262 = mem[_16060]
                                _22464 = mem[mem[_9641]]
                                _25623 = mem[mem[_6428]]
                                v = v + 1
                                w = _26245
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19272):
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22586):
                                    _12848 = mem[96]
                                    _19262 = mem[_16060]
                                    _22464 = mem[mem[_9641]]
                                    _25623 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19283):
                                    _12848 = mem[96]
                                    _19262 = mem[_16060]
                                    _22464 = mem[mem[_9641]]
                                    _25623 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19272):
                                    _12848 = mem[96]
                                    _19262 = mem[_16060]
                                    _22464 = mem[mem[_9641]]
                                    _25623 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                _25974 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                                _25975 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                                _26063 = mem[_22502 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _25974)
                                mem[mem[64] + 68] = Mask(112, 0, _25975)
                                require ext_code.size(address(_26063))
                                staticcall address(_26063).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _25974 << 144, Mask(112, 0, _25975)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26218 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _26274 = mem[_26218]
                                require v < mem[_16064 + (32 * _16063 - 1) + 32]
                                mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26218]
                                _12848 = mem[96]
                                _19262 = mem[_16060]
                                _22464 = mem[mem[_9641]]
                                _25623 = mem[mem[_6428]]
                                v = v + 1
                                w = _26274
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] == address(_19283):
                                _25841 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                                _25842 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                                _25904 = mem[_22502 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _25841)
                                mem[mem[64] + 68] = Mask(112, 0, _25842)
                                require ext_code.size(address(_25904))
                                staticcall address(_25904).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _25841 << 144, Mask(112, 0, _25842)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26065 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _26145 = mem[_26065]
                                require v < mem[_16064 + (32 * _16063 - 1) + 32]
                                mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26065]
                                _12848 = mem[96]
                                _19262 = mem[_16060]
                                _22464 = mem[mem[_9641]]
                                _25623 = mem[mem[_6428]]
                                v = v + 1
                                w = _26145
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22586):
                                _12848 = mem[96]
                                _19262 = mem[_16060]
                                _22464 = mem[mem[_9641]]
                                _25623 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19283):
                                _12848 = mem[96]
                                _19262 = mem[_16060]
                                _22464 = mem[mem[_9641]]
                                _25623 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19272):
                                _12848 = mem[96]
                                _19262 = mem[_16060]
                                _22464 = mem[mem[_9641]]
                                _25623 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            _26015 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                            _26016 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                            _26103 = mem[_22502 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _26015)
                            mem[mem[64] + 68] = Mask(112, 0, _26016)
                            require ext_code.size(address(_26103))
                            staticcall address(_26103).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _26015 << 144, Mask(112, 0, _26016)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26246 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26306 = mem[_26246]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26246]
                            _12848 = mem[96]
                            _19262 = mem[_16060]
                            _22464 = mem[mem[_9641]]
                            _25623 = mem[mem[_6428]]
                            v = v + 1
                            w = _26306
                            continue 
                        require ext_code.size(address(_22586))
                        staticcall address(_22586).factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if ext_call.success:
                            _25702 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25759 = mem[_25702]
                            require mem[_25702] == mem[_25702 + 12 len 20]
                            mem[mem[64] + 4] = address(_19272)
                            mem[mem[64] + 36] = address(_19283)
                            require ext_code.size(address(_25759))
                            staticcall address(_25759).0xe6a43905 with:
                                    gas gas_remaining wei
                                   args address(_19272), address(_19283)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26101 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26177 = mem[_26101]
                            require mem[_26101] == mem[_26101 + 12 len 20]
                            require ext_code.size(mem[_26101 + 12 len 20])
                            staticcall mem[_26101 + 12 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26379 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _26419 = mem[_26379]
                            require mem[_26379] == mem[_26379 + 18 len 14]
                            _26479 = mem[_26379 + 32]
                            require mem[_26379 + 32] == mem[_26379 + 50 len 14]
                            require mem[_26379 + 64] == mem[_26379 + 92 len 4]
                            require ext_code.size(address(_26177))
                            staticcall address(_26177).token0() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26714 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_26714] == mem[_26714 + 12 len 20]
                            if mem[_26714 + 12 len 20] != address(_19283):
                                _27199 = mem[_22502 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _26419)
                                mem[mem[64] + 68] = Mask(112, 0, _26479)
                                require ext_code.size(address(_27199))
                                staticcall address(_27199).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _26419 << 144, Mask(112, 0, _26479)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27527 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _27670 = mem[_27527]
                                require v < mem[_16064 + (32 * _16063 - 1) + 32]
                                mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27527]
                                _12848 = mem[96]
                                _19262 = mem[_16060]
                                _22464 = mem[mem[_9641]]
                                v = v + 1
                                w = _27670
                                continue 
                            _27277 = mem[_22502 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _26479)
                            mem[mem[64] + 68] = Mask(112, 0, _26419)
                            require ext_code.size(address(_27277))
                            staticcall address(_27277).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _26479 << 144, Mask(112, 0, _26419)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27598 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27744 = mem[_27598]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27598]
                            _12848 = mem[96]
                            _19262 = mem[_16060]
                            _22464 = mem[mem[_9641]]
                            v = v + 1
                            w = _27744
                            continue 
                        require ext_code.size(address(_22586))
                        staticcall address(_22586).FACTORY() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25782 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25838 = mem[_25782]
                        require mem[_25782] == mem[_25782 + 12 len 20]
                        mem[mem[64] + 4] = address(_19272)
                        mem[mem[64] + 36] = address(_19283)
                        require ext_code.size(address(_25838))
                        staticcall address(_25838).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_19272), address(_19283)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26143 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26217 = mem[_26143]
                        require mem[_26143] == mem[_26143 + 12 len 20]
                        require ext_code.size(mem[_26143 + 12 len 20])
                        staticcall mem[_26143 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26398 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _26441 = mem[_26398]
                        require mem[_26398] == mem[_26398 + 18 len 14]
                        _26511 = mem[_26398 + 32]
                        require mem[_26398 + 32] == mem[_26398 + 50 len 14]
                        require mem[_26398 + 64] == mem[_26398 + 92 len 4]
                        require ext_code.size(address(_26217))
                        staticcall address(_26217).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26754 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26754] == mem[_26754 + 12 len 20]
                        if mem[_26754 + 12 len 20] != address(_19283):
                            _27275 = mem[_22502 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _26441)
                            mem[mem[64] + 68] = Mask(112, 0, _26511)
                            require ext_code.size(address(_27275))
                            staticcall address(_27275).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _26441 << 144, Mask(112, 0, _26511)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27597 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27742 = mem[_27597]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27597]
                            _12848 = mem[96]
                            _19262 = mem[_16060]
                            _22464 = mem[mem[_9641]]
                            v = v + 1
                            w = _27742
                            continue 
                        _27367 = mem[_22502 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _26511)
                        mem[mem[64] + 68] = Mask(112, 0, _26441)
                        require ext_code.size(address(_27367))
                        staticcall address(_27367).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _26511 << 144, Mask(112, 0, _26441)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27669 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27823 = mem[_27669]
                        require v < mem[_16064 + (32 * _16063 - 1) + 32]
                        mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27669]
                        _12848 = mem[96]
                        _19262 = mem[_16060]
                        _22464 = mem[mem[_9641]]
                        v = v + 1
                        w = _27823
                        continue 
                    require v < mem[_16064]
                    mem[(32 * v) + _16064 + 32] = mem[_19312 + 76 len 20]
                    _22501 = mem[_19312 + 64]
                    _25621 = mem[mem[_6428]]
                    idx = 0
                    while idx < _25621:
                        _25651 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_25651] = 0
                        mem[_25651 + 32] = 0
                        mem[_25651 + 64] = 0
                        mem[_25651 + 96] = 0
                        mem[_25651 + 128] = 0
                        require idx < mem[mem[_6428]]
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22501):
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22501):
                                _12848 = mem[96]
                                _19262 = mem[_16060]
                                _25621 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19283):
                                _12848 = mem[96]
                                _19262 = mem[_16060]
                                _25621 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19272):
                                _12848 = mem[96]
                                _19262 = mem[_16060]
                                _25621 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            _25929 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                            _25930 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                            _26008 = mem[_19312 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _25929)
                            mem[mem[64] + 68] = Mask(112, 0, _25930)
                            require ext_code.size(address(_26008))
                            staticcall address(_26008).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _25929 << 144, Mask(112, 0, _25930)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26174 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26243 = mem[_26174]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26174]
                            _12848 = mem[96]
                            _19262 = mem[_16060]
                            _25621 = mem[mem[_6428]]
                            v = v + 1
                            w = _26243
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19272):
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22501):
                                _12848 = mem[96]
                                _19262 = mem[_16060]
                                _25621 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19283):
                                _12848 = mem[96]
                                _19262 = mem[_16060]
                                _25621 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19272):
                                _12848 = mem[96]
                                _19262 = mem[_16060]
                                _25621 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            _25970 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                            _25971 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                            _26059 = mem[_19312 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _25970)
                            mem[mem[64] + 68] = Mask(112, 0, _25971)
                            require ext_code.size(address(_26059))
                            staticcall address(_26059).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _25970 << 144, Mask(112, 0, _25971)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26216 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26272 = mem[_26216]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26216]
                            _12848 = mem[96]
                            _19262 = mem[_16060]
                            _25621 = mem[mem[_6428]]
                            v = v + 1
                            w = _26272
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] == address(_19283):
                            _25836 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                            _25837 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                            _25901 = mem[_19312 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _25836)
                            mem[mem[64] + 68] = Mask(112, 0, _25837)
                            require ext_code.size(address(_25901))
                            staticcall address(_25901).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _25836 << 144, Mask(112, 0, _25837)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26061 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26142 = mem[_26061]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26061]
                            _12848 = mem[96]
                            _19262 = mem[_16060]
                            _25621 = mem[mem[_6428]]
                            v = v + 1
                            w = _26142
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22501):
                            _12848 = mem[96]
                            _19262 = mem[_16060]
                            _25621 = mem[mem[_6428]]
                            idx = idx + 1
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19283):
                            _12848 = mem[96]
                            _19262 = mem[_16060]
                            _25621 = mem[mem[_6428]]
                            idx = idx + 1
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19272):
                            _12848 = mem[96]
                            _19262 = mem[_16060]
                            _25621 = mem[mem[_6428]]
                            idx = idx + 1
                            continue 
                        _26010 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                        _26011 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                        _26099 = mem[_19312 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _26010)
                        mem[mem[64] + 68] = Mask(112, 0, _26011)
                        require ext_code.size(address(_26099))
                        staticcall address(_26099).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _26010 << 144, Mask(112, 0, _26011)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26244 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26302 = mem[_26244]
                        require v < mem[_16064 + (32 * _16063 - 1) + 32]
                        mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26244]
                        _12848 = mem[96]
                        _19262 = mem[_16060]
                        _25621 = mem[mem[_6428]]
                        v = v + 1
                        w = _26302
                        continue 
                    require ext_code.size(address(_22501))
                    staticcall address(_22501).factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if ext_call.success:
                        _25699 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25758 = mem[_25699]
                        require mem[_25699] == mem[_25699 + 12 len 20]
                        mem[mem[64] + 4] = address(_19272)
                        mem[mem[64] + 36] = address(_19283)
                        require ext_code.size(address(_25758))
                        staticcall address(_25758).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_19272), address(_19283)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26097 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26173 = mem[_26097]
                        require mem[_26097] == mem[_26097 + 12 len 20]
                        require ext_code.size(mem[_26097 + 12 len 20])
                        staticcall mem[_26097 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26378 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _26418 = mem[_26378]
                        require mem[_26378] == mem[_26378 + 18 len 14]
                        _26478 = mem[_26378 + 32]
                        require mem[_26378 + 32] == mem[_26378 + 50 len 14]
                        require mem[_26378 + 64] == mem[_26378 + 92 len 4]
                        require ext_code.size(address(_26173))
                        staticcall address(_26173).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26713 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26713] == mem[_26713 + 12 len 20]
                        if mem[_26713 + 12 len 20] != address(_19283):
                            _27197 = mem[_19312 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _26418)
                            mem[mem[64] + 68] = Mask(112, 0, _26478)
                            require ext_code.size(address(_27197))
                            staticcall address(_27197).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _26418 << 144, Mask(112, 0, _26478)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27525 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27668 = mem[_27525]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27525]
                            _12848 = mem[96]
                            _19262 = mem[_16060]
                            v = v + 1
                            w = _27668
                            continue 
                        _27273 = mem[_19312 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _26478)
                        mem[mem[64] + 68] = Mask(112, 0, _26418)
                        require ext_code.size(address(_27273))
                        staticcall address(_27273).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _26478 << 144, Mask(112, 0, _26418)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27596 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27741 = mem[_27596]
                        require v < mem[_16064 + (32 * _16063 - 1) + 32]
                        mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27596]
                        _12848 = mem[96]
                        _19262 = mem[_16060]
                        v = v + 1
                        w = _27741
                        continue 
                    require ext_code.size(address(_22501))
                    staticcall address(_22501).FACTORY() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25779 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25833 = mem[_25779]
                    require mem[_25779] == mem[_25779 + 12 len 20]
                    mem[mem[64] + 4] = address(_19272)
                    mem[mem[64] + 36] = address(_19283)
                    require ext_code.size(address(_25833))
                    staticcall address(_25833).0xe6a43905 with:
                            gas gas_remaining wei
                           args address(_19272), address(_19283)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26140 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26215 = mem[_26140]
                    require mem[_26140] == mem[_26140 + 12 len 20]
                    require ext_code.size(mem[_26140 + 12 len 20])
                    staticcall mem[_26140 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26397 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _26440 = mem[_26397]
                    require mem[_26397] == mem[_26397 + 18 len 14]
                    _26510 = mem[_26397 + 32]
                    require mem[_26397 + 32] == mem[_26397 + 50 len 14]
                    require mem[_26397 + 64] == mem[_26397 + 92 len 4]
                    require ext_code.size(address(_26215))
                    staticcall address(_26215).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26753 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26753] == mem[_26753 + 12 len 20]
                    if mem[_26753 + 12 len 20] != address(_19283):
                        _27271 = mem[_19312 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _26440)
                        mem[mem[64] + 68] = Mask(112, 0, _26510)
                        require ext_code.size(address(_27271))
                        staticcall address(_27271).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _26440 << 144, Mask(112, 0, _26510)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27595 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27739 = mem[_27595]
                        require v < mem[_16064 + (32 * _16063 - 1) + 32]
                        mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27595]
                        _12848 = mem[96]
                        _19262 = mem[_16060]
                        v = v + 1
                        w = _27739
                        continue 
                    _27364 = mem[_19312 + 64]
                    mem[mem[64] + 4] = w
                    mem[mem[64] + 36] = Mask(112, 0, _26510)
                    mem[mem[64] + 68] = Mask(112, 0, _26440)
                    require ext_code.size(address(_27364))
                    staticcall address(_27364).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args w, _26510 << 144, Mask(112, 0, _26440)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27667 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27820 = mem[_27667]
                    require v < mem[_16064 + (32 * _16063 - 1) + 32]
                    mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27667]
                    _12848 = mem[96]
                    _19262 = mem[_16060]
                    v = v + 1
                    w = _27820
                    continue 
            else:
                mem[_16064 + (32 * _16063 - 1) + 64 len 32 * _16067 - 1] = call.data[calldata.size len 32 * _16067 - 1]
                _19263 = mem[_16060]
                v = 0
                w = 10^18
                while v < _19263 - 1:
                    require v < mem[_16060]
                    _19274 = mem[(32 * v) + _16060 + 32]
                    require v + 1 < mem[_16060]
                    _19285 = mem[(32 * v + 1) + _16060 + 32]
                    _19295 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_19295] = 0
                    mem[_19295 + 32] = 0
                    mem[_19295 + 64] = 0
                    _19313 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_19313] = 0
                    mem[_19313 + 32] = 0
                    mem[_19313 + 64] = 0
                    _22466 = mem[mem[_9641]]
                    idx = 0
                    while idx < _22466:
                        _22477 = mem[64]
                        mem[64] = mem[64] + 96
                        mem[_22477] = 0
                        mem[_22477 + 32] = 0
                        mem[_22477 + 64] = 0
                        require idx < mem[mem[_9641]]
                        _22505 = mem[(32 * idx) + mem[_9641] + 32]
                        if mem[mem[(32 * idx) + mem[_9641] + 32] + 12 len 20] != address(_19274):
                            _12848 = mem[96]
                            _19263 = mem[_16060]
                            _22466 = mem[mem[_9641]]
                            idx = idx + 1
                            continue 
                        if mem[mem[(32 * idx) + mem[_9641] + 32] + 44 len 20] != address(_19285):
                            _12848 = mem[96]
                            _19263 = mem[_16060]
                            _22466 = mem[mem[_9641]]
                            idx = idx + 1
                            continue 
                        require v < mem[_16064]
                        mem[(32 * v) + _16064 + 32] = mem[mem[(32 * idx) + mem[_9641] + 32] + 76 len 20]
                        _22590 = mem[_22505 + 64]
                        _25627 = mem[mem[_6428]]
                        idx = 0
                        while idx < _25627:
                            _25660 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_25660] = 0
                            mem[_25660 + 32] = 0
                            mem[_25660 + 64] = 0
                            mem[_25660 + 96] = 0
                            mem[_25660 + 128] = 0
                            require idx < mem[mem[_6428]]
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22590):
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22590):
                                    _12848 = mem[96]
                                    _19263 = mem[_16060]
                                    _22466 = mem[mem[_9641]]
                                    _25627 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19285):
                                    _12848 = mem[96]
                                    _19263 = mem[_16060]
                                    _22466 = mem[mem[_9641]]
                                    _25627 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19274):
                                    _12848 = mem[96]
                                    _19263 = mem[_16060]
                                    _22466 = mem[mem[_9641]]
                                    _25627 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                _25941 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                                _25942 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                                _26023 = mem[_22505 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _25941)
                                mem[mem[64] + 68] = Mask(112, 0, _25942)
                                require ext_code.size(address(_26023))
                                staticcall address(_26023).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _25941 << 144, Mask(112, 0, _25942)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26186 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _26249 = mem[_26186]
                                require v < mem[_16064 + (32 * _16063 - 1) + 32]
                                mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26186]
                                _12848 = mem[96]
                                _19263 = mem[_16060]
                                _22466 = mem[mem[_9641]]
                                _25627 = mem[mem[_6428]]
                                v = v + 1
                                w = _26249
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19274):
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22590):
                                    _12848 = mem[96]
                                    _19263 = mem[_16060]
                                    _22466 = mem[mem[_9641]]
                                    _25627 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19285):
                                    _12848 = mem[96]
                                    _19263 = mem[_16060]
                                    _22466 = mem[mem[_9641]]
                                    _25627 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19274):
                                    _12848 = mem[96]
                                    _19263 = mem[_16060]
                                    _22466 = mem[mem[_9641]]
                                    _25627 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                _25982 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                                _25983 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                                _26071 = mem[_22505 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _25982)
                                mem[mem[64] + 68] = Mask(112, 0, _25983)
                                require ext_code.size(address(_26071))
                                staticcall address(_26071).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _25982 << 144, Mask(112, 0, _25983)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26222 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _26278 = mem[_26222]
                                require v < mem[_16064 + (32 * _16063 - 1) + 32]
                                mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26222]
                                _12848 = mem[96]
                                _19263 = mem[_16060]
                                _22466 = mem[mem[_9641]]
                                _25627 = mem[mem[_6428]]
                                v = v + 1
                                w = _26278
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] == address(_19285):
                                _25851 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                                _25852 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                                _25910 = mem[_22505 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _25851)
                                mem[mem[64] + 68] = Mask(112, 0, _25852)
                                require ext_code.size(address(_25910))
                                staticcall address(_25910).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _25851 << 144, Mask(112, 0, _25852)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26073 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _26151 = mem[_26073]
                                require v < mem[_16064 + (32 * _16063 - 1) + 32]
                                mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26073]
                                _12848 = mem[96]
                                _19263 = mem[_16060]
                                _22466 = mem[mem[_9641]]
                                _25627 = mem[mem[_6428]]
                                v = v + 1
                                w = _26151
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22590):
                                _12848 = mem[96]
                                _19263 = mem[_16060]
                                _22466 = mem[mem[_9641]]
                                _25627 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19285):
                                _12848 = mem[96]
                                _19263 = mem[_16060]
                                _22466 = mem[mem[_9641]]
                                _25627 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19274):
                                _12848 = mem[96]
                                _19263 = mem[_16060]
                                _22466 = mem[mem[_9641]]
                                _25627 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            _26025 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                            _26026 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                            _26111 = mem[_22505 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _26025)
                            mem[mem[64] + 68] = Mask(112, 0, _26026)
                            require ext_code.size(address(_26111))
                            staticcall address(_26111).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _26025 << 144, Mask(112, 0, _26026)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26250 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26314 = mem[_26250]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26250]
                            _12848 = mem[96]
                            _19263 = mem[_16060]
                            _22466 = mem[mem[_9641]]
                            _25627 = mem[mem[_6428]]
                            v = v + 1
                            w = _26314
                            continue 
                        require ext_code.size(address(_22590))
                        staticcall address(_22590).factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if ext_call.success:
                            _25708 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25761 = mem[_25708]
                            require mem[_25708] == mem[_25708 + 12 len 20]
                            mem[mem[64] + 4] = address(_19274)
                            mem[mem[64] + 36] = address(_19285)
                            require ext_code.size(address(_25761))
                            staticcall address(_25761).0xe6a43905 with:
                                    gas gas_remaining wei
                                   args address(_19274), address(_19285)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26109 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26185 = mem[_26109]
                            require mem[_26109] == mem[_26109 + 12 len 20]
                            require ext_code.size(mem[_26109 + 12 len 20])
                            staticcall mem[_26109 + 12 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26381 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _26421 = mem[_26381]
                            require mem[_26381] == mem[_26381 + 18 len 14]
                            _26481 = mem[_26381 + 32]
                            require mem[_26381 + 32] == mem[_26381 + 50 len 14]
                            require mem[_26381 + 64] == mem[_26381 + 92 len 4]
                            require ext_code.size(address(_26185))
                            staticcall address(_26185).token0() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26716 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_26716] == mem[_26716 + 12 len 20]
                            if mem[_26716 + 12 len 20] != address(_19285):
                                _27203 = mem[_22505 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _26421)
                                mem[mem[64] + 68] = Mask(112, 0, _26481)
                                require ext_code.size(address(_27203))
                                staticcall address(_27203).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _26421 << 144, Mask(112, 0, _26481)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27531 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _27674 = mem[_27531]
                                require v < mem[_16064 + (32 * _16063 - 1) + 32]
                                mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27531]
                                _12848 = mem[96]
                                _19263 = mem[_16060]
                                _22466 = mem[mem[_9641]]
                                v = v + 1
                                w = _27674
                                continue 
                            _27285 = mem[_22505 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _26481)
                            mem[mem[64] + 68] = Mask(112, 0, _26421)
                            require ext_code.size(address(_27285))
                            staticcall address(_27285).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _26481 << 144, Mask(112, 0, _26421)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27602 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27750 = mem[_27602]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27602]
                            _12848 = mem[96]
                            _19263 = mem[_16060]
                            _22466 = mem[mem[_9641]]
                            v = v + 1
                            w = _27750
                            continue 
                        require ext_code.size(address(_22590))
                        staticcall address(_22590).FACTORY() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25788 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25848 = mem[_25788]
                        require mem[_25788] == mem[_25788 + 12 len 20]
                        mem[mem[64] + 4] = address(_19274)
                        mem[mem[64] + 36] = address(_19285)
                        require ext_code.size(address(_25848))
                        staticcall address(_25848).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_19274), address(_19285)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26149 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26221 = mem[_26149]
                        require mem[_26149] == mem[_26149 + 12 len 20]
                        require ext_code.size(mem[_26149 + 12 len 20])
                        staticcall mem[_26149 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26400 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _26443 = mem[_26400]
                        require mem[_26400] == mem[_26400 + 18 len 14]
                        _26513 = mem[_26400 + 32]
                        require mem[_26400 + 32] == mem[_26400 + 50 len 14]
                        require mem[_26400 + 64] == mem[_26400 + 92 len 4]
                        require ext_code.size(address(_26221))
                        staticcall address(_26221).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26756 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26756] == mem[_26756 + 12 len 20]
                        if mem[_26756 + 12 len 20] != address(_19285):
                            _27283 = mem[_22505 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _26443)
                            mem[mem[64] + 68] = Mask(112, 0, _26513)
                            require ext_code.size(address(_27283))
                            staticcall address(_27283).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _26443 << 144, Mask(112, 0, _26513)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27601 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27748 = mem[_27601]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27601]
                            _12848 = mem[96]
                            _19263 = mem[_16060]
                            _22466 = mem[mem[_9641]]
                            v = v + 1
                            w = _27748
                            continue 
                        _27373 = mem[_22505 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _26513)
                        mem[mem[64] + 68] = Mask(112, 0, _26443)
                        require ext_code.size(address(_27373))
                        staticcall address(_27373).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _26513 << 144, Mask(112, 0, _26443)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27673 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27829 = mem[_27673]
                        require v < mem[_16064 + (32 * _16063 - 1) + 32]
                        mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27673]
                        _12848 = mem[96]
                        _19263 = mem[_16060]
                        _22466 = mem[mem[_9641]]
                        v = v + 1
                        w = _27829
                        continue 
                    require v < mem[_16064]
                    mem[(32 * v) + _16064 + 32] = mem[_19313 + 76 len 20]
                    _22504 = mem[_19313 + 64]
                    _25625 = mem[mem[_6428]]
                    idx = 0
                    while idx < _25625:
                        _25657 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_25657] = 0
                        mem[_25657 + 32] = 0
                        mem[_25657 + 64] = 0
                        mem[_25657 + 96] = 0
                        mem[_25657 + 128] = 0
                        require idx < mem[mem[_6428]]
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22504):
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22504):
                                _12848 = mem[96]
                                _19263 = mem[_16060]
                                _25625 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19285):
                                _12848 = mem[96]
                                _19263 = mem[_16060]
                                _25625 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19274):
                                _12848 = mem[96]
                                _19263 = mem[_16060]
                                _25625 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            _25937 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                            _25938 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                            _26018 = mem[_19313 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _25937)
                            mem[mem[64] + 68] = Mask(112, 0, _25938)
                            require ext_code.size(address(_26018))
                            staticcall address(_26018).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _25937 << 144, Mask(112, 0, _25938)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26182 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26247 = mem[_26182]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26182]
                            _12848 = mem[96]
                            _19263 = mem[_16060]
                            _25625 = mem[mem[_6428]]
                            v = v + 1
                            w = _26247
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19274):
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22504):
                                _12848 = mem[96]
                                _19263 = mem[_16060]
                                _25625 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19285):
                                _12848 = mem[96]
                                _19263 = mem[_16060]
                                _25625 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19274):
                                _12848 = mem[96]
                                _19263 = mem[_16060]
                                _25625 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            _25978 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                            _25979 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                            _26067 = mem[_19313 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _25978)
                            mem[mem[64] + 68] = Mask(112, 0, _25979)
                            require ext_code.size(address(_26067))
                            staticcall address(_26067).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _25978 << 144, Mask(112, 0, _25979)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26220 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26276 = mem[_26220]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26220]
                            _12848 = mem[96]
                            _19263 = mem[_16060]
                            _25625 = mem[mem[_6428]]
                            v = v + 1
                            w = _26276
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] == address(_19285):
                            _25846 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                            _25847 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                            _25907 = mem[_19313 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _25846)
                            mem[mem[64] + 68] = Mask(112, 0, _25847)
                            require ext_code.size(address(_25907))
                            staticcall address(_25907).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _25846 << 144, Mask(112, 0, _25847)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26069 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26148 = mem[_26069]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26069]
                            _12848 = mem[96]
                            _19263 = mem[_16060]
                            _25625 = mem[mem[_6428]]
                            v = v + 1
                            w = _26148
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22504):
                            _12848 = mem[96]
                            _19263 = mem[_16060]
                            _25625 = mem[mem[_6428]]
                            idx = idx + 1
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19285):
                            _12848 = mem[96]
                            _19263 = mem[_16060]
                            _25625 = mem[mem[_6428]]
                            idx = idx + 1
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19274):
                            _12848 = mem[96]
                            _19263 = mem[_16060]
                            _25625 = mem[mem[_6428]]
                            idx = idx + 1
                            continue 
                        _26020 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                        _26021 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                        _26107 = mem[_19313 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _26020)
                        mem[mem[64] + 68] = Mask(112, 0, _26021)
                        require ext_code.size(address(_26107))
                        staticcall address(_26107).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _26020 << 144, Mask(112, 0, _26021)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26248 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26310 = mem[_26248]
                        require v < mem[_16064 + (32 * _16063 - 1) + 32]
                        mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26248]
                        _12848 = mem[96]
                        _19263 = mem[_16060]
                        _25625 = mem[mem[_6428]]
                        v = v + 1
                        w = _26310
                        continue 
                    require ext_code.size(address(_22504))
                    staticcall address(_22504).factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if ext_call.success:
                        _25705 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25760 = mem[_25705]
                        require mem[_25705] == mem[_25705 + 12 len 20]
                        mem[mem[64] + 4] = address(_19274)
                        mem[mem[64] + 36] = address(_19285)
                        require ext_code.size(address(_25760))
                        staticcall address(_25760).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_19274), address(_19285)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26105 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26181 = mem[_26105]
                        require mem[_26105] == mem[_26105 + 12 len 20]
                        require ext_code.size(mem[_26105 + 12 len 20])
                        staticcall mem[_26105 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26380 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _26420 = mem[_26380]
                        require mem[_26380] == mem[_26380 + 18 len 14]
                        _26480 = mem[_26380 + 32]
                        require mem[_26380 + 32] == mem[_26380 + 50 len 14]
                        require mem[_26380 + 64] == mem[_26380 + 92 len 4]
                        require ext_code.size(address(_26181))
                        staticcall address(_26181).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26715 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26715] == mem[_26715 + 12 len 20]
                        if mem[_26715 + 12 len 20] != address(_19285):
                            _27201 = mem[_19313 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _26420)
                            mem[mem[64] + 68] = Mask(112, 0, _26480)
                            require ext_code.size(address(_27201))
                            staticcall address(_27201).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _26420 << 144, Mask(112, 0, _26480)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27529 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27672 = mem[_27529]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27529]
                            _12848 = mem[96]
                            _19263 = mem[_16060]
                            v = v + 1
                            w = _27672
                            continue 
                        _27281 = mem[_19313 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _26480)
                        mem[mem[64] + 68] = Mask(112, 0, _26420)
                        require ext_code.size(address(_27281))
                        staticcall address(_27281).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _26480 << 144, Mask(112, 0, _26420)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27600 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27747 = mem[_27600]
                        require v < mem[_16064 + (32 * _16063 - 1) + 32]
                        mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27600]
                        _12848 = mem[96]
                        _19263 = mem[_16060]
                        v = v + 1
                        w = _27747
                        continue 
                    require ext_code.size(address(_22504))
                    staticcall address(_22504).FACTORY() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25785 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25843 = mem[_25785]
                    require mem[_25785] == mem[_25785 + 12 len 20]
                    mem[mem[64] + 4] = address(_19274)
                    mem[mem[64] + 36] = address(_19285)
                    require ext_code.size(address(_25843))
                    staticcall address(_25843).0xe6a43905 with:
                            gas gas_remaining wei
                           args address(_19274), address(_19285)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26146 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26219 = mem[_26146]
                    require mem[_26146] == mem[_26146 + 12 len 20]
                    require ext_code.size(mem[_26146 + 12 len 20])
                    staticcall mem[_26146 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26399 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _26442 = mem[_26399]
                    require mem[_26399] == mem[_26399 + 18 len 14]
                    _26512 = mem[_26399 + 32]
                    require mem[_26399 + 32] == mem[_26399 + 50 len 14]
                    require mem[_26399 + 64] == mem[_26399 + 92 len 4]
                    require ext_code.size(address(_26219))
                    staticcall address(_26219).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26755 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26755] == mem[_26755 + 12 len 20]
                    if mem[_26755 + 12 len 20] != address(_19285):
                        _27279 = mem[_19313 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _26442)
                        mem[mem[64] + 68] = Mask(112, 0, _26512)
                        require ext_code.size(address(_27279))
                        staticcall address(_27279).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _26442 << 144, Mask(112, 0, _26512)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27599 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27745 = mem[_27599]
                        require v < mem[_16064 + (32 * _16063 - 1) + 32]
                        mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27599]
                        _12848 = mem[96]
                        _19263 = mem[_16060]
                        v = v + 1
                        w = _27745
                        continue 
                    _27370 = mem[_19313 + 64]
                    mem[mem[64] + 4] = w
                    mem[mem[64] + 36] = Mask(112, 0, _26512)
                    mem[mem[64] + 68] = Mask(112, 0, _26442)
                    require ext_code.size(address(_27370))
                    staticcall address(_27370).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args w, _26512 << 144, Mask(112, 0, _26442)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27671 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27826 = mem[_27671]
                    require v < mem[_16064 + (32 * _16063 - 1) + 32]
                    mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27671]
                    _12848 = mem[96]
                    _19263 = mem[_16060]
                    v = v + 1
                    w = _27826
                    continue 
        else:
            mem[_16064 + 32 len 32 * _16063 - 1] = call.data[calldata.size len 32 * _16063 - 1]
            _16070 = mem[_16060]
            require mem[_16060] - 1 <= test266151307()
            mem[_16064 + (32 * _16063 - 1) + 32] = mem[_16060] - 1
            mem[64] = _16064 + (32 * _16063 - 1) + (32 * _16070 - 1) + 64
            if not _16070 - 1:
                _19264 = mem[_16060]
                v = 0
                w = 10^18
                while v < _19264 - 1:
                    require v < mem[_16060]
                    _19276 = mem[(32 * v) + _16060 + 32]
                    require v + 1 < mem[_16060]
                    _19287 = mem[(32 * v + 1) + _16060 + 32]
                    _19297 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_19297] = 0
                    mem[_19297 + 32] = 0
                    mem[_19297 + 64] = 0
                    _19314 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_19314] = 0
                    mem[_19314 + 32] = 0
                    mem[_19314 + 64] = 0
                    _22468 = mem[mem[_9641]]
                    idx = 0
                    while idx < _22468:
                        _22478 = mem[64]
                        mem[64] = mem[64] + 96
                        mem[_22478] = 0
                        mem[_22478 + 32] = 0
                        mem[_22478 + 64] = 0
                        require idx < mem[mem[_9641]]
                        _22508 = mem[(32 * idx) + mem[_9641] + 32]
                        if mem[mem[(32 * idx) + mem[_9641] + 32] + 12 len 20] != address(_19276):
                            _12848 = mem[96]
                            _19264 = mem[_16060]
                            _22468 = mem[mem[_9641]]
                            idx = idx + 1
                            continue 
                        if mem[mem[(32 * idx) + mem[_9641] + 32] + 44 len 20] != address(_19287):
                            _12848 = mem[96]
                            _19264 = mem[_16060]
                            _22468 = mem[mem[_9641]]
                            idx = idx + 1
                            continue 
                        require v < mem[_16064]
                        mem[(32 * v) + _16064 + 32] = mem[mem[(32 * idx) + mem[_9641] + 32] + 76 len 20]
                        _22594 = mem[_22508 + 64]
                        _25631 = mem[mem[_6428]]
                        idx = 0
                        while idx < _25631:
                            _25666 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_25666] = 0
                            mem[_25666 + 32] = 0
                            mem[_25666 + 64] = 0
                            mem[_25666 + 96] = 0
                            mem[_25666 + 128] = 0
                            require idx < mem[mem[_6428]]
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22594):
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22594):
                                    _12848 = mem[96]
                                    _19264 = mem[_16060]
                                    _22468 = mem[mem[_9641]]
                                    _25631 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19287):
                                    _12848 = mem[96]
                                    _19264 = mem[_16060]
                                    _22468 = mem[mem[_9641]]
                                    _25631 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19276):
                                    _12848 = mem[96]
                                    _19264 = mem[_16060]
                                    _22468 = mem[mem[_9641]]
                                    _25631 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                _25949 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                                _25950 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                                _26033 = mem[_22508 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _25949)
                                mem[mem[64] + 68] = Mask(112, 0, _25950)
                                require ext_code.size(address(_26033))
                                staticcall address(_26033).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _25949 << 144, Mask(112, 0, _25950)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26194 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _26253 = mem[_26194]
                                require v < mem[_16064 + (32 * _16063 - 1) + 32]
                                mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26194]
                                _12848 = mem[96]
                                _19264 = mem[_16060]
                                _22468 = mem[mem[_9641]]
                                _25631 = mem[mem[_6428]]
                                v = v + 1
                                w = _26253
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19276):
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22594):
                                    _12848 = mem[96]
                                    _19264 = mem[_16060]
                                    _22468 = mem[mem[_9641]]
                                    _25631 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19287):
                                    _12848 = mem[96]
                                    _19264 = mem[_16060]
                                    _22468 = mem[mem[_9641]]
                                    _25631 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19276):
                                    _12848 = mem[96]
                                    _19264 = mem[_16060]
                                    _22468 = mem[mem[_9641]]
                                    _25631 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                _25990 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                                _25991 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                                _26079 = mem[_22508 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _25990)
                                mem[mem[64] + 68] = Mask(112, 0, _25991)
                                require ext_code.size(address(_26079))
                                staticcall address(_26079).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _25990 << 144, Mask(112, 0, _25991)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26226 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _26282 = mem[_26226]
                                require v < mem[_16064 + (32 * _16063 - 1) + 32]
                                mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26226]
                                _12848 = mem[96]
                                _19264 = mem[_16060]
                                _22468 = mem[mem[_9641]]
                                _25631 = mem[mem[_6428]]
                                v = v + 1
                                w = _26282
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] == address(_19287):
                                _25861 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                                _25862 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                                _25916 = mem[_22508 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _25861)
                                mem[mem[64] + 68] = Mask(112, 0, _25862)
                                require ext_code.size(address(_25916))
                                staticcall address(_25916).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _25861 << 144, Mask(112, 0, _25862)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26081 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _26157 = mem[_26081]
                                require v < mem[_16064 + (32 * _16063 - 1) + 32]
                                mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26081]
                                _12848 = mem[96]
                                _19264 = mem[_16060]
                                _22468 = mem[mem[_9641]]
                                _25631 = mem[mem[_6428]]
                                v = v + 1
                                w = _26157
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22594):
                                _12848 = mem[96]
                                _19264 = mem[_16060]
                                _22468 = mem[mem[_9641]]
                                _25631 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19287):
                                _12848 = mem[96]
                                _19264 = mem[_16060]
                                _22468 = mem[mem[_9641]]
                                _25631 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19276):
                                _12848 = mem[96]
                                _19264 = mem[_16060]
                                _22468 = mem[mem[_9641]]
                                _25631 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            _26035 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                            _26036 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                            _26119 = mem[_22508 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _26035)
                            mem[mem[64] + 68] = Mask(112, 0, _26036)
                            require ext_code.size(address(_26119))
                            staticcall address(_26119).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _26035 << 144, Mask(112, 0, _26036)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26254 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26322 = mem[_26254]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26254]
                            _12848 = mem[96]
                            _19264 = mem[_16060]
                            _22468 = mem[mem[_9641]]
                            _25631 = mem[mem[_6428]]
                            v = v + 1
                            w = _26322
                            continue 
                        require ext_code.size(address(_22594))
                        staticcall address(_22594).factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if ext_call.success:
                            _25714 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25763 = mem[_25714]
                            require mem[_25714] == mem[_25714 + 12 len 20]
                            mem[mem[64] + 4] = address(_19276)
                            mem[mem[64] + 36] = address(_19287)
                            require ext_code.size(address(_25763))
                            staticcall address(_25763).0xe6a43905 with:
                                    gas gas_remaining wei
                                   args address(_19276), address(_19287)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26117 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26193 = mem[_26117]
                            require mem[_26117] == mem[_26117 + 12 len 20]
                            require ext_code.size(mem[_26117 + 12 len 20])
                            staticcall mem[_26117 + 12 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26383 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _26423 = mem[_26383]
                            require mem[_26383] == mem[_26383 + 18 len 14]
                            _26483 = mem[_26383 + 32]
                            require mem[_26383 + 32] == mem[_26383 + 50 len 14]
                            require mem[_26383 + 64] == mem[_26383 + 92 len 4]
                            require ext_code.size(address(_26193))
                            staticcall address(_26193).token0() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26718 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_26718] == mem[_26718 + 12 len 20]
                            if mem[_26718 + 12 len 20] != address(_19287):
                                _27207 = mem[_22508 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _26423)
                                mem[mem[64] + 68] = Mask(112, 0, _26483)
                                require ext_code.size(address(_27207))
                                staticcall address(_27207).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _26423 << 144, Mask(112, 0, _26483)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27535 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _27678 = mem[_27535]
                                require v < mem[_16064 + (32 * _16063 - 1) + 32]
                                mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27535]
                                _12848 = mem[96]
                                _19264 = mem[_16060]
                                _22468 = mem[mem[_9641]]
                                v = v + 1
                                w = _27678
                                continue 
                            _27293 = mem[_22508 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _26483)
                            mem[mem[64] + 68] = Mask(112, 0, _26423)
                            require ext_code.size(address(_27293))
                            staticcall address(_27293).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _26483 << 144, Mask(112, 0, _26423)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27606 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27756 = mem[_27606]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27606]
                            _12848 = mem[96]
                            _19264 = mem[_16060]
                            _22468 = mem[mem[_9641]]
                            v = v + 1
                            w = _27756
                            continue 
                        require ext_code.size(address(_22594))
                        staticcall address(_22594).FACTORY() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25794 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25858 = mem[_25794]
                        require mem[_25794] == mem[_25794 + 12 len 20]
                        mem[mem[64] + 4] = address(_19276)
                        mem[mem[64] + 36] = address(_19287)
                        require ext_code.size(address(_25858))
                        staticcall address(_25858).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_19276), address(_19287)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26155 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26225 = mem[_26155]
                        require mem[_26155] == mem[_26155 + 12 len 20]
                        require ext_code.size(mem[_26155 + 12 len 20])
                        staticcall mem[_26155 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26402 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _26445 = mem[_26402]
                        require mem[_26402] == mem[_26402 + 18 len 14]
                        _26515 = mem[_26402 + 32]
                        require mem[_26402 + 32] == mem[_26402 + 50 len 14]
                        require mem[_26402 + 64] == mem[_26402 + 92 len 4]
                        require ext_code.size(address(_26225))
                        staticcall address(_26225).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26758 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26758] == mem[_26758 + 12 len 20]
                        if mem[_26758 + 12 len 20] != address(_19287):
                            _27291 = mem[_22508 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _26445)
                            mem[mem[64] + 68] = Mask(112, 0, _26515)
                            require ext_code.size(address(_27291))
                            staticcall address(_27291).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _26445 << 144, Mask(112, 0, _26515)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27605 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27754 = mem[_27605]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27605]
                            _12848 = mem[96]
                            _19264 = mem[_16060]
                            _22468 = mem[mem[_9641]]
                            v = v + 1
                            w = _27754
                            continue 
                        _27379 = mem[_22508 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _26515)
                        mem[mem[64] + 68] = Mask(112, 0, _26445)
                        require ext_code.size(address(_27379))
                        staticcall address(_27379).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _26515 << 144, Mask(112, 0, _26445)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27677 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27835 = mem[_27677]
                        require v < mem[_16064 + (32 * _16063 - 1) + 32]
                        mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27677]
                        _12848 = mem[96]
                        _19264 = mem[_16060]
                        _22468 = mem[mem[_9641]]
                        v = v + 1
                        w = _27835
                        continue 
                    require v < mem[_16064]
                    mem[(32 * v) + _16064 + 32] = mem[_19314 + 76 len 20]
                    _22507 = mem[_19314 + 64]
                    _25629 = mem[mem[_6428]]
                    idx = 0
                    while idx < _25629:
                        _25663 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_25663] = 0
                        mem[_25663 + 32] = 0
                        mem[_25663 + 64] = 0
                        mem[_25663 + 96] = 0
                        mem[_25663 + 128] = 0
                        require idx < mem[mem[_6428]]
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22507):
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22507):
                                _12848 = mem[96]
                                _19264 = mem[_16060]
                                _25629 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19287):
                                _12848 = mem[96]
                                _19264 = mem[_16060]
                                _25629 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19276):
                                _12848 = mem[96]
                                _19264 = mem[_16060]
                                _25629 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            _25945 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                            _25946 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                            _26028 = mem[_19314 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _25945)
                            mem[mem[64] + 68] = Mask(112, 0, _25946)
                            require ext_code.size(address(_26028))
                            staticcall address(_26028).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _25945 << 144, Mask(112, 0, _25946)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26190 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26251 = mem[_26190]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26190]
                            _12848 = mem[96]
                            _19264 = mem[_16060]
                            _25629 = mem[mem[_6428]]
                            v = v + 1
                            w = _26251
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19276):
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22507):
                                _12848 = mem[96]
                                _19264 = mem[_16060]
                                _25629 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19287):
                                _12848 = mem[96]
                                _19264 = mem[_16060]
                                _25629 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19276):
                                _12848 = mem[96]
                                _19264 = mem[_16060]
                                _25629 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            _25986 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                            _25987 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                            _26075 = mem[_19314 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _25986)
                            mem[mem[64] + 68] = Mask(112, 0, _25987)
                            require ext_code.size(address(_26075))
                            staticcall address(_26075).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _25986 << 144, Mask(112, 0, _25987)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26224 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26280 = mem[_26224]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26224]
                            _12848 = mem[96]
                            _19264 = mem[_16060]
                            _25629 = mem[mem[_6428]]
                            v = v + 1
                            w = _26280
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] == address(_19287):
                            _25856 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                            _25857 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                            _25913 = mem[_19314 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _25856)
                            mem[mem[64] + 68] = Mask(112, 0, _25857)
                            require ext_code.size(address(_25913))
                            staticcall address(_25913).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _25856 << 144, Mask(112, 0, _25857)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26077 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26154 = mem[_26077]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26077]
                            _12848 = mem[96]
                            _19264 = mem[_16060]
                            _25629 = mem[mem[_6428]]
                            v = v + 1
                            w = _26154
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22507):
                            _12848 = mem[96]
                            _19264 = mem[_16060]
                            _25629 = mem[mem[_6428]]
                            idx = idx + 1
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19287):
                            _12848 = mem[96]
                            _19264 = mem[_16060]
                            _25629 = mem[mem[_6428]]
                            idx = idx + 1
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19276):
                            _12848 = mem[96]
                            _19264 = mem[_16060]
                            _25629 = mem[mem[_6428]]
                            idx = idx + 1
                            continue 
                        _26030 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                        _26031 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                        _26115 = mem[_19314 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _26030)
                        mem[mem[64] + 68] = Mask(112, 0, _26031)
                        require ext_code.size(address(_26115))
                        staticcall address(_26115).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _26030 << 144, Mask(112, 0, _26031)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26252 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26318 = mem[_26252]
                        require v < mem[_16064 + (32 * _16063 - 1) + 32]
                        mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26252]
                        _12848 = mem[96]
                        _19264 = mem[_16060]
                        _25629 = mem[mem[_6428]]
                        v = v + 1
                        w = _26318
                        continue 
                    require ext_code.size(address(_22507))
                    staticcall address(_22507).factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if ext_call.success:
                        _25711 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25762 = mem[_25711]
                        require mem[_25711] == mem[_25711 + 12 len 20]
                        mem[mem[64] + 4] = address(_19276)
                        mem[mem[64] + 36] = address(_19287)
                        require ext_code.size(address(_25762))
                        staticcall address(_25762).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_19276), address(_19287)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26113 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26189 = mem[_26113]
                        require mem[_26113] == mem[_26113 + 12 len 20]
                        require ext_code.size(mem[_26113 + 12 len 20])
                        staticcall mem[_26113 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26382 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _26422 = mem[_26382]
                        require mem[_26382] == mem[_26382 + 18 len 14]
                        _26482 = mem[_26382 + 32]
                        require mem[_26382 + 32] == mem[_26382 + 50 len 14]
                        require mem[_26382 + 64] == mem[_26382 + 92 len 4]
                        require ext_code.size(address(_26189))
                        staticcall address(_26189).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26717 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26717] == mem[_26717 + 12 len 20]
                        if mem[_26717 + 12 len 20] != address(_19287):
                            _27205 = mem[_19314 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _26422)
                            mem[mem[64] + 68] = Mask(112, 0, _26482)
                            require ext_code.size(address(_27205))
                            staticcall address(_27205).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _26422 << 144, Mask(112, 0, _26482)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27533 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27676 = mem[_27533]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27533]
                            _12848 = mem[96]
                            _19264 = mem[_16060]
                            v = v + 1
                            w = _27676
                            continue 
                        _27289 = mem[_19314 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _26482)
                        mem[mem[64] + 68] = Mask(112, 0, _26422)
                        require ext_code.size(address(_27289))
                        staticcall address(_27289).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _26482 << 144, Mask(112, 0, _26422)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27604 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27753 = mem[_27604]
                        require v < mem[_16064 + (32 * _16063 - 1) + 32]
                        mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27604]
                        _12848 = mem[96]
                        _19264 = mem[_16060]
                        v = v + 1
                        w = _27753
                        continue 
                    require ext_code.size(address(_22507))
                    staticcall address(_22507).FACTORY() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25791 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25853 = mem[_25791]
                    require mem[_25791] == mem[_25791 + 12 len 20]
                    mem[mem[64] + 4] = address(_19276)
                    mem[mem[64] + 36] = address(_19287)
                    require ext_code.size(address(_25853))
                    staticcall address(_25853).0xe6a43905 with:
                            gas gas_remaining wei
                           args address(_19276), address(_19287)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26152 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26223 = mem[_26152]
                    require mem[_26152] == mem[_26152 + 12 len 20]
                    require ext_code.size(mem[_26152 + 12 len 20])
                    staticcall mem[_26152 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26401 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _26444 = mem[_26401]
                    require mem[_26401] == mem[_26401 + 18 len 14]
                    _26514 = mem[_26401 + 32]
                    require mem[_26401 + 32] == mem[_26401 + 50 len 14]
                    require mem[_26401 + 64] == mem[_26401 + 92 len 4]
                    require ext_code.size(address(_26223))
                    staticcall address(_26223).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26757 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26757] == mem[_26757 + 12 len 20]
                    if mem[_26757 + 12 len 20] != address(_19287):
                        _27287 = mem[_19314 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _26444)
                        mem[mem[64] + 68] = Mask(112, 0, _26514)
                        require ext_code.size(address(_27287))
                        staticcall address(_27287).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _26444 << 144, Mask(112, 0, _26514)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27603 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27751 = mem[_27603]
                        require v < mem[_16064 + (32 * _16063 - 1) + 32]
                        mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27603]
                        _12848 = mem[96]
                        _19264 = mem[_16060]
                        v = v + 1
                        w = _27751
                        continue 
                    _27376 = mem[_19314 + 64]
                    mem[mem[64] + 4] = w
                    mem[mem[64] + 36] = Mask(112, 0, _26514)
                    mem[mem[64] + 68] = Mask(112, 0, _26444)
                    require ext_code.size(address(_27376))
                    staticcall address(_27376).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args w, _26514 << 144, Mask(112, 0, _26444)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27675 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27832 = mem[_27675]
                    require v < mem[_16064 + (32 * _16063 - 1) + 32]
                    mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27675]
                    _12848 = mem[96]
                    _19264 = mem[_16060]
                    v = v + 1
                    w = _27832
                    continue 
            else:
                mem[_16064 + (32 * _16063 - 1) + 64 len 32 * _16070 - 1] = call.data[calldata.size len 32 * _16070 - 1]
                _19265 = mem[_16060]
                v = 0
                w = 10^18
                while v < _19265 - 1:
                    require v < mem[_16060]
                    _19278 = mem[(32 * v) + _16060 + 32]
                    require v + 1 < mem[_16060]
                    _19289 = mem[(32 * v + 1) + _16060 + 32]
                    _19299 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_19299] = 0
                    mem[_19299 + 32] = 0
                    mem[_19299 + 64] = 0
                    _19315 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_19315] = 0
                    mem[_19315 + 32] = 0
                    mem[_19315 + 64] = 0
                    _22470 = mem[mem[_9641]]
                    idx = 0
                    while idx < _22470:
                        _22479 = mem[64]
                        mem[64] = mem[64] + 96
                        mem[_22479] = 0
                        mem[_22479 + 32] = 0
                        mem[_22479 + 64] = 0
                        require idx < mem[mem[_9641]]
                        _22511 = mem[(32 * idx) + mem[_9641] + 32]
                        if mem[mem[(32 * idx) + mem[_9641] + 32] + 12 len 20] != address(_19278):
                            _12848 = mem[96]
                            _19265 = mem[_16060]
                            _22470 = mem[mem[_9641]]
                            idx = idx + 1
                            continue 
                        if mem[mem[(32 * idx) + mem[_9641] + 32] + 44 len 20] != address(_19289):
                            _12848 = mem[96]
                            _19265 = mem[_16060]
                            _22470 = mem[mem[_9641]]
                            idx = idx + 1
                            continue 
                        require v < mem[_16064]
                        mem[(32 * v) + _16064 + 32] = mem[mem[(32 * idx) + mem[_9641] + 32] + 76 len 20]
                        _22598 = mem[_22511 + 64]
                        _25635 = mem[mem[_6428]]
                        idx = 0
                        while idx < _25635:
                            _25672 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_25672] = 0
                            mem[_25672 + 32] = 0
                            mem[_25672 + 64] = 0
                            mem[_25672 + 96] = 0
                            mem[_25672 + 128] = 0
                            require idx < mem[mem[_6428]]
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22598):
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22598):
                                    _12848 = mem[96]
                                    _19265 = mem[_16060]
                                    _22470 = mem[mem[_9641]]
                                    _25635 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19289):
                                    _12848 = mem[96]
                                    _19265 = mem[_16060]
                                    _22470 = mem[mem[_9641]]
                                    _25635 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19278):
                                    _12848 = mem[96]
                                    _19265 = mem[_16060]
                                    _22470 = mem[mem[_9641]]
                                    _25635 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                _25957 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                                _25958 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                                _26043 = mem[_22511 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _25957)
                                mem[mem[64] + 68] = Mask(112, 0, _25958)
                                require ext_code.size(address(_26043))
                                staticcall address(_26043).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _25957 << 144, Mask(112, 0, _25958)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26202 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _26257 = mem[_26202]
                                require v < mem[_16064 + (32 * _16063 - 1) + 32]
                                mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26202]
                                _12848 = mem[96]
                                _19265 = mem[_16060]
                                _22470 = mem[mem[_9641]]
                                _25635 = mem[mem[_6428]]
                                v = v + 1
                                w = _26257
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19278):
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22598):
                                    _12848 = mem[96]
                                    _19265 = mem[_16060]
                                    _22470 = mem[mem[_9641]]
                                    _25635 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19289):
                                    _12848 = mem[96]
                                    _19265 = mem[_16060]
                                    _22470 = mem[mem[_9641]]
                                    _25635 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19278):
                                    _12848 = mem[96]
                                    _19265 = mem[_16060]
                                    _22470 = mem[mem[_9641]]
                                    _25635 = mem[mem[_6428]]
                                    idx = idx + 1
                                    continue 
                                _25998 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                                _25999 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                                _26087 = mem[_22511 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _25998)
                                mem[mem[64] + 68] = Mask(112, 0, _25999)
                                require ext_code.size(address(_26087))
                                staticcall address(_26087).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _25998 << 144, Mask(112, 0, _25999)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26230 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _26286 = mem[_26230]
                                require v < mem[_16064 + (32 * _16063 - 1) + 32]
                                mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26230]
                                _12848 = mem[96]
                                _19265 = mem[_16060]
                                _22470 = mem[mem[_9641]]
                                _25635 = mem[mem[_6428]]
                                v = v + 1
                                w = _26286
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] == address(_19289):
                                _25871 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                                _25872 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                                _25922 = mem[_22511 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _25871)
                                mem[mem[64] + 68] = Mask(112, 0, _25872)
                                require ext_code.size(address(_25922))
                                staticcall address(_25922).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _25871 << 144, Mask(112, 0, _25872)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26089 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _26163 = mem[_26089]
                                require v < mem[_16064 + (32 * _16063 - 1) + 32]
                                mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26089]
                                _12848 = mem[96]
                                _19265 = mem[_16060]
                                _22470 = mem[mem[_9641]]
                                _25635 = mem[mem[_6428]]
                                v = v + 1
                                w = _26163
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22598):
                                _12848 = mem[96]
                                _19265 = mem[_16060]
                                _22470 = mem[mem[_9641]]
                                _25635 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19289):
                                _12848 = mem[96]
                                _19265 = mem[_16060]
                                _22470 = mem[mem[_9641]]
                                _25635 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19278):
                                _12848 = mem[96]
                                _19265 = mem[_16060]
                                _22470 = mem[mem[_9641]]
                                _25635 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            _26045 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                            _26046 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                            _26127 = mem[_22511 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _26045)
                            mem[mem[64] + 68] = Mask(112, 0, _26046)
                            require ext_code.size(address(_26127))
                            staticcall address(_26127).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _26045 << 144, Mask(112, 0, _26046)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26258 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26330 = mem[_26258]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26258]
                            _12848 = mem[96]
                            _19265 = mem[_16060]
                            _22470 = mem[mem[_9641]]
                            _25635 = mem[mem[_6428]]
                            v = v + 1
                            w = _26330
                            continue 
                        require ext_code.size(address(_22598))
                        staticcall address(_22598).factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if ext_call.success:
                            _25720 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25765 = mem[_25720]
                            require mem[_25720] == mem[_25720 + 12 len 20]
                            mem[mem[64] + 4] = address(_19278)
                            mem[mem[64] + 36] = address(_19289)
                            require ext_code.size(address(_25765))
                            staticcall address(_25765).0xe6a43905 with:
                                    gas gas_remaining wei
                                   args address(_19278), address(_19289)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26125 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26201 = mem[_26125]
                            require mem[_26125] == mem[_26125 + 12 len 20]
                            require ext_code.size(mem[_26125 + 12 len 20])
                            staticcall mem[_26125 + 12 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26385 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _26425 = mem[_26385]
                            require mem[_26385] == mem[_26385 + 18 len 14]
                            _26485 = mem[_26385 + 32]
                            require mem[_26385 + 32] == mem[_26385 + 50 len 14]
                            require mem[_26385 + 64] == mem[_26385 + 92 len 4]
                            require ext_code.size(address(_26201))
                            staticcall address(_26201).token0() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26720 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_26720] == mem[_26720 + 12 len 20]
                            if mem[_26720 + 12 len 20] != address(_19289):
                                _27211 = mem[_22511 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _26425)
                                mem[mem[64] + 68] = Mask(112, 0, _26485)
                                require ext_code.size(address(_27211))
                                staticcall address(_27211).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _26425 << 144, Mask(112, 0, _26485)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27539 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _27682 = mem[_27539]
                                require v < mem[_16064 + (32 * _16063 - 1) + 32]
                                mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27539]
                                _12848 = mem[96]
                                _19265 = mem[_16060]
                                _22470 = mem[mem[_9641]]
                                v = v + 1
                                w = _27682
                                continue 
                            _27301 = mem[_22511 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _26485)
                            mem[mem[64] + 68] = Mask(112, 0, _26425)
                            require ext_code.size(address(_27301))
                            staticcall address(_27301).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _26485 << 144, Mask(112, 0, _26425)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27610 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27762 = mem[_27610]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27610]
                            _12848 = mem[96]
                            _19265 = mem[_16060]
                            _22470 = mem[mem[_9641]]
                            v = v + 1
                            w = _27762
                            continue 
                        require ext_code.size(address(_22598))
                        staticcall address(_22598).FACTORY() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25800 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25868 = mem[_25800]
                        require mem[_25800] == mem[_25800 + 12 len 20]
                        mem[mem[64] + 4] = address(_19278)
                        mem[mem[64] + 36] = address(_19289)
                        require ext_code.size(address(_25868))
                        staticcall address(_25868).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_19278), address(_19289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26161 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26229 = mem[_26161]
                        require mem[_26161] == mem[_26161 + 12 len 20]
                        require ext_code.size(mem[_26161 + 12 len 20])
                        staticcall mem[_26161 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26404 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _26447 = mem[_26404]
                        require mem[_26404] == mem[_26404 + 18 len 14]
                        _26517 = mem[_26404 + 32]
                        require mem[_26404 + 32] == mem[_26404 + 50 len 14]
                        require mem[_26404 + 64] == mem[_26404 + 92 len 4]
                        require ext_code.size(address(_26229))
                        staticcall address(_26229).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26760 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26760] == mem[_26760 + 12 len 20]
                        if mem[_26760 + 12 len 20] != address(_19289):
                            _27299 = mem[_22511 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _26447)
                            mem[mem[64] + 68] = Mask(112, 0, _26517)
                            require ext_code.size(address(_27299))
                            staticcall address(_27299).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _26447 << 144, Mask(112, 0, _26517)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27609 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27760 = mem[_27609]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27609]
                            _12848 = mem[96]
                            _19265 = mem[_16060]
                            _22470 = mem[mem[_9641]]
                            v = v + 1
                            w = _27760
                            continue 
                        _27385 = mem[_22511 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _26517)
                        mem[mem[64] + 68] = Mask(112, 0, _26447)
                        require ext_code.size(address(_27385))
                        staticcall address(_27385).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _26517 << 144, Mask(112, 0, _26447)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27681 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27841 = mem[_27681]
                        require v < mem[_16064 + (32 * _16063 - 1) + 32]
                        mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27681]
                        _12848 = mem[96]
                        _19265 = mem[_16060]
                        _22470 = mem[mem[_9641]]
                        v = v + 1
                        w = _27841
                        continue 
                    require v < mem[_16064]
                    mem[(32 * v) + _16064 + 32] = mem[_19315 + 76 len 20]
                    _22510 = mem[_19315 + 64]
                    _25633 = mem[mem[_6428]]
                    idx = 0
                    while idx < _25633:
                        _25669 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_25669] = 0
                        mem[_25669 + 32] = 0
                        mem[_25669 + 64] = 0
                        mem[_25669 + 96] = 0
                        mem[_25669 + 128] = 0
                        require idx < mem[mem[_6428]]
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22510):
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22510):
                                _12848 = mem[96]
                                _19265 = mem[_16060]
                                _25633 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19289):
                                _12848 = mem[96]
                                _19265 = mem[_16060]
                                _25633 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19278):
                                _12848 = mem[96]
                                _19265 = mem[_16060]
                                _25633 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            _25953 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                            _25954 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                            _26038 = mem[_19315 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _25953)
                            mem[mem[64] + 68] = Mask(112, 0, _25954)
                            require ext_code.size(address(_26038))
                            staticcall address(_26038).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _25953 << 144, Mask(112, 0, _25954)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26198 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26255 = mem[_26198]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26198]
                            _12848 = mem[96]
                            _19265 = mem[_16060]
                            _25633 = mem[mem[_6428]]
                            v = v + 1
                            w = _26255
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19278):
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22510):
                                _12848 = mem[96]
                                _19265 = mem[_16060]
                                _25633 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19289):
                                _12848 = mem[96]
                                _19265 = mem[_16060]
                                _25633 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19278):
                                _12848 = mem[96]
                                _19265 = mem[_16060]
                                _25633 = mem[mem[_6428]]
                                idx = idx + 1
                                continue 
                            _25994 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                            _25995 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                            _26083 = mem[_19315 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _25994)
                            mem[mem[64] + 68] = Mask(112, 0, _25995)
                            require ext_code.size(address(_26083))
                            staticcall address(_26083).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _25994 << 144, Mask(112, 0, _25995)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26228 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26284 = mem[_26228]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26228]
                            _12848 = mem[96]
                            _19265 = mem[_16060]
                            _25633 = mem[mem[_6428]]
                            v = v + 1
                            w = _26284
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] == address(_19289):
                            _25866 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                            _25867 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                            _25919 = mem[_19315 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _25866)
                            mem[mem[64] + 68] = Mask(112, 0, _25867)
                            require ext_code.size(address(_25919))
                            staticcall address(_25919).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _25866 << 144, Mask(112, 0, _25867)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26085 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26160 = mem[_26085]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26085]
                            _12848 = mem[96]
                            _19265 = mem[_16060]
                            _25633 = mem[mem[_6428]]
                            v = v + 1
                            w = _26160
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 140 len 20] != address(_22510):
                            _12848 = mem[96]
                            _19265 = mem[_16060]
                            _25633 = mem[mem[_6428]]
                            idx = idx + 1
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 12 len 20] != address(_19289):
                            _12848 = mem[96]
                            _19265 = mem[_16060]
                            _25633 = mem[mem[_6428]]
                            idx = idx + 1
                            continue 
                        if mem[mem[(32 * idx) + mem[_6428] + 32] + 44 len 20] != address(_19278):
                            _12848 = mem[96]
                            _19265 = mem[_16060]
                            _25633 = mem[mem[_6428]]
                            idx = idx + 1
                            continue 
                        _26040 = mem[mem[(32 * idx) + mem[_6428] + 32] + 96]
                        _26041 = mem[mem[(32 * idx) + mem[_6428] + 32] + 64]
                        _26123 = mem[_19315 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _26040)
                        mem[mem[64] + 68] = Mask(112, 0, _26041)
                        require ext_code.size(address(_26123))
                        staticcall address(_26123).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _26040 << 144, Mask(112, 0, _26041)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26256 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26326 = mem[_26256]
                        require v < mem[_16064 + (32 * _16063 - 1) + 32]
                        mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_26256]
                        _12848 = mem[96]
                        _19265 = mem[_16060]
                        _25633 = mem[mem[_6428]]
                        v = v + 1
                        w = _26326
                        continue 
                    require ext_code.size(address(_22510))
                    staticcall address(_22510).factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if ext_call.success:
                        _25717 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25764 = mem[_25717]
                        require mem[_25717] == mem[_25717 + 12 len 20]
                        mem[mem[64] + 4] = address(_19278)
                        mem[mem[64] + 36] = address(_19289)
                        require ext_code.size(address(_25764))
                        staticcall address(_25764).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_19278), address(_19289)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26121 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26197 = mem[_26121]
                        require mem[_26121] == mem[_26121 + 12 len 20]
                        require ext_code.size(mem[_26121 + 12 len 20])
                        staticcall mem[_26121 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26384 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _26424 = mem[_26384]
                        require mem[_26384] == mem[_26384 + 18 len 14]
                        _26484 = mem[_26384 + 32]
                        require mem[_26384 + 32] == mem[_26384 + 50 len 14]
                        require mem[_26384 + 64] == mem[_26384 + 92 len 4]
                        require ext_code.size(address(_26197))
                        staticcall address(_26197).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26719 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26719] == mem[_26719 + 12 len 20]
                        if mem[_26719 + 12 len 20] != address(_19289):
                            _27209 = mem[_19315 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _26424)
                            mem[mem[64] + 68] = Mask(112, 0, _26484)
                            require ext_code.size(address(_27209))
                            staticcall address(_27209).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _26424 << 144, Mask(112, 0, _26484)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27537 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27680 = mem[_27537]
                            require v < mem[_16064 + (32 * _16063 - 1) + 32]
                            mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27537]
                            _12848 = mem[96]
                            _19265 = mem[_16060]
                            v = v + 1
                            w = _27680
                            continue 
                        _27297 = mem[_19315 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _26484)
                        mem[mem[64] + 68] = Mask(112, 0, _26424)
                        require ext_code.size(address(_27297))
                        staticcall address(_27297).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _26484 << 144, Mask(112, 0, _26424)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27608 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27759 = mem[_27608]
                        require v < mem[_16064 + (32 * _16063 - 1) + 32]
                        mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27608]
                        _12848 = mem[96]
                        _19265 = mem[_16060]
                        v = v + 1
                        w = _27759
                        continue 
                    require ext_code.size(address(_22510))
                    staticcall address(_22510).FACTORY() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25797 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25863 = mem[_25797]
                    require mem[_25797] == mem[_25797 + 12 len 20]
                    mem[mem[64] + 4] = address(_19278)
                    mem[mem[64] + 36] = address(_19289)
                    require ext_code.size(address(_25863))
                    staticcall address(_25863).0xe6a43905 with:
                            gas gas_remaining wei
                           args address(_19278), address(_19289)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26158 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26227 = mem[_26158]
                    require mem[_26158] == mem[_26158 + 12 len 20]
                    require ext_code.size(mem[_26158 + 12 len 20])
                    staticcall mem[_26158 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26403 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _26446 = mem[_26403]
                    require mem[_26403] == mem[_26403 + 18 len 14]
                    _26516 = mem[_26403 + 32]
                    require mem[_26403 + 32] == mem[_26403 + 50 len 14]
                    require mem[_26403 + 64] == mem[_26403 + 92 len 4]
                    require ext_code.size(address(_26227))
                    staticcall address(_26227).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26759 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26759] == mem[_26759 + 12 len 20]
                    if mem[_26759 + 12 len 20] != address(_19289):
                        _27295 = mem[_19315 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _26446)
                        mem[mem[64] + 68] = Mask(112, 0, _26516)
                        require ext_code.size(address(_27295))
                        staticcall address(_27295).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _26446 << 144, Mask(112, 0, _26516)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27607 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27757 = mem[_27607]
                        require v < mem[_16064 + (32 * _16063 - 1) + 32]
                        mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27607]
                        _12848 = mem[96]
                        _19265 = mem[_16060]
                        v = v + 1
                        w = _27757
                        continue 
                    _27382 = mem[_19315 + 64]
                    mem[mem[64] + 4] = w
                    mem[mem[64] + 36] = Mask(112, 0, _26516)
                    mem[mem[64] + 68] = Mask(112, 0, _26446)
                    require ext_code.size(address(_27382))
                    staticcall address(_27382).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args w, _26516 << 144, Mask(112, 0, _26446)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27679 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27838 = mem[_27679]
                    require v < mem[_16064 + (32 * _16063 - 1) + 32]
                    mem[(32 * v) + _16064 + (32 * _16063 - 1) + 64] = mem[_27679]
                    _12848 = mem[96]
                    _19265 = mem[_16060]
                    v = v + 1
                    w = _27838
                    continue 
        if w <= u:
            _12848 = mem[96]
            idx = idx + 1
            s = s
            t = t
            u = u
            continue 
        require idx < mem[96]
        _12848 = mem[96]
        idx = idx + 1
        s = _16064
        t = mem[(32 * idx) + 128]
        u = w
        continue 
    _12850 = mem[_9640 + 64]
    if not var96002:
        u = var96002
        u = var96004
        while var102002 < var102001 + 1:
            if var110001 / 10^18 != var110003:
                revert with 0, 'SafeMath: multiplication overflow'
            _39461 = mem[64]
            mem[64] = mem[64] + 64
            mem[_39461] = 26
            mem[_39461 + 32] = 'SafeMath: division by zero'
            u = var112001
            v = var112009
            while _12850:
                _39468 = mem[t]
                require mem[t] - 1 <= test266151307()
                _39470 = mem[64]
                mem[mem[64]] = mem[t] - 1
                mem[64] = mem[64] + (32 * _39468 - 1) + 32
                if not _39468 - 1:
                    _39473 = mem[t]
                    require mem[t] - 1 <= test266151307()
                    mem[_39470 + (32 * _39468 - 1) + 32] = mem[t] - 1
                    mem[64] = _39470 + (32 * _39468 - 1) + (32 * _39473 - 1) + 64
                    if not _39473 - 1:
                        _41622 = mem[t]
                        idx = 0
                        w = u / _12850
                        while idx < _41622 - 1:
                            require idx < mem[t]
                            _41632 = mem[(32 * idx) + t + 32]
                            require idx + 1 < mem[t]
                            _41641 = mem[(32 * idx + 1) + t + 32]
                            _41646 = mem[64]
                            mem[64] = mem[64] + 96
                            mem[_41646] = 0
                            mem[_41646 + 32] = 0
                            mem[_41646 + 64] = 0
                            _41664 = mem[64]
                            mem[64] = mem[64] + 96
                            mem[_41664] = 0
                            mem[_41664 + 32] = 0
                            mem[_41664 + 64] = 0
                            _43858 = mem[mem[_9641]]
                            s = 0
                            while s < _43858:
                                _43883 = mem[64]
                                mem[64] = mem[64] + 96
                                mem[_43883] = 0
                                mem[_43883 + 32] = 0
                                mem[_43883 + 64] = 0
                                require s < mem[mem[_9641]]
                                _43921 = mem[(32 * s) + mem[_9641] + 32]
                                if mem[mem[(32 * s) + mem[_9641] + 32] + 12 len 20] != address(_41632):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41622 = mem[t]
                                    _43858 = mem[mem[_9641]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_9641] + 32] + 44 len 20] != address(_41641):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41622 = mem[t]
                                    _43858 = mem[mem[_9641]]
                                    s = s + 1
                                    continue 
                                require idx < mem[_39470]
                                mem[(32 * idx) + _39470 + 32] = mem[mem[(32 * s) + mem[_9641] + 32] + 76 len 20]
                                _44032 = mem[_43921 + 64]
                                _45996 = mem[mem[_6428]]
                                s = 0
                                while s < _45996:
                                    _46043 = mem[64]
                                    mem[64] = mem[64] + 160
                                    mem[_46043] = 0
                                    mem[_46043 + 32] = 0
                                    mem[_46043 + 64] = 0
                                    mem[_46043 + 96] = 0
                                    mem[_46043 + 128] = 0
                                    require s < mem[mem[_6428]]
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_44032):
                                        if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_44032):
                                            _39461 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_39461] = 26
                                            mem[_39461 + 32] = 'SafeMath: division by zero'
                                            _41622 = mem[t]
                                            _43858 = mem[mem[_9641]]
                                            _45996 = mem[mem[_6428]]
                                            s = s + 1
                                            continue 
                                        if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41641):
                                            _39461 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_39461] = 26
                                            mem[_39461 + 32] = 'SafeMath: division by zero'
                                            _41622 = mem[t]
                                            _43858 = mem[mem[_9641]]
                                            _45996 = mem[mem[_6428]]
                                            s = s + 1
                                            continue 
                                        if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41632):
                                            _39461 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_39461] = 26
                                            mem[_39461 + 32] = 'SafeMath: division by zero'
                                            _41622 = mem[t]
                                            _43858 = mem[mem[_9641]]
                                            _45996 = mem[mem[_6428]]
                                            s = s + 1
                                            continue 
                                        _46397 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                        _46398 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                        _46502 = mem[_43921 + 64]
                                        mem[mem[64] + 4] = w
                                        mem[mem[64] + 36] = Mask(112, 0, _46397)
                                        mem[mem[64] + 68] = Mask(112, 0, _46398)
                                        require ext_code.size(address(_46502))
                                        staticcall address(_46502).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                                gas gas_remaining wei
                                               args w, _46397 << 144, Mask(112, 0, _46398)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _46741 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _46842 = mem[_46741]
                                        require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                        mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46741]
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41622 = mem[t]
                                        _43858 = mem[mem[_9641]]
                                        _45996 = mem[mem[_6428]]
                                        idx = idx + 1
                                        w = _46842
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41632):
                                        if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_44032):
                                            _39461 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_39461] = 26
                                            mem[_39461 + 32] = 'SafeMath: division by zero'
                                            _41622 = mem[t]
                                            _43858 = mem[mem[_9641]]
                                            _45996 = mem[mem[_6428]]
                                            s = s + 1
                                            continue 
                                        if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41641):
                                            _39461 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_39461] = 26
                                            mem[_39461 + 32] = 'SafeMath: division by zero'
                                            _41622 = mem[t]
                                            _43858 = mem[mem[_9641]]
                                            _45996 = mem[mem[_6428]]
                                            s = s + 1
                                            continue 
                                        if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41632):
                                            _39461 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_39461] = 26
                                            mem[_39461 + 32] = 'SafeMath: division by zero'
                                            _41622 = mem[t]
                                            _43858 = mem[mem[_9641]]
                                            _45996 = mem[mem[_6428]]
                                            s = s + 1
                                            continue 
                                        _46453 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                        _46454 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                        _46565 = mem[_43921 + 64]
                                        mem[mem[64] + 4] = w
                                        mem[mem[64] + 36] = Mask(112, 0, _46453)
                                        mem[mem[64] + 68] = Mask(112, 0, _46454)
                                        require ext_code.size(address(_46565))
                                        staticcall address(_46565).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                                gas gas_remaining wei
                                               args w, _46453 << 144, Mask(112, 0, _46454)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _46803 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _46883 = mem[_46803]
                                        require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                        mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46803]
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41622 = mem[t]
                                        _43858 = mem[mem[_9641]]
                                        _45996 = mem[mem[_6428]]
                                        idx = idx + 1
                                        w = _46883
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] == address(_41641):
                                        _46276 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                        _46277 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                        _46348 = mem[_43921 + 64]
                                        mem[mem[64] + 4] = w
                                        mem[mem[64] + 36] = Mask(112, 0, _46276)
                                        mem[mem[64] + 68] = Mask(112, 0, _46277)
                                        require ext_code.size(address(_46348))
                                        staticcall address(_46348).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                                gas gas_remaining wei
                                               args w, _46276 << 144, Mask(112, 0, _46277)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _46567 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _46681 = mem[_46567]
                                        require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                        mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46567]
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41622 = mem[t]
                                        _43858 = mem[mem[_9641]]
                                        _45996 = mem[mem[_6428]]
                                        idx = idx + 1
                                        w = _46681
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_44032):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41622 = mem[t]
                                        _43858 = mem[mem[_9641]]
                                        _45996 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41641):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41622 = mem[t]
                                        _43858 = mem[mem[_9641]]
                                        _45996 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41632):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41622 = mem[t]
                                        _43858 = mem[mem[_9641]]
                                        _45996 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    _46504 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                    _46505 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                    _46618 = mem[_43921 + 64]
                                    mem[mem[64] + 4] = w
                                    mem[mem[64] + 36] = Mask(112, 0, _46504)
                                    mem[mem[64] + 68] = Mask(112, 0, _46505)
                                    require ext_code.size(address(_46618))
                                    staticcall address(_46618).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                            gas gas_remaining wei
                                           args w, _46504 << 144, Mask(112, 0, _46505)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _46843 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _46923 = mem[_46843]
                                    require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                    mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46843]
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41622 = mem[t]
                                    _43858 = mem[mem[_9641]]
                                    _45996 = mem[mem[_6428]]
                                    idx = idx + 1
                                    w = _46923
                                    continue 
                                require ext_code.size(address(_44032))
                                staticcall address(_44032).factory() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if ext_call.success:
                                    _46106 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _46177 = mem[_46106]
                                    require mem[_46106] == mem[_46106 + 12 len 20]
                                    mem[mem[64] + 4] = address(_41632)
                                    mem[mem[64] + 36] = address(_41641)
                                    require ext_code.size(address(_46177))
                                    staticcall address(_46177).0xe6a43905 with:
                                            gas gas_remaining wei
                                           args address(_41632), address(_41641)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _46616 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _46740 = mem[_46616]
                                    require mem[_46616] == mem[_46616 + 12 len 20]
                                    require ext_code.size(mem[_46616 + 12 len 20])
                                    staticcall mem[_46616 + 12 len 20].getReserves() with:
                                            gas gas_remaining wei
                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _47037 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 96
                                    _47113 = mem[_47037]
                                    require mem[_47037] == mem[_47037 + 18 len 14]
                                    _47225 = mem[_47037 + 32]
                                    require mem[_47037 + 32] == mem[_47037 + 50 len 14]
                                    require mem[_47037 + 64] == mem[_47037 + 92 len 4]
                                    require ext_code.size(address(_46740))
                                    staticcall address(_46740).token0() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _47481 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_47481] == mem[_47481 + 12 len 20]
                                    if mem[_47481 + 12 len 20] != address(_41641):
                                        _47678 = mem[_43921 + 64]
                                        mem[mem[64] + 4] = w
                                        mem[mem[64] + 36] = Mask(112, 0, _47113)
                                        mem[mem[64] + 68] = Mask(112, 0, _47225)
                                        require ext_code.size(address(_47678))
                                        staticcall address(_47678).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                                gas gas_remaining wei
                                               args w, _47113 << 144, Mask(112, 0, _47225)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _47803 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _47847 = mem[_47803]
                                        require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                        mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47803]
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41622 = mem[t]
                                        _43858 = mem[mem[_9641]]
                                        idx = idx + 1
                                        w = _47847
                                        continue 
                                    _47706 = mem[_43921 + 64]
                                    mem[mem[64] + 4] = w
                                    mem[mem[64] + 36] = Mask(112, 0, _47225)
                                    mem[mem[64] + 68] = Mask(112, 0, _47113)
                                    require ext_code.size(address(_47706))
                                    staticcall address(_47706).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                            gas gas_remaining wei
                                           args w, _47225 << 144, Mask(112, 0, _47113)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _47823 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _47873 = mem[_47823]
                                    require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                    mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47823]
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41622 = mem[t]
                                    _43858 = mem[mem[_9641]]
                                    idx = idx + 1
                                    w = _47873
                                    continue 
                                require ext_code.size(address(_44032))
                                staticcall address(_44032).FACTORY() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _46203 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46273 = mem[_46203]
                                require mem[_46203] == mem[_46203 + 12 len 20]
                                mem[mem[64] + 4] = address(_41632)
                                mem[mem[64] + 36] = address(_41641)
                                require ext_code.size(address(_46273))
                                staticcall address(_46273).0xe6a43905 with:
                                        gas gas_remaining wei
                                       args address(_41632), address(_41641)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _46679 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46802 = mem[_46679]
                                require mem[_46679] == mem[_46679 + 12 len 20]
                                require ext_code.size(mem[_46679 + 12 len 20])
                                staticcall mem[_46679 + 12 len 20].getReserves() with:
                                        gas gas_remaining wei
                                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47073 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 96
                                _47149 = mem[_47073]
                                require mem[_47073] == mem[_47073 + 18 len 14]
                                _47269 = mem[_47073 + 32]
                                require mem[_47073 + 32] == mem[_47073 + 50 len 14]
                                require mem[_47073 + 64] == mem[_47073 + 92 len 4]
                                require ext_code.size(address(_46802))
                                staticcall address(_46802).token0() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47521 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_47521] == mem[_47521 + 12 len 20]
                                if mem[_47521 + 12 len 20] != address(_41641):
                                    _47704 = mem[_43921 + 64]
                                    mem[mem[64] + 4] = w
                                    mem[mem[64] + 36] = Mask(112, 0, _47149)
                                    mem[mem[64] + 68] = Mask(112, 0, _47269)
                                    require ext_code.size(address(_47704))
                                    staticcall address(_47704).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                            gas gas_remaining wei
                                           args w, _47149 << 144, Mask(112, 0, _47269)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _47822 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _47871 = mem[_47822]
                                    require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                    mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47822]
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41622 = mem[t]
                                    _43858 = mem[mem[_9641]]
                                    idx = idx + 1
                                    w = _47871
                                    continue 
                                _47743 = mem[_43921 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _47269)
                                mem[mem[64] + 68] = Mask(112, 0, _47149)
                                require ext_code.size(address(_47743))
                                staticcall address(_47743).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _47269 << 144, Mask(112, 0, _47149)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47846 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _47904 = mem[_47846]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47846]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41622 = mem[t]
                                _43858 = mem[mem[_9641]]
                                idx = idx + 1
                                w = _47904
                                continue 
                            require idx < mem[_39470]
                            mem[(32 * idx) + _39470 + 32] = mem[_41664 + 76 len 20]
                            _43920 = mem[_41664 + 64]
                            _45994 = mem[mem[_6428]]
                            s = 0
                            while s < _45994:
                                _46040 = mem[64]
                                mem[64] = mem[64] + 160
                                mem[_46040] = 0
                                mem[_46040 + 32] = 0
                                mem[_46040 + 64] = 0
                                mem[_46040 + 96] = 0
                                mem[_46040 + 128] = 0
                                require s < mem[mem[_6428]]
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_43920):
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_43920):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41622 = mem[t]
                                        _45994 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41641):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41622 = mem[t]
                                        _45994 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41632):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41622 = mem[t]
                                        _45994 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    _46393 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                    _46394 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                    _46497 = mem[_41664 + 64]
                                    mem[mem[64] + 4] = w
                                    mem[mem[64] + 36] = Mask(112, 0, _46393)
                                    mem[mem[64] + 68] = Mask(112, 0, _46394)
                                    require ext_code.size(address(_46497))
                                    staticcall address(_46497).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                            gas gas_remaining wei
                                           args w, _46393 << 144, Mask(112, 0, _46394)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _46737 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _46840 = mem[_46737]
                                    require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                    mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46737]
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41622 = mem[t]
                                    _45994 = mem[mem[_6428]]
                                    idx = idx + 1
                                    w = _46840
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41632):
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_43920):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41622 = mem[t]
                                        _45994 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41641):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41622 = mem[t]
                                        _45994 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41632):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41622 = mem[t]
                                        _45994 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    _46449 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                    _46450 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                    _46561 = mem[_41664 + 64]
                                    mem[mem[64] + 4] = w
                                    mem[mem[64] + 36] = Mask(112, 0, _46449)
                                    mem[mem[64] + 68] = Mask(112, 0, _46450)
                                    require ext_code.size(address(_46561))
                                    staticcall address(_46561).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                            gas gas_remaining wei
                                           args w, _46449 << 144, Mask(112, 0, _46450)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _46801 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _46881 = mem[_46801]
                                    require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                    mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46801]
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41622 = mem[t]
                                    _45994 = mem[mem[_6428]]
                                    idx = idx + 1
                                    w = _46881
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] == address(_41641):
                                    _46271 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                    _46272 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                    _46345 = mem[_41664 + 64]
                                    mem[mem[64] + 4] = w
                                    mem[mem[64] + 36] = Mask(112, 0, _46271)
                                    mem[mem[64] + 68] = Mask(112, 0, _46272)
                                    require ext_code.size(address(_46345))
                                    staticcall address(_46345).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                            gas gas_remaining wei
                                           args w, _46271 << 144, Mask(112, 0, _46272)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _46563 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _46678 = mem[_46563]
                                    require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                    mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46563]
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41622 = mem[t]
                                    _45994 = mem[mem[_6428]]
                                    idx = idx + 1
                                    w = _46678
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_43920):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41622 = mem[t]
                                    _45994 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41641):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41622 = mem[t]
                                    _45994 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41632):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41622 = mem[t]
                                    _45994 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _46499 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _46500 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _46614 = mem[_41664 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _46499)
                                mem[mem[64] + 68] = Mask(112, 0, _46500)
                                require ext_code.size(address(_46614))
                                staticcall address(_46614).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _46499 << 144, Mask(112, 0, _46500)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _46841 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46919 = mem[_46841]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46841]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41622 = mem[t]
                                _45994 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _46919
                                continue 
                            require ext_code.size(address(_43920))
                            staticcall address(_43920).factory() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if ext_call.success:
                                _46103 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46176 = mem[_46103]
                                require mem[_46103] == mem[_46103 + 12 len 20]
                                mem[mem[64] + 4] = address(_41632)
                                mem[mem[64] + 36] = address(_41641)
                                require ext_code.size(address(_46176))
                                staticcall address(_46176).0xe6a43905 with:
                                        gas gas_remaining wei
                                       args address(_41632), address(_41641)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _46612 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46736 = mem[_46612]
                                require mem[_46612] == mem[_46612 + 12 len 20]
                                require ext_code.size(mem[_46612 + 12 len 20])
                                staticcall mem[_46612 + 12 len 20].getReserves() with:
                                        gas gas_remaining wei
                                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47036 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 96
                                _47112 = mem[_47036]
                                require mem[_47036] == mem[_47036 + 18 len 14]
                                _47224 = mem[_47036 + 32]
                                require mem[_47036 + 32] == mem[_47036 + 50 len 14]
                                require mem[_47036 + 64] == mem[_47036 + 92 len 4]
                                require ext_code.size(address(_46736))
                                staticcall address(_46736).token0() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47480 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_47480] == mem[_47480 + 12 len 20]
                                if mem[_47480 + 12 len 20] != address(_41641):
                                    _47676 = mem[_41664 + 64]
                                    mem[mem[64] + 4] = w
                                    mem[mem[64] + 36] = Mask(112, 0, _47112)
                                    mem[mem[64] + 68] = Mask(112, 0, _47224)
                                    require ext_code.size(address(_47676))
                                    staticcall address(_47676).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                            gas gas_remaining wei
                                           args w, _47112 << 144, Mask(112, 0, _47224)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _47801 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _47845 = mem[_47801]
                                    require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                    mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47801]
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41622 = mem[t]
                                    idx = idx + 1
                                    w = _47845
                                    continue 
                                _47702 = mem[_41664 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _47224)
                                mem[mem[64] + 68] = Mask(112, 0, _47112)
                                require ext_code.size(address(_47702))
                                staticcall address(_47702).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _47224 << 144, Mask(112, 0, _47112)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47821 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _47870 = mem[_47821]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47821]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41622 = mem[t]
                                idx = idx + 1
                                w = _47870
                                continue 
                            require ext_code.size(address(_43920))
                            staticcall address(_43920).FACTORY() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _46200 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46268 = mem[_46200]
                            require mem[_46200] == mem[_46200 + 12 len 20]
                            mem[mem[64] + 4] = address(_41632)
                            mem[mem[64] + 36] = address(_41641)
                            require ext_code.size(address(_46268))
                            staticcall address(_46268).0xe6a43905 with:
                                    gas gas_remaining wei
                                   args address(_41632), address(_41641)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _46676 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46800 = mem[_46676]
                            require mem[_46676] == mem[_46676 + 12 len 20]
                            require ext_code.size(mem[_46676 + 12 len 20])
                            staticcall mem[_46676 + 12 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47072 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _47148 = mem[_47072]
                            require mem[_47072] == mem[_47072 + 18 len 14]
                            _47268 = mem[_47072 + 32]
                            require mem[_47072 + 32] == mem[_47072 + 50 len 14]
                            require mem[_47072 + 64] == mem[_47072 + 92 len 4]
                            require ext_code.size(address(_46800))
                            staticcall address(_46800).token0() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47520 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_47520] == mem[_47520 + 12 len 20]
                            if mem[_47520 + 12 len 20] != address(_41641):
                                _47700 = mem[_41664 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _47148)
                                mem[mem[64] + 68] = Mask(112, 0, _47268)
                                require ext_code.size(address(_47700))
                                staticcall address(_47700).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _47148 << 144, Mask(112, 0, _47268)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47820 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _47868 = mem[_47820]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47820]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41622 = mem[t]
                                idx = idx + 1
                                w = _47868
                                continue 
                            _47740 = mem[_41664 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _47268)
                            mem[mem[64] + 68] = Mask(112, 0, _47148)
                            require ext_code.size(address(_47740))
                            staticcall address(_47740).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _47268 << 144, Mask(112, 0, _47148)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47844 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _47901 = mem[_47844]
                            require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                            mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47844]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41622 = mem[t]
                            idx = idx + 1
                            w = _47901
                            continue 
                        if u / _12850 > w:
                            _41653 = mem[64]
                            mem[mem[64]] = 0
                            mem[mem[64] + 32] = 0
                            mem[mem[64] + 64] = 160
                            _41675 = mem[t]
                            mem[mem[64] + 160] = mem[t]
                            idx = 0
                            u = t + 32
                            v = mem[64] + 192
                            while idx < _41675:
                                mem[v] = mem[u + 12 len 20]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                idx = idx + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_41653 + 96] = (32 * _41675) + 192
                            _43891 = mem[s]
                            mem[_41653 + (32 * _41675) + 192] = mem[s]
                            idx = 0
                            t = s + 32
                            u = _41653 + (32 * _41675) + 224
                            while idx < _43891:
                                mem[u] = mem[t + 12 len 20]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_41653 + 128] = (32 * _41675) + (32 * _43891) + 224
                            _46069 = mem[96]
                            mem[_41653 + (32 * _41675) + (32 * _43891) + 224] = mem[96]
                            idx = 0
                            s = 128
                            t = _41653 + (32 * _41675) + (32 * _43891) + 256
                            while idx < _46069:
                                mem[t] = mem[s]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _41653 + (32 * _41675) + (32 * _43891) + (32 * _46069) + -mem[64] + 256
                        if w - (u / _12850) < 0:
                            _41663 = mem[64]
                            mem[mem[64]] = 0
                            mem[mem[64] + 32] = 0
                            mem[mem[64] + 64] = 160
                            _41680 = mem[t]
                            mem[mem[64] + 160] = mem[t]
                            idx = 0
                            v = t + 32
                            w = mem[64] + 192
                            while idx < _41680:
                                mem[w] = mem[v + 12 len 20]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                idx = idx + 1
                                v = v + 32
                                w = w + 32
                                continue 
                            mem[_41663 + 96] = (32 * _41680) + 192
                            _43890 = mem[s]
                            mem[_41663 + (32 * _41680) + 192] = mem[s]
                            idx = 0
                            t = s + 32
                            u = _41663 + (32 * _41680) + 224
                            while idx < _43890:
                                mem[u] = mem[t + 12 len 20]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_41663 + 128] = (32 * _41680) + (32 * _43890) + 224
                            _46068 = mem[96]
                            mem[_41663 + (32 * _41680) + (32 * _43890) + 224] = mem[96]
                            idx = 0
                            s = 128
                            t = _41663 + (32 * _41680) + (32 * _43890) + 256
                            while idx < _46068:
                                mem[t] = mem[s]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _41663 + (32 * _41680) + (32 * _43890) + (32 * _46068) + -mem[64] + 256
                        if w - (u / _12850) <= 0:
                            _41652 = mem[_9640 + 32]
                            if not mem[_9640 + 32]:
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                u = _41652
                                u = v + 1
                                continue 
                            if _12850 * mem[_9640 + 32] / mem[_9640 + 32] != _12850:
                                revert with 0, 'SafeMath: multiplication overflow'
                            if v < _12850 * mem[_9640 + 32]:
                                if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                u = (10^18 * v) + 10^18
                                v = v + 1
                                continue 
                            _41770 = mem[64]
                            mem[mem[64]] = 0
                            mem[mem[64] + 32] = 0
                            mem[mem[64] + 64] = 160
                            _41809 = mem[t]
                            mem[mem[64] + 160] = mem[t]
                            idx = 0
                            u = t + 32
                            v = mem[64] + 192
                            while idx < _41809:
                                mem[v] = mem[u + 12 len 20]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                idx = idx + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_41770 + 96] = (32 * _41809) + 192
                            _43888 = mem[s]
                            mem[_41770 + (32 * _41809) + 192] = mem[s]
                            idx = 0
                            t = s + 32
                            u = _41770 + (32 * _41809) + 224
                            while idx < _43888:
                                mem[u] = mem[t + 12 len 20]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                idx = idx + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_41770 + 128] = (32 * _41809) + (32 * _43888) + 224
                            _46066 = mem[96]
                            mem[_41770 + (32 * _41809) + (32 * _43888) + 224] = mem[96]
                            idx = 0
                            s = 128
                            t = _41770 + (32 * _41809) + (32 * _43888) + 256
                            while idx < _46066:
                                mem[t] = mem[s]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _41770 + (32 * _41809) + (32 * _43888) + (32 * _46066) + -mem[64] + 256
                        _41662 = mem[_9640 + 32]
                        if not mem[_9640 + 32]:
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            u = _41662
                            u = v + 1
                            continue 
                        if _12850 * mem[_9640 + 32] / mem[_9640 + 32] != _12850:
                            revert with 0, 'SafeMath: multiplication overflow'
                        if v < _12850 * mem[_9640 + 32]:
                            if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                revert with 0, 'SafeMath: multiplication overflow'
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            u = (10^18 * v) + 10^18
                            v = v + 1
                            continue 
                        _41788 = mem[64]
                        mem[mem[64]] = w - (u / _12850)
                        mem[mem[64] + 32] = u / _12850
                        mem[mem[64] + 64] = 160
                        _41824 = mem[t]
                        mem[mem[64] + 160] = mem[t]
                        idx = 0
                        u = t + 32
                        v = mem[64] + 192
                        while idx < _41824:
                            mem[v] = mem[u + 12 len 20]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_41788 + 96] = (32 * _41824) + 192
                        _43889 = mem[s]
                        mem[_41788 + (32 * _41824) + 192] = mem[s]
                        idx = 0
                        t = s + 32
                        u = _41788 + (32 * _41824) + 224
                        while idx < _43889:
                            mem[u] = mem[t + 12 len 20]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_41788 + 128] = (32 * _41824) + (32 * _43889) + 224
                        _46067 = mem[_39470 + (32 * _39468 - 1) + 32]
                        mem[_41788 + (32 * _41824) + (32 * _43889) + 224] = mem[_39470 + (32 * _39468 - 1) + 32]
                        idx = 0
                        s = _39470 + (32 * _39468 - 1) + 64
                        t = _41788 + (32 * _41824) + (32 * _43889) + 256
                        while idx < _46067:
                            mem[t] = mem[s]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _41788 + (32 * _41824) + (32 * _43889) + (32 * _46067) + -mem[64] + 256
                    mem[_39470 + (32 * _39468 - 1) + 64 len 32 * _39473 - 1] = call.data[calldata.size len 32 * _39473 - 1]
                    _41623 = mem[t]
                    idx = 0
                    w = u / _12850
                    while idx < _41623 - 1:
                        require idx < mem[t]
                        _41634 = mem[(32 * idx) + t + 32]
                        require idx + 1 < mem[t]
                        _41642 = mem[(32 * idx + 1) + t + 32]
                        _41647 = mem[64]
                        mem[64] = mem[64] + 96
                        mem[_41647] = 0
                        mem[_41647 + 32] = 0
                        mem[_41647 + 64] = 0
                        _41667 = mem[64]
                        mem[64] = mem[64] + 96
                        mem[_41667] = 0
                        mem[_41667 + 32] = 0
                        mem[_41667 + 64] = 0
                        _43860 = mem[mem[_9641]]
                        s = 0
                        while s < _43860:
                            _43884 = mem[64]
                            mem[64] = mem[64] + 96
                            mem[_43884] = 0
                            mem[_43884 + 32] = 0
                            mem[_43884 + 64] = 0
                            require s < mem[mem[_9641]]
                            _43924 = mem[(32 * s) + mem[_9641] + 32]
                            if mem[mem[(32 * s) + mem[_9641] + 32] + 12 len 20] != address(_41634):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41623 = mem[t]
                                _43860 = mem[mem[_9641]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_9641] + 32] + 44 len 20] != address(_41642):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41623 = mem[t]
                                _43860 = mem[mem[_9641]]
                                s = s + 1
                                continue 
                            require idx < mem[_39470]
                            mem[(32 * idx) + _39470 + 32] = mem[mem[(32 * s) + mem[_9641] + 32] + 76 len 20]
                            _44036 = mem[_43924 + 64]
                            _46000 = mem[mem[_6428]]
                            s = 0
                            while s < _46000:
                                _46049 = mem[64]
                                mem[64] = mem[64] + 160
                                mem[_46049] = 0
                                mem[_46049 + 32] = 0
                                mem[_46049 + 64] = 0
                                mem[_46049 + 96] = 0
                                mem[_46049 + 128] = 0
                                require s < mem[mem[_6428]]
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_44036):
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_44036):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41623 = mem[t]
                                        _43860 = mem[mem[_9641]]
                                        _46000 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41642):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41623 = mem[t]
                                        _43860 = mem[mem[_9641]]
                                        _46000 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41634):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41623 = mem[t]
                                        _43860 = mem[mem[_9641]]
                                        _46000 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    _46405 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                    _46406 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                    _46512 = mem[_43924 + 64]
                                    mem[mem[64] + 4] = w
                                    mem[mem[64] + 36] = Mask(112, 0, _46405)
                                    mem[mem[64] + 68] = Mask(112, 0, _46406)
                                    require ext_code.size(address(_46512))
                                    staticcall address(_46512).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                            gas gas_remaining wei
                                           args w, _46405 << 144, Mask(112, 0, _46406)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _46749 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _46846 = mem[_46749]
                                    require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                    mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46749]
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41623 = mem[t]
                                    _43860 = mem[mem[_9641]]
                                    _46000 = mem[mem[_6428]]
                                    idx = idx + 1
                                    w = _46846
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41634):
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_44036):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41623 = mem[t]
                                        _43860 = mem[mem[_9641]]
                                        _46000 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41642):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41623 = mem[t]
                                        _43860 = mem[mem[_9641]]
                                        _46000 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41634):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41623 = mem[t]
                                        _43860 = mem[mem[_9641]]
                                        _46000 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    _46461 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                    _46462 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                    _46573 = mem[_43924 + 64]
                                    mem[mem[64] + 4] = w
                                    mem[mem[64] + 36] = Mask(112, 0, _46461)
                                    mem[mem[64] + 68] = Mask(112, 0, _46462)
                                    require ext_code.size(address(_46573))
                                    staticcall address(_46573).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                            gas gas_remaining wei
                                           args w, _46461 << 144, Mask(112, 0, _46462)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _46807 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _46887 = mem[_46807]
                                    require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                    mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46807]
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41623 = mem[t]
                                    _43860 = mem[mem[_9641]]
                                    _46000 = mem[mem[_6428]]
                                    idx = idx + 1
                                    w = _46887
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] == address(_41642):
                                    _46286 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                    _46287 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                    _46354 = mem[_43924 + 64]
                                    mem[mem[64] + 4] = w
                                    mem[mem[64] + 36] = Mask(112, 0, _46286)
                                    mem[mem[64] + 68] = Mask(112, 0, _46287)
                                    require ext_code.size(address(_46354))
                                    staticcall address(_46354).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                            gas gas_remaining wei
                                           args w, _46286 << 144, Mask(112, 0, _46287)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _46575 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _46687 = mem[_46575]
                                    require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                    mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46575]
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41623 = mem[t]
                                    _43860 = mem[mem[_9641]]
                                    _46000 = mem[mem[_6428]]
                                    idx = idx + 1
                                    w = _46687
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_44036):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41623 = mem[t]
                                    _43860 = mem[mem[_9641]]
                                    _46000 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41642):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41623 = mem[t]
                                    _43860 = mem[mem[_9641]]
                                    _46000 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41634):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41623 = mem[t]
                                    _43860 = mem[mem[_9641]]
                                    _46000 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _46514 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _46515 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _46626 = mem[_43924 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _46514)
                                mem[mem[64] + 68] = Mask(112, 0, _46515)
                                require ext_code.size(address(_46626))
                                staticcall address(_46626).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _46514 << 144, Mask(112, 0, _46515)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _46847 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46931 = mem[_46847]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46847]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41623 = mem[t]
                                _43860 = mem[mem[_9641]]
                                _46000 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _46931
                                continue 
                            require ext_code.size(address(_44036))
                            staticcall address(_44036).factory() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if ext_call.success:
                                _46112 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46179 = mem[_46112]
                                require mem[_46112] == mem[_46112 + 12 len 20]
                                mem[mem[64] + 4] = address(_41634)
                                mem[mem[64] + 36] = address(_41642)
                                require ext_code.size(address(_46179))
                                staticcall address(_46179).0xe6a43905 with:
                                        gas gas_remaining wei
                                       args address(_41634), address(_41642)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _46624 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46748 = mem[_46624]
                                require mem[_46624] == mem[_46624 + 12 len 20]
                                require ext_code.size(mem[_46624 + 12 len 20])
                                staticcall mem[_46624 + 12 len 20].getReserves() with:
                                        gas gas_remaining wei
                                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47039 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 96
                                _47115 = mem[_47039]
                                require mem[_47039] == mem[_47039 + 18 len 14]
                                _47227 = mem[_47039 + 32]
                                require mem[_47039 + 32] == mem[_47039 + 50 len 14]
                                require mem[_47039 + 64] == mem[_47039 + 92 len 4]
                                require ext_code.size(address(_46748))
                                staticcall address(_46748).token0() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47483 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_47483] == mem[_47483 + 12 len 20]
                                if mem[_47483 + 12 len 20] != address(_41642):
                                    _47682 = mem[_43924 + 64]
                                    mem[mem[64] + 4] = w
                                    mem[mem[64] + 36] = Mask(112, 0, _47115)
                                    mem[mem[64] + 68] = Mask(112, 0, _47227)
                                    require ext_code.size(address(_47682))
                                    staticcall address(_47682).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                            gas gas_remaining wei
                                           args w, _47115 << 144, Mask(112, 0, _47227)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _47807 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _47851 = mem[_47807]
                                    require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                    mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47807]
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41623 = mem[t]
                                    _43860 = mem[mem[_9641]]
                                    idx = idx + 1
                                    w = _47851
                                    continue 
                                _47714 = mem[_43924 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _47227)
                                mem[mem[64] + 68] = Mask(112, 0, _47115)
                                require ext_code.size(address(_47714))
                                staticcall address(_47714).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _47227 << 144, Mask(112, 0, _47115)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47827 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _47879 = mem[_47827]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47827]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41623 = mem[t]
                                _43860 = mem[mem[_9641]]
                                idx = idx + 1
                                w = _47879
                                continue 
                            require ext_code.size(address(_44036))
                            staticcall address(_44036).FACTORY() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _46213 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46283 = mem[_46213]
                            require mem[_46213] == mem[_46213 + 12 len 20]
                            mem[mem[64] + 4] = address(_41634)
                            mem[mem[64] + 36] = address(_41642)
                            require ext_code.size(address(_46283))
                            staticcall address(_46283).0xe6a43905 with:
                                    gas gas_remaining wei
                                   args address(_41634), address(_41642)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _46685 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46806 = mem[_46685]
                            require mem[_46685] == mem[_46685 + 12 len 20]
                            require ext_code.size(mem[_46685 + 12 len 20])
                            staticcall mem[_46685 + 12 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47075 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _47151 = mem[_47075]
                            require mem[_47075] == mem[_47075 + 18 len 14]
                            _47271 = mem[_47075 + 32]
                            require mem[_47075 + 32] == mem[_47075 + 50 len 14]
                            require mem[_47075 + 64] == mem[_47075 + 92 len 4]
                            require ext_code.size(address(_46806))
                            staticcall address(_46806).token0() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47523 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_47523] == mem[_47523 + 12 len 20]
                            if mem[_47523 + 12 len 20] != address(_41642):
                                _47712 = mem[_43924 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _47151)
                                mem[mem[64] + 68] = Mask(112, 0, _47271)
                                require ext_code.size(address(_47712))
                                staticcall address(_47712).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _47151 << 144, Mask(112, 0, _47271)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47826 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _47877 = mem[_47826]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47826]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41623 = mem[t]
                                _43860 = mem[mem[_9641]]
                                idx = idx + 1
                                w = _47877
                                continue 
                            _47749 = mem[_43924 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _47271)
                            mem[mem[64] + 68] = Mask(112, 0, _47151)
                            require ext_code.size(address(_47749))
                            staticcall address(_47749).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _47271 << 144, Mask(112, 0, _47151)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47850 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _47910 = mem[_47850]
                            require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                            mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47850]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41623 = mem[t]
                            _43860 = mem[mem[_9641]]
                            idx = idx + 1
                            w = _47910
                            continue 
                        require idx < mem[_39470]
                        mem[(32 * idx) + _39470 + 32] = mem[_41667 + 76 len 20]
                        _43923 = mem[_41667 + 64]
                        _45998 = mem[mem[_6428]]
                        s = 0
                        while s < _45998:
                            _46046 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_46046] = 0
                            mem[_46046 + 32] = 0
                            mem[_46046 + 64] = 0
                            mem[_46046 + 96] = 0
                            mem[_46046 + 128] = 0
                            require s < mem[mem[_6428]]
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_43923):
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_43923):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41623 = mem[t]
                                    _45998 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41642):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41623 = mem[t]
                                    _45998 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41634):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41623 = mem[t]
                                    _45998 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _46401 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _46402 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _46507 = mem[_41667 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _46401)
                                mem[mem[64] + 68] = Mask(112, 0, _46402)
                                require ext_code.size(address(_46507))
                                staticcall address(_46507).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _46401 << 144, Mask(112, 0, _46402)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _46745 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46844 = mem[_46745]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46745]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41623 = mem[t]
                                _45998 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _46844
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41634):
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_43923):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41623 = mem[t]
                                    _45998 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41642):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41623 = mem[t]
                                    _45998 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41634):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41623 = mem[t]
                                    _45998 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _46457 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _46458 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _46569 = mem[_41667 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _46457)
                                mem[mem[64] + 68] = Mask(112, 0, _46458)
                                require ext_code.size(address(_46569))
                                staticcall address(_46569).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _46457 << 144, Mask(112, 0, _46458)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _46805 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46885 = mem[_46805]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46805]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41623 = mem[t]
                                _45998 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _46885
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] == address(_41642):
                                _46281 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _46282 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _46351 = mem[_41667 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _46281)
                                mem[mem[64] + 68] = Mask(112, 0, _46282)
                                require ext_code.size(address(_46351))
                                staticcall address(_46351).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _46281 << 144, Mask(112, 0, _46282)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _46571 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46684 = mem[_46571]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46571]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41623 = mem[t]
                                _45998 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _46684
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_43923):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41623 = mem[t]
                                _45998 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41642):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41623 = mem[t]
                                _45998 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41634):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41623 = mem[t]
                                _45998 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _46509 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _46510 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _46622 = mem[_41667 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _46509)
                            mem[mem[64] + 68] = Mask(112, 0, _46510)
                            require ext_code.size(address(_46622))
                            staticcall address(_46622).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _46509 << 144, Mask(112, 0, _46510)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _46845 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46927 = mem[_46845]
                            require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                            mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46845]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41623 = mem[t]
                            _45998 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _46927
                            continue 
                        require ext_code.size(address(_43923))
                        staticcall address(_43923).factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if ext_call.success:
                            _46109 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46178 = mem[_46109]
                            require mem[_46109] == mem[_46109 + 12 len 20]
                            mem[mem[64] + 4] = address(_41634)
                            mem[mem[64] + 36] = address(_41642)
                            require ext_code.size(address(_46178))
                            staticcall address(_46178).0xe6a43905 with:
                                    gas gas_remaining wei
                                   args address(_41634), address(_41642)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _46620 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46744 = mem[_46620]
                            require mem[_46620] == mem[_46620 + 12 len 20]
                            require ext_code.size(mem[_46620 + 12 len 20])
                            staticcall mem[_46620 + 12 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47038 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _47114 = mem[_47038]
                            require mem[_47038] == mem[_47038 + 18 len 14]
                            _47226 = mem[_47038 + 32]
                            require mem[_47038 + 32] == mem[_47038 + 50 len 14]
                            require mem[_47038 + 64] == mem[_47038 + 92 len 4]
                            require ext_code.size(address(_46744))
                            staticcall address(_46744).token0() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47482 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_47482] == mem[_47482 + 12 len 20]
                            if mem[_47482 + 12 len 20] != address(_41642):
                                _47680 = mem[_41667 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _47114)
                                mem[mem[64] + 68] = Mask(112, 0, _47226)
                                require ext_code.size(address(_47680))
                                staticcall address(_47680).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _47114 << 144, Mask(112, 0, _47226)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47805 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _47849 = mem[_47805]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47805]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41623 = mem[t]
                                idx = idx + 1
                                w = _47849
                                continue 
                            _47710 = mem[_41667 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _47226)
                            mem[mem[64] + 68] = Mask(112, 0, _47114)
                            require ext_code.size(address(_47710))
                            staticcall address(_47710).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _47226 << 144, Mask(112, 0, _47114)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47825 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _47876 = mem[_47825]
                            require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                            mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47825]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41623 = mem[t]
                            idx = idx + 1
                            w = _47876
                            continue 
                        require ext_code.size(address(_43923))
                        staticcall address(_43923).FACTORY() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _46210 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _46278 = mem[_46210]
                        require mem[_46210] == mem[_46210 + 12 len 20]
                        mem[mem[64] + 4] = address(_41634)
                        mem[mem[64] + 36] = address(_41642)
                        require ext_code.size(address(_46278))
                        staticcall address(_46278).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_41634), address(_41642)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _46682 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _46804 = mem[_46682]
                        require mem[_46682] == mem[_46682 + 12 len 20]
                        require ext_code.size(mem[_46682 + 12 len 20])
                        staticcall mem[_46682 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _47074 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _47150 = mem[_47074]
                        require mem[_47074] == mem[_47074 + 18 len 14]
                        _47270 = mem[_47074 + 32]
                        require mem[_47074 + 32] == mem[_47074 + 50 len 14]
                        require mem[_47074 + 64] == mem[_47074 + 92 len 4]
                        require ext_code.size(address(_46804))
                        staticcall address(_46804).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _47522 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_47522] == mem[_47522 + 12 len 20]
                        if mem[_47522 + 12 len 20] != address(_41642):
                            _47708 = mem[_41667 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _47150)
                            mem[mem[64] + 68] = Mask(112, 0, _47270)
                            require ext_code.size(address(_47708))
                            staticcall address(_47708).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _47150 << 144, Mask(112, 0, _47270)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47824 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _47874 = mem[_47824]
                            require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                            mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47824]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41623 = mem[t]
                            idx = idx + 1
                            w = _47874
                            continue 
                        _47746 = mem[_41667 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _47270)
                        mem[mem[64] + 68] = Mask(112, 0, _47150)
                        require ext_code.size(address(_47746))
                        staticcall address(_47746).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _47270 << 144, Mask(112, 0, _47150)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _47848 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _47907 = mem[_47848]
                        require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                        mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47848]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        _41623 = mem[t]
                        idx = idx + 1
                        w = _47907
                        continue 
                    if u / _12850 > w:
                        _41655 = mem[64]
                        mem[mem[64]] = 0
                        mem[mem[64] + 32] = 0
                        mem[mem[64] + 64] = 160
                        _41676 = mem[t]
                        mem[mem[64] + 160] = mem[t]
                        idx = 0
                        v = t + 32
                        w = mem[64] + 192
                        while idx < _41676:
                            mem[w] = mem[v + 12 len 20]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            v = v + 32
                            w = w + 32
                            continue 
                        mem[_41655 + 96] = (32 * _41676) + 192
                        _43899 = mem[s]
                        mem[_41655 + (32 * _41676) + 192] = mem[s]
                        idx = 0
                        t = s + 32
                        u = _41655 + (32 * _41676) + 224
                        while idx < _43899:
                            mem[u] = mem[t + 12 len 20]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_41655 + 128] = (32 * _41676) + (32 * _43899) + 224
                        _46077 = mem[96]
                        mem[_41655 + (32 * _41676) + (32 * _43899) + 224] = mem[96]
                        idx = 0
                        s = 128
                        t = _41655 + (32 * _41676) + (32 * _43899) + 256
                        while idx < _46077:
                            mem[t] = mem[s]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _41655 + (32 * _41676) + (32 * _43899) + (32 * _46077) + -mem[64] + 256
                    if w - (u / _12850) < 0:
                        _41666 = mem[64]
                        mem[mem[64]] = 0
                        mem[mem[64] + 32] = 0
                        mem[mem[64] + 64] = 160
                        _41683 = mem[t]
                        mem[mem[64] + 160] = mem[t]
                        idx = 0
                        u = t + 32
                        v = mem[64] + 192
                        while idx < _41683:
                            mem[v] = mem[u + 12 len 20]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_41666 + 96] = (32 * _41683) + 192
                        _43898 = mem[s]
                        mem[_41666 + (32 * _41683) + 192] = mem[s]
                        idx = 0
                        t = s + 32
                        u = _41666 + (32 * _41683) + 224
                        while idx < _43898:
                            mem[u] = mem[t + 12 len 20]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_41666 + 128] = (32 * _41683) + (32 * _43898) + 224
                        _46076 = mem[96]
                        mem[_41666 + (32 * _41683) + (32 * _43898) + 224] = mem[96]
                        idx = 0
                        s = 128
                        t = _41666 + (32 * _41683) + (32 * _43898) + 256
                        while idx < _46076:
                            mem[t] = mem[s]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _41666 + (32 * _41683) + (32 * _43898) + (32 * _46076) + -mem[64] + 256
                    if w - (u / _12850) <= 0:
                        _41654 = mem[_9640 + 32]
                        if not mem[_9640 + 32]:
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            u = _41654
                            u = v + 1
                            continue 
                        if _12850 * mem[_9640 + 32] / mem[_9640 + 32] != _12850:
                            revert with 0, 'SafeMath: multiplication overflow'
                        if v < _12850 * mem[_9640 + 32]:
                            if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                revert with 0, 'SafeMath: multiplication overflow'
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            u = (10^18 * v) + 10^18
                            v = v + 1
                            continue 
                        _41773 = mem[64]
                        mem[mem[64]] = 0
                        mem[mem[64] + 32] = 0
                        mem[mem[64] + 64] = 160
                        _41812 = mem[t]
                        mem[mem[64] + 160] = mem[t]
                        idx = 0
                        u = t + 32
                        v = mem[64] + 192
                        while idx < _41812:
                            mem[v] = mem[u + 12 len 20]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_41773 + 96] = (32 * _41812) + 192
                        _43896 = mem[s]
                        mem[_41773 + (32 * _41812) + 192] = mem[s]
                        idx = 0
                        t = s + 32
                        u = _41773 + (32 * _41812) + 224
                        while idx < _43896:
                            mem[u] = mem[t + 12 len 20]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_41773 + 128] = (32 * _41812) + (32 * _43896) + 224
                        _46074 = mem[96]
                        mem[_41773 + (32 * _41812) + (32 * _43896) + 224] = mem[96]
                        idx = 0
                        s = 128
                        t = _41773 + (32 * _41812) + (32 * _43896) + 256
                        while idx < _46074:
                            mem[t] = mem[s]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _41773 + (32 * _41812) + (32 * _43896) + (32 * _46074) + -mem[64] + 256
                    _41665 = mem[_9640 + 32]
                    if not mem[_9640 + 32]:
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        u = _41665
                        u = v + 1
                        continue 
                    if _12850 * mem[_9640 + 32] / mem[_9640 + 32] != _12850:
                        revert with 0, 'SafeMath: multiplication overflow'
                    if v < _12850 * mem[_9640 + 32]:
                        if (10^18 * v) + 10^18 / 10^18 != v + 1:
                            revert with 0, 'SafeMath: multiplication overflow'
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        u = (10^18 * v) + 10^18
                        v = v + 1
                        continue 
                    _41792 = mem[64]
                    mem[mem[64]] = w - (u / _12850)
                    mem[mem[64] + 32] = u / _12850
                    mem[mem[64] + 64] = 160
                    _41830 = mem[t]
                    mem[mem[64] + 160] = mem[t]
                    idx = 0
                    u = t + 32
                    v = mem[64] + 192
                    while idx < _41830:
                        mem[v] = mem[u + 12 len 20]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_41792 + 96] = (32 * _41830) + 192
                    _43897 = mem[s]
                    mem[_41792 + (32 * _41830) + 192] = mem[s]
                    idx = 0
                    t = s + 32
                    u = _41792 + (32 * _41830) + 224
                    while idx < _43897:
                        mem[u] = mem[t + 12 len 20]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_41792 + 128] = (32 * _41830) + (32 * _43897) + 224
                    _46075 = mem[_39470 + (32 * _39468 - 1) + 32]
                    mem[_41792 + (32 * _41830) + (32 * _43897) + 224] = mem[_39470 + (32 * _39468 - 1) + 32]
                    idx = 0
                    s = _39470 + (32 * _39468 - 1) + 64
                    t = _41792 + (32 * _41830) + (32 * _43897) + 256
                    while idx < _46075:
                        mem[t] = mem[s]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _41792 + (32 * _41830) + (32 * _43897) + (32 * _46075) + -mem[64] + 256
                mem[_39470 + 32 len 32 * _39468 - 1] = call.data[calldata.size len 32 * _39468 - 1]
                _39476 = mem[t]
                require mem[t] - 1 <= test266151307()
                mem[_39470 + (32 * _39468 - 1) + 32] = mem[t] - 1
                mem[64] = _39470 + (32 * _39468 - 1) + (32 * _39476 - 1) + 64
                if not _39476 - 1:
                    _41624 = mem[t]
                    idx = 0
                    w = u / _12850
                    while idx < _41624 - 1:
                        require idx < mem[t]
                        _41636 = mem[(32 * idx) + t + 32]
                        require idx + 1 < mem[t]
                        _41643 = mem[(32 * idx + 1) + t + 32]
                        _41648 = mem[64]
                        mem[64] = mem[64] + 96
                        mem[_41648] = 0
                        mem[_41648 + 32] = 0
                        mem[_41648 + 64] = 0
                        _41670 = mem[64]
                        mem[64] = mem[64] + 96
                        mem[_41670] = 0
                        mem[_41670 + 32] = 0
                        mem[_41670 + 64] = 0
                        _43862 = mem[mem[_9641]]
                        s = 0
                        while s < _43862:
                            _43885 = mem[64]
                            mem[64] = mem[64] + 96
                            mem[_43885] = 0
                            mem[_43885 + 32] = 0
                            mem[_43885 + 64] = 0
                            require s < mem[mem[_9641]]
                            _43927 = mem[(32 * s) + mem[_9641] + 32]
                            if mem[mem[(32 * s) + mem[_9641] + 32] + 12 len 20] != address(_41636):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41624 = mem[t]
                                _43862 = mem[mem[_9641]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_9641] + 32] + 44 len 20] != address(_41643):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41624 = mem[t]
                                _43862 = mem[mem[_9641]]
                                s = s + 1
                                continue 
                            require idx < mem[_39470]
                            mem[(32 * idx) + _39470 + 32] = mem[mem[(32 * s) + mem[_9641] + 32] + 76 len 20]
                            _44040 = mem[_43927 + 64]
                            _46004 = mem[mem[_6428]]
                            s = 0
                            while s < _46004:
                                _46055 = mem[64]
                                mem[64] = mem[64] + 160
                                mem[_46055] = 0
                                mem[_46055 + 32] = 0
                                mem[_46055 + 64] = 0
                                mem[_46055 + 96] = 0
                                mem[_46055 + 128] = 0
                                require s < mem[mem[_6428]]
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_44040):
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_44040):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41624 = mem[t]
                                        _43862 = mem[mem[_9641]]
                                        _46004 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41643):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41624 = mem[t]
                                        _43862 = mem[mem[_9641]]
                                        _46004 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41636):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41624 = mem[t]
                                        _43862 = mem[mem[_9641]]
                                        _46004 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    _46413 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                    _46414 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                    _46522 = mem[_43927 + 64]
                                    mem[mem[64] + 4] = w
                                    mem[mem[64] + 36] = Mask(112, 0, _46413)
                                    mem[mem[64] + 68] = Mask(112, 0, _46414)
                                    require ext_code.size(address(_46522))
                                    staticcall address(_46522).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                            gas gas_remaining wei
                                           args w, _46413 << 144, Mask(112, 0, _46414)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _46757 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _46850 = mem[_46757]
                                    require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                    mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46757]
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41624 = mem[t]
                                    _43862 = mem[mem[_9641]]
                                    _46004 = mem[mem[_6428]]
                                    idx = idx + 1
                                    w = _46850
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41636):
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_44040):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41624 = mem[t]
                                        _43862 = mem[mem[_9641]]
                                        _46004 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41643):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41624 = mem[t]
                                        _43862 = mem[mem[_9641]]
                                        _46004 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41636):
                                        _39461 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_39461] = 26
                                        mem[_39461 + 32] = 'SafeMath: division by zero'
                                        _41624 = mem[t]
                                        _43862 = mem[mem[_9641]]
                                        _46004 = mem[mem[_6428]]
                                        s = s + 1
                                        continue 
                                    _46469 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                    _46470 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                    _46581 = mem[_43927 + 64]
                                    mem[mem[64] + 4] = w
                                    mem[mem[64] + 36] = Mask(112, 0, _46469)
                                    mem[mem[64] + 68] = Mask(112, 0, _46470)
                                    require ext_code.size(address(_46581))
                                    staticcall address(_46581).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                            gas gas_remaining wei
                                           args w, _46469 << 144, Mask(112, 0, _46470)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _46811 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _46891 = mem[_46811]
                                    require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                    mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46811]
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41624 = mem[t]
                                    _43862 = mem[mem[_9641]]
                                    _46004 = mem[mem[_6428]]
                                    idx = idx + 1
                                    w = _46891
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] == address(_41643):
                                    _46296 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                    _46297 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                    _46360 = mem[_43927 + 64]
                                    mem[mem[64] + 4] = w
                                    mem[mem[64] + 36] = Mask(112, 0, _46296)
                                    mem[mem[64] + 68] = Mask(112, 0, _46297)
                                    require ext_code.size(address(_46360))
                                    staticcall address(_46360).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                            gas gas_remaining wei
                                           args w, _46296 << 144, Mask(112, 0, _46297)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _46583 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _46693 = mem[_46583]
                                    require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                    mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46583]
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41624 = mem[t]
                                    _43862 = mem[mem[_9641]]
                                    _46004 = mem[mem[_6428]]
                                    idx = idx + 1
                                    w = _46693
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_44040):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41624 = mem[t]
                                    _43862 = mem[mem[_9641]]
                                    _46004 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41643):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41624 = mem[t]
                                    _43862 = mem[mem[_9641]]
                                    _46004 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41636):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41624 = mem[t]
                                    _43862 = mem[mem[_9641]]
                                    _46004 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _46524 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _46525 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _46634 = mem[_43927 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _46524)
                                mem[mem[64] + 68] = Mask(112, 0, _46525)
                                require ext_code.size(address(_46634))
                                staticcall address(_46634).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _46524 << 144, Mask(112, 0, _46525)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _46851 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46939 = mem[_46851]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46851]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41624 = mem[t]
                                _43862 = mem[mem[_9641]]
                                _46004 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _46939
                                continue 
                            require ext_code.size(address(_44040))
                            staticcall address(_44040).factory() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if ext_call.success:
                                _46118 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46181 = mem[_46118]
                                require mem[_46118] == mem[_46118 + 12 len 20]
                                mem[mem[64] + 4] = address(_41636)
                                mem[mem[64] + 36] = address(_41643)
                                require ext_code.size(address(_46181))
                                staticcall address(_46181).0xe6a43905 with:
                                        gas gas_remaining wei
                                       args address(_41636), address(_41643)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _46632 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46756 = mem[_46632]
                                require mem[_46632] == mem[_46632 + 12 len 20]
                                require ext_code.size(mem[_46632 + 12 len 20])
                                staticcall mem[_46632 + 12 len 20].getReserves() with:
                                        gas gas_remaining wei
                                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47041 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 96
                                _47117 = mem[_47041]
                                require mem[_47041] == mem[_47041 + 18 len 14]
                                _47229 = mem[_47041 + 32]
                                require mem[_47041 + 32] == mem[_47041 + 50 len 14]
                                require mem[_47041 + 64] == mem[_47041 + 92 len 4]
                                require ext_code.size(address(_46756))
                                staticcall address(_46756).token0() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47485 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_47485] == mem[_47485 + 12 len 20]
                                if mem[_47485 + 12 len 20] != address(_41643):
                                    _47686 = mem[_43927 + 64]
                                    mem[mem[64] + 4] = w
                                    mem[mem[64] + 36] = Mask(112, 0, _47117)
                                    mem[mem[64] + 68] = Mask(112, 0, _47229)
                                    require ext_code.size(address(_47686))
                                    staticcall address(_47686).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                            gas gas_remaining wei
                                           args w, _47117 << 144, Mask(112, 0, _47229)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _47811 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _47855 = mem[_47811]
                                    require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                    mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47811]
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41624 = mem[t]
                                    _43862 = mem[mem[_9641]]
                                    idx = idx + 1
                                    w = _47855
                                    continue 
                                _47722 = mem[_43927 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _47229)
                                mem[mem[64] + 68] = Mask(112, 0, _47117)
                                require ext_code.size(address(_47722))
                                staticcall address(_47722).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _47229 << 144, Mask(112, 0, _47117)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47831 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _47885 = mem[_47831]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47831]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41624 = mem[t]
                                _43862 = mem[mem[_9641]]
                                idx = idx + 1
                                w = _47885
                                continue 
                            require ext_code.size(address(_44040))
                            staticcall address(_44040).FACTORY() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _46223 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46293 = mem[_46223]
                            require mem[_46223] == mem[_46223 + 12 len 20]
                            mem[mem[64] + 4] = address(_41636)
                            mem[mem[64] + 36] = address(_41643)
                            require ext_code.size(address(_46293))
                            staticcall address(_46293).0xe6a43905 with:
                                    gas gas_remaining wei
                                   args address(_41636), address(_41643)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _46691 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46810 = mem[_46691]
                            require mem[_46691] == mem[_46691 + 12 len 20]
                            require ext_code.size(mem[_46691 + 12 len 20])
                            staticcall mem[_46691 + 12 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47077 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _47153 = mem[_47077]
                            require mem[_47077] == mem[_47077 + 18 len 14]
                            _47273 = mem[_47077 + 32]
                            require mem[_47077 + 32] == mem[_47077 + 50 len 14]
                            require mem[_47077 + 64] == mem[_47077 + 92 len 4]
                            require ext_code.size(address(_46810))
                            staticcall address(_46810).token0() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47525 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_47525] == mem[_47525 + 12 len 20]
                            if mem[_47525 + 12 len 20] != address(_41643):
                                _47720 = mem[_43927 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _47153)
                                mem[mem[64] + 68] = Mask(112, 0, _47273)
                                require ext_code.size(address(_47720))
                                staticcall address(_47720).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _47153 << 144, Mask(112, 0, _47273)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47830 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _47883 = mem[_47830]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47830]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41624 = mem[t]
                                _43862 = mem[mem[_9641]]
                                idx = idx + 1
                                w = _47883
                                continue 
                            _47755 = mem[_43927 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _47273)
                            mem[mem[64] + 68] = Mask(112, 0, _47153)
                            require ext_code.size(address(_47755))
                            staticcall address(_47755).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _47273 << 144, Mask(112, 0, _47153)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47854 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _47916 = mem[_47854]
                            require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                            mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47854]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41624 = mem[t]
                            _43862 = mem[mem[_9641]]
                            idx = idx + 1
                            w = _47916
                            continue 
                        require idx < mem[_39470]
                        mem[(32 * idx) + _39470 + 32] = mem[_41670 + 76 len 20]
                        _43926 = mem[_41670 + 64]
                        _46002 = mem[mem[_6428]]
                        s = 0
                        while s < _46002:
                            _46052 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_46052] = 0
                            mem[_46052 + 32] = 0
                            mem[_46052 + 64] = 0
                            mem[_46052 + 96] = 0
                            mem[_46052 + 128] = 0
                            require s < mem[mem[_6428]]
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_43926):
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_43926):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41624 = mem[t]
                                    _46002 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41643):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41624 = mem[t]
                                    _46002 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41636):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41624 = mem[t]
                                    _46002 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _46409 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _46410 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _46517 = mem[_41670 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _46409)
                                mem[mem[64] + 68] = Mask(112, 0, _46410)
                                require ext_code.size(address(_46517))
                                staticcall address(_46517).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _46409 << 144, Mask(112, 0, _46410)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _46753 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46848 = mem[_46753]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46753]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41624 = mem[t]
                                _46002 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _46848
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41636):
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_43926):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41624 = mem[t]
                                    _46002 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41643):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41624 = mem[t]
                                    _46002 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41636):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41624 = mem[t]
                                    _46002 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _46465 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _46466 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _46577 = mem[_41670 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _46465)
                                mem[mem[64] + 68] = Mask(112, 0, _46466)
                                require ext_code.size(address(_46577))
                                staticcall address(_46577).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _46465 << 144, Mask(112, 0, _46466)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _46809 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46889 = mem[_46809]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46809]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41624 = mem[t]
                                _46002 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _46889
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] == address(_41643):
                                _46291 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _46292 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _46357 = mem[_41670 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _46291)
                                mem[mem[64] + 68] = Mask(112, 0, _46292)
                                require ext_code.size(address(_46357))
                                staticcall address(_46357).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _46291 << 144, Mask(112, 0, _46292)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _46579 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46690 = mem[_46579]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46579]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41624 = mem[t]
                                _46002 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _46690
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_43926):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41624 = mem[t]
                                _46002 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41643):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41624 = mem[t]
                                _46002 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41636):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41624 = mem[t]
                                _46002 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _46519 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _46520 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _46630 = mem[_41670 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _46519)
                            mem[mem[64] + 68] = Mask(112, 0, _46520)
                            require ext_code.size(address(_46630))
                            staticcall address(_46630).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _46519 << 144, Mask(112, 0, _46520)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _46849 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46935 = mem[_46849]
                            require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                            mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46849]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41624 = mem[t]
                            _46002 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _46935
                            continue 
                        require ext_code.size(address(_43926))
                        staticcall address(_43926).factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if ext_call.success:
                            _46115 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46180 = mem[_46115]
                            require mem[_46115] == mem[_46115 + 12 len 20]
                            mem[mem[64] + 4] = address(_41636)
                            mem[mem[64] + 36] = address(_41643)
                            require ext_code.size(address(_46180))
                            staticcall address(_46180).0xe6a43905 with:
                                    gas gas_remaining wei
                                   args address(_41636), address(_41643)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _46628 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46752 = mem[_46628]
                            require mem[_46628] == mem[_46628 + 12 len 20]
                            require ext_code.size(mem[_46628 + 12 len 20])
                            staticcall mem[_46628 + 12 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47040 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _47116 = mem[_47040]
                            require mem[_47040] == mem[_47040 + 18 len 14]
                            _47228 = mem[_47040 + 32]
                            require mem[_47040 + 32] == mem[_47040 + 50 len 14]
                            require mem[_47040 + 64] == mem[_47040 + 92 len 4]
                            require ext_code.size(address(_46752))
                            staticcall address(_46752).token0() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47484 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_47484] == mem[_47484 + 12 len 20]
                            if mem[_47484 + 12 len 20] != address(_41643):
                                _47684 = mem[_41670 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _47116)
                                mem[mem[64] + 68] = Mask(112, 0, _47228)
                                require ext_code.size(address(_47684))
                                staticcall address(_47684).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _47116 << 144, Mask(112, 0, _47228)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47809 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _47853 = mem[_47809]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47809]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41624 = mem[t]
                                idx = idx + 1
                                w = _47853
                                continue 
                            _47718 = mem[_41670 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _47228)
                            mem[mem[64] + 68] = Mask(112, 0, _47116)
                            require ext_code.size(address(_47718))
                            staticcall address(_47718).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _47228 << 144, Mask(112, 0, _47116)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47829 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _47882 = mem[_47829]
                            require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                            mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47829]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41624 = mem[t]
                            idx = idx + 1
                            w = _47882
                            continue 
                        require ext_code.size(address(_43926))
                        staticcall address(_43926).FACTORY() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _46220 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _46288 = mem[_46220]
                        require mem[_46220] == mem[_46220 + 12 len 20]
                        mem[mem[64] + 4] = address(_41636)
                        mem[mem[64] + 36] = address(_41643)
                        require ext_code.size(address(_46288))
                        staticcall address(_46288).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_41636), address(_41643)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _46688 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _46808 = mem[_46688]
                        require mem[_46688] == mem[_46688 + 12 len 20]
                        require ext_code.size(mem[_46688 + 12 len 20])
                        staticcall mem[_46688 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _47076 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _47152 = mem[_47076]
                        require mem[_47076] == mem[_47076 + 18 len 14]
                        _47272 = mem[_47076 + 32]
                        require mem[_47076 + 32] == mem[_47076 + 50 len 14]
                        require mem[_47076 + 64] == mem[_47076 + 92 len 4]
                        require ext_code.size(address(_46808))
                        staticcall address(_46808).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _47524 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_47524] == mem[_47524 + 12 len 20]
                        if mem[_47524 + 12 len 20] != address(_41643):
                            _47716 = mem[_41670 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _47152)
                            mem[mem[64] + 68] = Mask(112, 0, _47272)
                            require ext_code.size(address(_47716))
                            staticcall address(_47716).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _47152 << 144, Mask(112, 0, _47272)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47828 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _47880 = mem[_47828]
                            require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                            mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47828]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41624 = mem[t]
                            idx = idx + 1
                            w = _47880
                            continue 
                        _47752 = mem[_41670 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _47272)
                        mem[mem[64] + 68] = Mask(112, 0, _47152)
                        require ext_code.size(address(_47752))
                        staticcall address(_47752).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _47272 << 144, Mask(112, 0, _47152)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _47852 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _47913 = mem[_47852]
                        require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                        mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47852]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        _41624 = mem[t]
                        idx = idx + 1
                        w = _47913
                        continue 
                    if u / _12850 > w:
                        _41657 = mem[64]
                        mem[mem[64]] = 0
                        mem[mem[64] + 32] = 0
                        mem[mem[64] + 64] = 160
                        _41677 = mem[t]
                        mem[mem[64] + 160] = mem[t]
                        idx = 0
                        v = t + 32
                        w = mem[64] + 192
                        while idx < _41677:
                            mem[w] = mem[v + 12 len 20]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            v = v + 32
                            w = w + 32
                            continue 
                        mem[_41657 + 96] = (32 * _41677) + 192
                        _43907 = mem[s]
                        mem[_41657 + (32 * _41677) + 192] = mem[s]
                        idx = 0
                        t = s + 32
                        u = _41657 + (32 * _41677) + 224
                        while idx < _43907:
                            mem[u] = mem[t + 12 len 20]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_41657 + 128] = (32 * _41677) + (32 * _43907) + 224
                        _46085 = mem[96]
                        mem[_41657 + (32 * _41677) + (32 * _43907) + 224] = mem[96]
                        idx = 0
                        s = 128
                        t = _41657 + (32 * _41677) + (32 * _43907) + 256
                        while idx < _46085:
                            mem[t] = mem[s]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _41657 + (32 * _41677) + (32 * _43907) + (32 * _46085) + -mem[64] + 256
                    if w - (u / _12850) < 0:
                        _41669 = mem[64]
                        mem[mem[64]] = 0
                        mem[mem[64] + 32] = 0
                        mem[mem[64] + 64] = 160
                        _41686 = mem[t]
                        mem[mem[64] + 160] = mem[t]
                        idx = 0
                        u = t + 32
                        v = mem[64] + 192
                        while idx < _41686:
                            mem[v] = mem[u + 12 len 20]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_41669 + 96] = (32 * _41686) + 192
                        _43906 = mem[s]
                        mem[_41669 + (32 * _41686) + 192] = mem[s]
                        idx = 0
                        t = s + 32
                        u = _41669 + (32 * _41686) + 224
                        while idx < _43906:
                            mem[u] = mem[t + 12 len 20]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_41669 + 128] = (32 * _41686) + (32 * _43906) + 224
                        _46084 = mem[96]
                        mem[_41669 + (32 * _41686) + (32 * _43906) + 224] = mem[96]
                        idx = 0
                        s = 128
                        t = _41669 + (32 * _41686) + (32 * _43906) + 256
                        while idx < _46084:
                            mem[t] = mem[s]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _41669 + (32 * _41686) + (32 * _43906) + (32 * _46084) + -mem[64] + 256
                    if w - (u / _12850) <= 0:
                        _41656 = mem[_9640 + 32]
                        if not mem[_9640 + 32]:
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            u = _41656
                            u = v + 1
                            continue 
                        if _12850 * mem[_9640 + 32] / mem[_9640 + 32] != _12850:
                            revert with 0, 'SafeMath: multiplication overflow'
                        if v < _12850 * mem[_9640 + 32]:
                            if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                revert with 0, 'SafeMath: multiplication overflow'
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            u = (10^18 * v) + 10^18
                            v = v + 1
                            continue 
                        _41776 = mem[64]
                        mem[mem[64]] = 0
                        mem[mem[64] + 32] = 0
                        mem[mem[64] + 64] = 160
                        _41815 = mem[t]
                        mem[mem[64] + 160] = mem[t]
                        idx = 0
                        u = t + 32
                        v = mem[64] + 192
                        while idx < _41815:
                            mem[v] = mem[u + 12 len 20]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_41776 + 96] = (32 * _41815) + 192
                        _43904 = mem[s]
                        mem[_41776 + (32 * _41815) + 192] = mem[s]
                        idx = 0
                        t = s + 32
                        u = _41776 + (32 * _41815) + 224
                        while idx < _43904:
                            mem[u] = mem[t + 12 len 20]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_41776 + 128] = (32 * _41815) + (32 * _43904) + 224
                        _46082 = mem[96]
                        mem[_41776 + (32 * _41815) + (32 * _43904) + 224] = mem[96]
                        idx = 0
                        s = 128
                        t = _41776 + (32 * _41815) + (32 * _43904) + 256
                        while idx < _46082:
                            mem[t] = mem[s]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _41776 + (32 * _41815) + (32 * _43904) + (32 * _46082) + -mem[64] + 256
                    _41668 = mem[_9640 + 32]
                    if not mem[_9640 + 32]:
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        u = _41668
                        u = v + 1
                        continue 
                    if _12850 * mem[_9640 + 32] / mem[_9640 + 32] != _12850:
                        revert with 0, 'SafeMath: multiplication overflow'
                    if v < _12850 * mem[_9640 + 32]:
                        if (10^18 * v) + 10^18 / 10^18 != v + 1:
                            revert with 0, 'SafeMath: multiplication overflow'
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        u = (10^18 * v) + 10^18
                        v = v + 1
                        continue 
                    _41796 = mem[64]
                    mem[mem[64]] = w - (u / _12850)
                    mem[mem[64] + 32] = u / _12850
                    mem[mem[64] + 64] = 160
                    _41836 = mem[t]
                    mem[mem[64] + 160] = mem[t]
                    idx = 0
                    u = t + 32
                    v = mem[64] + 192
                    while idx < _41836:
                        mem[v] = mem[u + 12 len 20]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_41796 + 96] = (32 * _41836) + 192
                    _43905 = mem[s]
                    mem[_41796 + (32 * _41836) + 192] = mem[s]
                    idx = 0
                    t = s + 32
                    u = _41796 + (32 * _41836) + 224
                    while idx < _43905:
                        mem[u] = mem[t + 12 len 20]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_41796 + 128] = (32 * _41836) + (32 * _43905) + 224
                    _46083 = mem[_39470 + (32 * _39468 - 1) + 32]
                    mem[_41796 + (32 * _41836) + (32 * _43905) + 224] = mem[_39470 + (32 * _39468 - 1) + 32]
                    idx = 0
                    s = _39470 + (32 * _39468 - 1) + 64
                    t = _41796 + (32 * _41836) + (32 * _43905) + 256
                    while idx < _46083:
                        mem[t] = mem[s]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _41796 + (32 * _41836) + (32 * _43905) + (32 * _46083) + -mem[64] + 256
                mem[_39470 + (32 * _39468 - 1) + 64 len 32 * _39476 - 1] = call.data[calldata.size len 32 * _39476 - 1]
                _41625 = mem[t]
                idx = 0
                w = u / _12850
                while idx < _41625 - 1:
                    require idx < mem[t]
                    _41638 = mem[(32 * idx) + t + 32]
                    require idx + 1 < mem[t]
                    _41644 = mem[(32 * idx + 1) + t + 32]
                    _41649 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_41649] = 0
                    mem[_41649 + 32] = 0
                    mem[_41649 + 64] = 0
                    _41673 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_41673] = 0
                    mem[_41673 + 32] = 0
                    mem[_41673 + 64] = 0
                    _43864 = mem[mem[_9641]]
                    s = 0
                    while s < _43864:
                        _43886 = mem[64]
                        mem[64] = mem[64] + 96
                        mem[_43886] = 0
                        mem[_43886 + 32] = 0
                        mem[_43886 + 64] = 0
                        require s < mem[mem[_9641]]
                        _43930 = mem[(32 * s) + mem[_9641] + 32]
                        if mem[mem[(32 * s) + mem[_9641] + 32] + 12 len 20] != address(_41638):
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41625 = mem[t]
                            _43864 = mem[mem[_9641]]
                            s = s + 1
                            continue 
                        if mem[mem[(32 * s) + mem[_9641] + 32] + 44 len 20] != address(_41644):
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41625 = mem[t]
                            _43864 = mem[mem[_9641]]
                            s = s + 1
                            continue 
                        require idx < mem[_39470]
                        mem[(32 * idx) + _39470 + 32] = mem[mem[(32 * s) + mem[_9641] + 32] + 76 len 20]
                        _44044 = mem[_43930 + 64]
                        _46008 = mem[mem[_6428]]
                        s = 0
                        while s < _46008:
                            _46061 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_46061] = 0
                            mem[_46061 + 32] = 0
                            mem[_46061 + 64] = 0
                            mem[_46061 + 96] = 0
                            mem[_46061 + 128] = 0
                            require s < mem[mem[_6428]]
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_44044):
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_44044):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41625 = mem[t]
                                    _43864 = mem[mem[_9641]]
                                    _46008 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41644):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41625 = mem[t]
                                    _43864 = mem[mem[_9641]]
                                    _46008 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41638):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41625 = mem[t]
                                    _43864 = mem[mem[_9641]]
                                    _46008 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _46421 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _46422 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _46532 = mem[_43930 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _46421)
                                mem[mem[64] + 68] = Mask(112, 0, _46422)
                                require ext_code.size(address(_46532))
                                staticcall address(_46532).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _46421 << 144, Mask(112, 0, _46422)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _46765 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46854 = mem[_46765]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46765]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41625 = mem[t]
                                _43864 = mem[mem[_9641]]
                                _46008 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _46854
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41638):
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_44044):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41625 = mem[t]
                                    _43864 = mem[mem[_9641]]
                                    _46008 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41644):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41625 = mem[t]
                                    _43864 = mem[mem[_9641]]
                                    _46008 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41638):
                                    _39461 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_39461] = 26
                                    mem[_39461 + 32] = 'SafeMath: division by zero'
                                    _41625 = mem[t]
                                    _43864 = mem[mem[_9641]]
                                    _46008 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _46477 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _46478 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _46589 = mem[_43930 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _46477)
                                mem[mem[64] + 68] = Mask(112, 0, _46478)
                                require ext_code.size(address(_46589))
                                staticcall address(_46589).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _46477 << 144, Mask(112, 0, _46478)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _46815 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46895 = mem[_46815]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46815]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41625 = mem[t]
                                _43864 = mem[mem[_9641]]
                                _46008 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _46895
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] == address(_41644):
                                _46306 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _46307 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _46366 = mem[_43930 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _46306)
                                mem[mem[64] + 68] = Mask(112, 0, _46307)
                                require ext_code.size(address(_46366))
                                staticcall address(_46366).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _46306 << 144, Mask(112, 0, _46307)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _46591 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _46699 = mem[_46591]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46591]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41625 = mem[t]
                                _43864 = mem[mem[_9641]]
                                _46008 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _46699
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_44044):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41625 = mem[t]
                                _43864 = mem[mem[_9641]]
                                _46008 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41644):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41625 = mem[t]
                                _43864 = mem[mem[_9641]]
                                _46008 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41638):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41625 = mem[t]
                                _43864 = mem[mem[_9641]]
                                _46008 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _46534 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _46535 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _46642 = mem[_43930 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _46534)
                            mem[mem[64] + 68] = Mask(112, 0, _46535)
                            require ext_code.size(address(_46642))
                            staticcall address(_46642).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _46534 << 144, Mask(112, 0, _46535)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _46855 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46947 = mem[_46855]
                            require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                            mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46855]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41625 = mem[t]
                            _43864 = mem[mem[_9641]]
                            _46008 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _46947
                            continue 
                        require ext_code.size(address(_44044))
                        staticcall address(_44044).factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if ext_call.success:
                            _46124 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46183 = mem[_46124]
                            require mem[_46124] == mem[_46124 + 12 len 20]
                            mem[mem[64] + 4] = address(_41638)
                            mem[mem[64] + 36] = address(_41644)
                            require ext_code.size(address(_46183))
                            staticcall address(_46183).0xe6a43905 with:
                                    gas gas_remaining wei
                                   args address(_41638), address(_41644)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _46640 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46764 = mem[_46640]
                            require mem[_46640] == mem[_46640 + 12 len 20]
                            require ext_code.size(mem[_46640 + 12 len 20])
                            staticcall mem[_46640 + 12 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47043 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _47119 = mem[_47043]
                            require mem[_47043] == mem[_47043 + 18 len 14]
                            _47231 = mem[_47043 + 32]
                            require mem[_47043 + 32] == mem[_47043 + 50 len 14]
                            require mem[_47043 + 64] == mem[_47043 + 92 len 4]
                            require ext_code.size(address(_46764))
                            staticcall address(_46764).token0() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47487 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_47487] == mem[_47487 + 12 len 20]
                            if mem[_47487 + 12 len 20] != address(_41644):
                                _47690 = mem[_43930 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _47119)
                                mem[mem[64] + 68] = Mask(112, 0, _47231)
                                require ext_code.size(address(_47690))
                                staticcall address(_47690).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _47119 << 144, Mask(112, 0, _47231)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _47815 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _47859 = mem[_47815]
                                require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                                mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47815]
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41625 = mem[t]
                                _43864 = mem[mem[_9641]]
                                idx = idx + 1
                                w = _47859
                                continue 
                            _47730 = mem[_43930 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _47231)
                            mem[mem[64] + 68] = Mask(112, 0, _47119)
                            require ext_code.size(address(_47730))
                            staticcall address(_47730).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _47231 << 144, Mask(112, 0, _47119)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47835 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _47891 = mem[_47835]
                            require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                            mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47835]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41625 = mem[t]
                            _43864 = mem[mem[_9641]]
                            idx = idx + 1
                            w = _47891
                            continue 
                        require ext_code.size(address(_44044))
                        staticcall address(_44044).FACTORY() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _46233 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _46303 = mem[_46233]
                        require mem[_46233] == mem[_46233 + 12 len 20]
                        mem[mem[64] + 4] = address(_41638)
                        mem[mem[64] + 36] = address(_41644)
                        require ext_code.size(address(_46303))
                        staticcall address(_46303).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_41638), address(_41644)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _46697 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _46814 = mem[_46697]
                        require mem[_46697] == mem[_46697 + 12 len 20]
                        require ext_code.size(mem[_46697 + 12 len 20])
                        staticcall mem[_46697 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _47079 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _47155 = mem[_47079]
                        require mem[_47079] == mem[_47079 + 18 len 14]
                        _47275 = mem[_47079 + 32]
                        require mem[_47079 + 32] == mem[_47079 + 50 len 14]
                        require mem[_47079 + 64] == mem[_47079 + 92 len 4]
                        require ext_code.size(address(_46814))
                        staticcall address(_46814).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _47527 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_47527] == mem[_47527 + 12 len 20]
                        if mem[_47527 + 12 len 20] != address(_41644):
                            _47728 = mem[_43930 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _47155)
                            mem[mem[64] + 68] = Mask(112, 0, _47275)
                            require ext_code.size(address(_47728))
                            staticcall address(_47728).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _47155 << 144, Mask(112, 0, _47275)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47834 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _47889 = mem[_47834]
                            require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                            mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47834]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41625 = mem[t]
                            _43864 = mem[mem[_9641]]
                            idx = idx + 1
                            w = _47889
                            continue 
                        _47761 = mem[_43930 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _47275)
                        mem[mem[64] + 68] = Mask(112, 0, _47155)
                        require ext_code.size(address(_47761))
                        staticcall address(_47761).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _47275 << 144, Mask(112, 0, _47155)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _47858 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _47922 = mem[_47858]
                        require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                        mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47858]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        _41625 = mem[t]
                        _43864 = mem[mem[_9641]]
                        idx = idx + 1
                        w = _47922
                        continue 
                    require idx < mem[_39470]
                    mem[(32 * idx) + _39470 + 32] = mem[_41673 + 76 len 20]
                    _43929 = mem[_41673 + 64]
                    _46006 = mem[mem[_6428]]
                    s = 0
                    while s < _46006:
                        _46058 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_46058] = 0
                        mem[_46058 + 32] = 0
                        mem[_46058 + 64] = 0
                        mem[_46058 + 96] = 0
                        mem[_46058 + 128] = 0
                        require s < mem[mem[_6428]]
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_43929):
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_43929):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41625 = mem[t]
                                _46006 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41644):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41625 = mem[t]
                                _46006 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41638):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41625 = mem[t]
                                _46006 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _46417 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _46418 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _46527 = mem[_41673 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _46417)
                            mem[mem[64] + 68] = Mask(112, 0, _46418)
                            require ext_code.size(address(_46527))
                            staticcall address(_46527).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _46417 << 144, Mask(112, 0, _46418)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _46761 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46852 = mem[_46761]
                            require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                            mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46761]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41625 = mem[t]
                            _46006 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _46852
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41638):
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_43929):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41625 = mem[t]
                                _46006 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41644):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41625 = mem[t]
                                _46006 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41638):
                                _39461 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_39461] = 26
                                mem[_39461 + 32] = 'SafeMath: division by zero'
                                _41625 = mem[t]
                                _46006 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _46473 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _46474 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _46585 = mem[_41673 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _46473)
                            mem[mem[64] + 68] = Mask(112, 0, _46474)
                            require ext_code.size(address(_46585))
                            staticcall address(_46585).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _46473 << 144, Mask(112, 0, _46474)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _46813 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46893 = mem[_46813]
                            require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                            mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46813]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41625 = mem[t]
                            _46006 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _46893
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] == address(_41644):
                            _46301 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _46302 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _46363 = mem[_41673 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _46301)
                            mem[mem[64] + 68] = Mask(112, 0, _46302)
                            require ext_code.size(address(_46363))
                            staticcall address(_46363).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _46301 << 144, Mask(112, 0, _46302)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _46587 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _46696 = mem[_46587]
                            require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                            mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46587]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41625 = mem[t]
                            _46006 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _46696
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_43929):
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41625 = mem[t]
                            _46006 = mem[mem[_6428]]
                            s = s + 1
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_41644):
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41625 = mem[t]
                            _46006 = mem[mem[_6428]]
                            s = s + 1
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_41638):
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41625 = mem[t]
                            _46006 = mem[mem[_6428]]
                            s = s + 1
                            continue 
                        _46529 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                        _46530 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                        _46638 = mem[_41673 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _46529)
                        mem[mem[64] + 68] = Mask(112, 0, _46530)
                        require ext_code.size(address(_46638))
                        staticcall address(_46638).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _46529 << 144, Mask(112, 0, _46530)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _46853 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _46943 = mem[_46853]
                        require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                        mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_46853]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        _41625 = mem[t]
                        _46006 = mem[mem[_6428]]
                        idx = idx + 1
                        w = _46943
                        continue 
                    require ext_code.size(address(_43929))
                    staticcall address(_43929).factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if ext_call.success:
                        _46121 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _46182 = mem[_46121]
                        require mem[_46121] == mem[_46121 + 12 len 20]
                        mem[mem[64] + 4] = address(_41638)
                        mem[mem[64] + 36] = address(_41644)
                        require ext_code.size(address(_46182))
                        staticcall address(_46182).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_41638), address(_41644)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _46636 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _46760 = mem[_46636]
                        require mem[_46636] == mem[_46636 + 12 len 20]
                        require ext_code.size(mem[_46636 + 12 len 20])
                        staticcall mem[_46636 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _47042 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _47118 = mem[_47042]
                        require mem[_47042] == mem[_47042 + 18 len 14]
                        _47230 = mem[_47042 + 32]
                        require mem[_47042 + 32] == mem[_47042 + 50 len 14]
                        require mem[_47042 + 64] == mem[_47042 + 92 len 4]
                        require ext_code.size(address(_46760))
                        staticcall address(_46760).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _47486 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_47486] == mem[_47486 + 12 len 20]
                        if mem[_47486 + 12 len 20] != address(_41644):
                            _47688 = mem[_41673 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _47118)
                            mem[mem[64] + 68] = Mask(112, 0, _47230)
                            require ext_code.size(address(_47688))
                            staticcall address(_47688).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _47118 << 144, Mask(112, 0, _47230)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _47813 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _47857 = mem[_47813]
                            require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                            mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47813]
                            _39461 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_39461] = 26
                            mem[_39461 + 32] = 'SafeMath: division by zero'
                            _41625 = mem[t]
                            idx = idx + 1
                            w = _47857
                            continue 
                        _47726 = mem[_41673 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _47230)
                        mem[mem[64] + 68] = Mask(112, 0, _47118)
                        require ext_code.size(address(_47726))
                        staticcall address(_47726).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _47230 << 144, Mask(112, 0, _47118)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _47833 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _47888 = mem[_47833]
                        require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                        mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47833]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        _41625 = mem[t]
                        idx = idx + 1
                        w = _47888
                        continue 
                    require ext_code.size(address(_43929))
                    staticcall address(_43929).FACTORY() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _46230 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _46298 = mem[_46230]
                    require mem[_46230] == mem[_46230 + 12 len 20]
                    mem[mem[64] + 4] = address(_41638)
                    mem[mem[64] + 36] = address(_41644)
                    require ext_code.size(address(_46298))
                    staticcall address(_46298).0xe6a43905 with:
                            gas gas_remaining wei
                           args address(_41638), address(_41644)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _46694 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _46812 = mem[_46694]
                    require mem[_46694] == mem[_46694 + 12 len 20]
                    require ext_code.size(mem[_46694 + 12 len 20])
                    staticcall mem[_46694 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _47078 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _47154 = mem[_47078]
                    require mem[_47078] == mem[_47078 + 18 len 14]
                    _47274 = mem[_47078 + 32]
                    require mem[_47078 + 32] == mem[_47078 + 50 len 14]
                    require mem[_47078 + 64] == mem[_47078 + 92 len 4]
                    require ext_code.size(address(_46812))
                    staticcall address(_46812).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _47526 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_47526] == mem[_47526 + 12 len 20]
                    if mem[_47526 + 12 len 20] != address(_41644):
                        _47724 = mem[_41673 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _47154)
                        mem[mem[64] + 68] = Mask(112, 0, _47274)
                        require ext_code.size(address(_47724))
                        staticcall address(_47724).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _47154 << 144, Mask(112, 0, _47274)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _47832 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _47886 = mem[_47832]
                        require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                        mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47832]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        _41625 = mem[t]
                        idx = idx + 1
                        w = _47886
                        continue 
                    _47758 = mem[_41673 + 64]
                    mem[mem[64] + 4] = w
                    mem[mem[64] + 36] = Mask(112, 0, _47274)
                    mem[mem[64] + 68] = Mask(112, 0, _47154)
                    require ext_code.size(address(_47758))
                    staticcall address(_47758).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args w, _47274 << 144, Mask(112, 0, _47154)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _47856 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _47919 = mem[_47856]
                    require idx < mem[_39470 + (32 * _39468 - 1) + 32]
                    mem[(32 * idx) + _39470 + (32 * _39468 - 1) + 64] = mem[_47856]
                    _39461 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_39461] = 26
                    mem[_39461 + 32] = 'SafeMath: division by zero'
                    _41625 = mem[t]
                    idx = idx + 1
                    w = _47919
                    continue 
                if u / _12850 > w:
                    _41659 = mem[64]
                    mem[mem[64]] = 0
                    mem[mem[64] + 32] = 0
                    mem[mem[64] + 64] = 160
                    _41678 = mem[t]
                    mem[mem[64] + 160] = mem[t]
                    idx = 0
                    u = t + 32
                    v = mem[64] + 192
                    while idx < _41678:
                        mem[v] = mem[u + 12 len 20]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_41659 + 96] = (32 * _41678) + 192
                    _43915 = mem[s]
                    mem[_41659 + (32 * _41678) + 192] = mem[s]
                    idx = 0
                    t = s + 32
                    u = _41659 + (32 * _41678) + 224
                    while idx < _43915:
                        mem[u] = mem[t + 12 len 20]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_41659 + 128] = (32 * _41678) + (32 * _43915) + 224
                    _46093 = mem[96]
                    mem[_41659 + (32 * _41678) + (32 * _43915) + 224] = mem[96]
                    idx = 0
                    s = 128
                    t = _41659 + (32 * _41678) + (32 * _43915) + 256
                    while idx < _46093:
                        mem[t] = mem[s]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _41659 + (32 * _41678) + (32 * _43915) + (32 * _46093) + -mem[64] + 256
                if w - (u / _12850) < 0:
                    _41672 = mem[64]
                    mem[mem[64]] = 0
                    mem[mem[64] + 32] = 0
                    mem[mem[64] + 64] = 160
                    _41689 = mem[t]
                    mem[mem[64] + 160] = mem[t]
                    idx = 0
                    u = t + 32
                    v = mem[64] + 192
                    while idx < _41689:
                        mem[v] = mem[u + 12 len 20]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_41672 + 96] = (32 * _41689) + 192
                    _43914 = mem[s]
                    mem[_41672 + (32 * _41689) + 192] = mem[s]
                    idx = 0
                    t = s + 32
                    u = _41672 + (32 * _41689) + 224
                    while idx < _43914:
                        mem[u] = mem[t + 12 len 20]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_41672 + 128] = (32 * _41689) + (32 * _43914) + 224
                    _46092 = mem[96]
                    mem[_41672 + (32 * _41689) + (32 * _43914) + 224] = mem[96]
                    idx = 0
                    s = 128
                    t = _41672 + (32 * _41689) + (32 * _43914) + 256
                    while idx < _46092:
                        mem[t] = mem[s]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _41672 + (32 * _41689) + (32 * _43914) + (32 * _46092) + -mem[64] + 256
                if w - (u / _12850) <= 0:
                    _41658 = mem[_9640 + 32]
                    if not mem[_9640 + 32]:
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        u = _41658
                        u = v + 1
                        continue 
                    if _12850 * mem[_9640 + 32] / mem[_9640 + 32] != _12850:
                        revert with 0, 'SafeMath: multiplication overflow'
                    if v < _12850 * mem[_9640 + 32]:
                        if (10^18 * v) + 10^18 / 10^18 != v + 1:
                            revert with 0, 'SafeMath: multiplication overflow'
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        u = (10^18 * v) + 10^18
                        v = v + 1
                        continue 
                    _41779 = mem[64]
                    mem[mem[64]] = 0
                    mem[mem[64] + 32] = 0
                    mem[mem[64] + 64] = 160
                    _41818 = mem[t]
                    mem[mem[64] + 160] = mem[t]
                    idx = 0
                    u = t + 32
                    v = mem[64] + 192
                    while idx < _41818:
                        mem[v] = mem[u + 12 len 20]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_41779 + 96] = (32 * _41818) + 192
                    _43912 = mem[s]
                    mem[_41779 + (32 * _41818) + 192] = mem[s]
                    idx = 0
                    t = s + 32
                    u = _41779 + (32 * _41818) + 224
                    while idx < _43912:
                        mem[u] = mem[t + 12 len 20]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_41779 + 128] = (32 * _41818) + (32 * _43912) + 224
                    _46090 = mem[96]
                    mem[_41779 + (32 * _41818) + (32 * _43912) + 224] = mem[96]
                    idx = 0
                    s = 128
                    t = _41779 + (32 * _41818) + (32 * _43912) + 256
                    while idx < _46090:
                        mem[t] = mem[s]
                        _39461 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_39461] = 26
                        mem[_39461 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _41779 + (32 * _41818) + (32 * _43912) + (32 * _46090) + -mem[64] + 256
                _41671 = mem[_9640 + 32]
                if not mem[_9640 + 32]:
                    _39461 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_39461] = 26
                    mem[_39461 + 32] = 'SafeMath: division by zero'
                    u = _41671
                    u = v + 1
                    continue 
                if _12850 * mem[_9640 + 32] / mem[_9640 + 32] != _12850:
                    revert with 0, 'SafeMath: multiplication overflow'
                if v < _12850 * mem[_9640 + 32]:
                    if (10^18 * v) + 10^18 / 10^18 != v + 1:
                        revert with 0, 'SafeMath: multiplication overflow'
                    _39461 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_39461] = 26
                    mem[_39461 + 32] = 'SafeMath: division by zero'
                    u = (10^18 * v) + 10^18
                    v = v + 1
                    continue 
                _41800 = mem[64]
                mem[mem[64]] = w - (u / _12850)
                mem[mem[64] + 32] = u / _12850
                mem[mem[64] + 64] = 160
                _41842 = mem[t]
                mem[mem[64] + 160] = mem[t]
                idx = 0
                u = t + 32
                v = mem[64] + 192
                while idx < _41842:
                    mem[v] = mem[u + 12 len 20]
                    _39461 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_39461] = 26
                    mem[_39461 + 32] = 'SafeMath: division by zero'
                    idx = idx + 1
                    u = u + 32
                    v = v + 32
                    continue 
                mem[_41800 + 96] = (32 * _41842) + 192
                _43913 = mem[s]
                mem[_41800 + (32 * _41842) + 192] = mem[s]
                idx = 0
                t = s + 32
                u = _41800 + (32 * _41842) + 224
                while idx < _43913:
                    mem[u] = mem[t + 12 len 20]
                    _39461 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_39461] = 26
                    mem[_39461 + 32] = 'SafeMath: division by zero'
                    idx = idx + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_41800 + 128] = (32 * _41842) + (32 * _43913) + 224
                _46091 = mem[_39470 + (32 * _39468 - 1) + 32]
                mem[_41800 + (32 * _41842) + (32 * _43913) + 224] = mem[_39470 + (32 * _39468 - 1) + 32]
                idx = 0
                s = _39470 + (32 * _39468 - 1) + 64
                t = _41800 + (32 * _41842) + (32 * _43913) + 256
                while idx < _46091:
                    mem[t] = mem[s]
                    _39461 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_39461] = 26
                    mem[_39461 + 32] = 'SafeMath: division by zero'
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _41800 + (32 * _41842) + (32 * _43913) + (32 * _46091) + -mem[64] + 256
            _39462 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _39465 = mem[_39461]
            mem[mem[64] + 36] = mem[_39461]
            idx = 0
            while idx < _39465:
                mem[idx + _39462 + 68] = mem[idx + _39461 + 32]
                idx = idx + 32
                continue 
            if ceil32(_39465) > _39465:
                mem[_39462 + _39465 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_39465) + _39462 + -mem[64] + 68
        _25680 = mem[64]
        mem[mem[64]] = 0
        mem[mem[64] + 32] = 0
        mem[mem[64] + 64] = 160
        _25727 = mem[t]
        mem[mem[64] + 160] = mem[t]
        idx = 0
        u = t + 32
        v = mem[64] + 192
        while idx < _25727:
            mem[v] = mem[u + 12 len 20]
            idx = idx + 1
            u = u + 32
            v = v + 32
            continue 
        mem[mem[64] + 96] = (32 * _25727) + 192
        _28747 = mem[s]
        mem[mem[64] + (32 * _25727) + 192] = mem[s]
        idx = 0
        t = s + 32
        u = mem[64] + (32 * _25727) + 224
        while idx < _28747:
            mem[u] = mem[t + 12 len 20]
            idx = idx + 1
            t = t + 32
            u = u + 32
            continue 
        mem[_25680 + 128] = (32 * _25727) + (32 * _28747) + 224
        mem[_25680 + (32 * _25727) + (32 * _28747) + 224] = mem[96]
        mem[_25680 + (32 * _25727) + (32 * _28747) + 256 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
        var91001 = mem[96]
        return memory
          from mem[64]
           len _25680 + (32 * _25727) + (32 * _28747) + (32 * mem[96]) + -mem[64] + 256
    require var99003
    if var101001 / var101002 != mem[_9640 + 64]:
        revert with 0, 'SafeMath: multiplication overflow'
    if var104002 >= var104001 + 1:
        _30861 = mem[64]
        mem[mem[64]] = 0
        mem[mem[64] + 32] = 0
        mem[mem[64] + 64] = 160
        _30864 = mem[t]
        mem[mem[64] + 160] = mem[t]
        v = 0
        w = t + 32
        x = mem[64] + 192
        while v < _30864:
            mem[x] = mem[w + 12 len 20]
            v = v + 1
            w = w + 32
            x = x + 32
            continue 
        mem[mem[64] + 96] = (32 * _30864) + 192
        _33015 = mem[s]
        mem[mem[64] + (32 * _30864) + 192] = mem[s]
        idx = 0
        t = s + 32
        u = mem[64] + (32 * _30864) + 224
        while idx < _33015:
            mem[u] = mem[t + 12 len 20]
            idx = idx + 1
            t = t + 32
            u = u + 32
            continue 
        mem[_30861 + 128] = (32 * _30864) + (32 * _33015) + 224
        mem[_30861 + (32 * _30864) + (32 * _33015) + 224] = mem[96]
        mem[_30861 + (32 * _30864) + (32 * _33015) + 256 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
        return memory
          from mem[64]
           len _30861 + (32 * _30864) + (32 * _33015) + (32 * mem[96]) + -mem[64] + 256
    if var112001 / 10^18 != var112003:
        revert with 0, 'SafeMath: multiplication overflow'
    _43865 = mem[64]
    mem[64] = mem[64] + 64
    mem[_43865] = 26
    mem[_43865 + 32] = 'SafeMath: division by zero'
    u = var114001
    v = var114009
    while _12850:
        _43952 = mem[t]
        require mem[t] - 1 <= test266151307()
        _43962 = mem[64]
        mem[mem[64]] = mem[t] - 1
        mem[64] = mem[64] + (32 * _43952 - 1) + 32
        if not _43952 - 1:
            _43979 = mem[t]
            require mem[t] - 1 <= test266151307()
            mem[_43962 + (32 * _43952 - 1) + 32] = mem[t] - 1
            mem[64] = _43962 + (32 * _43952 - 1) + (32 * _43979 - 1) + 64
            if not _43979 - 1:
                _45989 = mem[t]
                idx = 0
                w = u / _12850
                while idx < _45989 - 1:
                    require idx < mem[t]
                    _46030 = mem[(32 * idx) + t + 32]
                    require idx + 1 < mem[t]
                    _46062 = mem[(32 * idx + 1) + t + 32]
                    _46098 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_46098] = 0
                    mem[_46098 + 32] = 0
                    mem[_46098 + 64] = 0
                    _46186 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_46186] = 0
                    mem[_46186 + 32] = 0
                    mem[_46186 + 64] = 0
                    _48149 = mem[mem[_9641]]
                    s = 0
                    while s < _48149:
                        _48196 = mem[64]
                        mem[64] = mem[64] + 96
                        mem[_48196] = 0
                        mem[_48196 + 32] = 0
                        mem[_48196 + 64] = 0
                        require s < mem[mem[_9641]]
                        _48257 = mem[(32 * s) + mem[_9641] + 32]
                        if mem[mem[(32 * s) + mem[_9641] + 32] + 12 len 20] != address(_46030):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45989 = mem[t]
                            _48149 = mem[mem[_9641]]
                            s = s + 1
                            continue 
                        if mem[mem[(32 * s) + mem[_9641] + 32] + 44 len 20] != address(_46062):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45989 = mem[t]
                            _48149 = mem[mem[_9641]]
                            s = s + 1
                            continue 
                        require idx < mem[_43962]
                        mem[(32 * idx) + _43962 + 32] = mem[mem[(32 * s) + mem[_9641] + 32] + 76 len 20]
                        _48383 = mem[_48257 + 64]
                        _49263 = mem[mem[_6428]]
                        s = 0
                        while s < _49263:
                            _49305 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_49305] = 0
                            mem[_49305 + 32] = 0
                            mem[_49305 + 64] = 0
                            mem[_49305 + 96] = 0
                            mem[_49305 + 128] = 0
                            require s < mem[mem[_6428]]
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48383):
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48383):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45989 = mem[t]
                                    _48149 = mem[mem[_9641]]
                                    _49263 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46062):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45989 = mem[t]
                                    _48149 = mem[mem[_9641]]
                                    _49263 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46030):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45989 = mem[t]
                                    _48149 = mem[mem[_9641]]
                                    _49263 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _49593 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _49594 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _49658 = mem[_48257 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _49593)
                                mem[mem[64] + 68] = Mask(112, 0, _49594)
                                require ext_code.size(address(_49658))
                                staticcall address(_49658).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _49593 << 144, Mask(112, 0, _49594)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _49785 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _49830 = mem[_49785]
                                require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                                mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49785]
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45989 = mem[t]
                                _48149 = mem[mem[_9641]]
                                _49263 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _49830
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46030):
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48383):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45989 = mem[t]
                                    _48149 = mem[mem[_9641]]
                                    _49263 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46062):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45989 = mem[t]
                                    _48149 = mem[mem[_9641]]
                                    _49263 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46030):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45989 = mem[t]
                                    _48149 = mem[mem[_9641]]
                                    _49263 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _49625 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _49626 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _49697 = mem[_48257 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _49625)
                                mem[mem[64] + 68] = Mask(112, 0, _49626)
                                require ext_code.size(address(_49697))
                                staticcall address(_49697).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _49625 << 144, Mask(112, 0, _49626)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _49815 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _49847 = mem[_49815]
                                require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                                mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49815]
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45989 = mem[t]
                                _48149 = mem[mem[_9641]]
                                _49263 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _49847
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] == address(_46062):
                                _49516 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _49517 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _49568 = mem[_48257 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _49516)
                                mem[mem[64] + 68] = Mask(112, 0, _49517)
                                require ext_code.size(address(_49568))
                                staticcall address(_49568).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _49516 << 144, Mask(112, 0, _49517)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _49699 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _49761 = mem[_49699]
                                require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                                mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49699]
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45989 = mem[t]
                                _48149 = mem[mem[_9641]]
                                _49263 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _49761
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48383):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45989 = mem[t]
                                _48149 = mem[mem[_9641]]
                                _49263 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46062):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45989 = mem[t]
                                _48149 = mem[mem[_9641]]
                                _49263 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46030):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45989 = mem[t]
                                _48149 = mem[mem[_9641]]
                                _49263 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _49660 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _49661 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _49730 = mem[_48257 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49660)
                            mem[mem[64] + 68] = Mask(112, 0, _49661)
                            require ext_code.size(address(_49730))
                            staticcall address(_49730).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49660 << 144, Mask(112, 0, _49661)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49831 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49867 = mem[_49831]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49831]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45989 = mem[t]
                            _48149 = mem[mem[_9641]]
                            _49263 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _49867
                            continue 
                        require ext_code.size(address(_48383))
                        staticcall address(_48383).factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if ext_call.success:
                            _49367 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49437 = mem[_49367]
                            require mem[_49367] == mem[_49367 + 12 len 20]
                            mem[mem[64] + 4] = address(_46030)
                            mem[mem[64] + 36] = address(_46062)
                            require ext_code.size(address(_49437))
                            staticcall address(_49437).0xe6a43905 with:
                                    gas gas_remaining wei
                                   args address(_46030), address(_46062)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49728 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49784 = mem[_49728]
                            require mem[_49728] == mem[_49728 + 12 len 20]
                            require ext_code.size(mem[_49728 + 12 len 20])
                            staticcall mem[_49728 + 12 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49917 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _49933 = mem[_49917]
                            require mem[_49917] == mem[_49917 + 18 len 14]
                            _49949 = mem[_49917 + 32]
                            require mem[_49917 + 32] == mem[_49917 + 50 len 14]
                            require mem[_49917 + 64] == mem[_49917 + 92 len 4]
                            require ext_code.size(address(_49784))
                            staticcall address(_49784).token0() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _50013 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_50013] == mem[_50013 + 12 len 20]
                            if mem[_50013 + 12 len 20] != address(_46062):
                                _50046 = mem[_48257 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _49933)
                                mem[mem[64] + 68] = Mask(112, 0, _49949)
                                require ext_code.size(address(_50046))
                                staticcall address(_50046).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _49933 << 144, Mask(112, 0, _49949)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _50135 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _50167 = mem[_50135]
                                require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                                mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50135]
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45989 = mem[t]
                                _48149 = mem[mem[_9641]]
                                idx = idx + 1
                                w = _50167
                                continue 
                            _50066 = mem[_48257 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49949)
                            mem[mem[64] + 68] = Mask(112, 0, _49933)
                            require ext_code.size(address(_50066))
                            staticcall address(_50066).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49949 << 144, Mask(112, 0, _49933)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _50151 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _50185 = mem[_50151]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50151]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45989 = mem[t]
                            _48149 = mem[mem[_9641]]
                            idx = idx + 1
                            w = _50185
                            continue 
                        require ext_code.size(address(_48383))
                        staticcall address(_48383).FACTORY() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49453 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49513 = mem[_49453]
                        require mem[_49453] == mem[_49453 + 12 len 20]
                        mem[mem[64] + 4] = address(_46030)
                        mem[mem[64] + 36] = address(_46062)
                        require ext_code.size(address(_49513))
                        staticcall address(_49513).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_46030), address(_46062)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49759 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49814 = mem[_49759]
                        require mem[_49759] == mem[_49759 + 12 len 20]
                        require ext_code.size(mem[_49759 + 12 len 20])
                        staticcall mem[_49759 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49925 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _49941 = mem[_49925]
                        require mem[_49925] == mem[_49925 + 18 len 14]
                        _49957 = mem[_49925 + 32]
                        require mem[_49925 + 32] == mem[_49925 + 50 len 14]
                        require mem[_49925 + 64] == mem[_49925 + 92 len 4]
                        require ext_code.size(address(_49814))
                        staticcall address(_49814).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50021 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_50021] == mem[_50021 + 12 len 20]
                        if mem[_50021 + 12 len 20] != address(_46062):
                            _50064 = mem[_48257 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49941)
                            mem[mem[64] + 68] = Mask(112, 0, _49957)
                            require ext_code.size(address(_50064))
                            staticcall address(_50064).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49941 << 144, Mask(112, 0, _49957)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _50150 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _50183 = mem[_50150]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50150]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45989 = mem[t]
                            _48149 = mem[mem[_9641]]
                            idx = idx + 1
                            w = _50183
                            continue 
                        _50095 = mem[_48257 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _49957)
                        mem[mem[64] + 68] = Mask(112, 0, _49941)
                        require ext_code.size(address(_50095))
                        staticcall address(_50095).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _49957 << 144, Mask(112, 0, _49941)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50166 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _50208 = mem[_50166]
                        require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                        mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50166]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        _45989 = mem[t]
                        _48149 = mem[mem[_9641]]
                        idx = idx + 1
                        w = _50208
                        continue 
                    require idx < mem[_43962]
                    mem[(32 * idx) + _43962 + 32] = mem[_46186 + 76 len 20]
                    _48256 = mem[_46186 + 64]
                    _49261 = mem[mem[_6428]]
                    s = 0
                    while s < _49261:
                        _49302 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_49302] = 0
                        mem[_49302 + 32] = 0
                        mem[_49302 + 64] = 0
                        mem[_49302 + 96] = 0
                        mem[_49302 + 128] = 0
                        require s < mem[mem[_6428]]
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48256):
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48256):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45989 = mem[t]
                                _49261 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46062):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45989 = mem[t]
                                _49261 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46030):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45989 = mem[t]
                                _49261 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _49589 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _49590 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _49653 = mem[_46186 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49589)
                            mem[mem[64] + 68] = Mask(112, 0, _49590)
                            require ext_code.size(address(_49653))
                            staticcall address(_49653).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49589 << 144, Mask(112, 0, _49590)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49781 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49828 = mem[_49781]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49781]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45989 = mem[t]
                            _49261 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _49828
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46030):
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48256):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45989 = mem[t]
                                _49261 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46062):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45989 = mem[t]
                                _49261 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46030):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45989 = mem[t]
                                _49261 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _49621 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _49622 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _49693 = mem[_46186 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49621)
                            mem[mem[64] + 68] = Mask(112, 0, _49622)
                            require ext_code.size(address(_49693))
                            staticcall address(_49693).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49621 << 144, Mask(112, 0, _49622)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49813 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49845 = mem[_49813]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49813]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45989 = mem[t]
                            _49261 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _49845
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] == address(_46062):
                            _49511 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _49512 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _49565 = mem[_46186 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49511)
                            mem[mem[64] + 68] = Mask(112, 0, _49512)
                            require ext_code.size(address(_49565))
                            staticcall address(_49565).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49511 << 144, Mask(112, 0, _49512)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49695 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49758 = mem[_49695]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49695]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45989 = mem[t]
                            _49261 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _49758
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48256):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45989 = mem[t]
                            _49261 = mem[mem[_6428]]
                            s = s + 1
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46062):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45989 = mem[t]
                            _49261 = mem[mem[_6428]]
                            s = s + 1
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46030):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45989 = mem[t]
                            _49261 = mem[mem[_6428]]
                            s = s + 1
                            continue 
                        _49655 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                        _49656 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                        _49726 = mem[_46186 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _49655)
                        mem[mem[64] + 68] = Mask(112, 0, _49656)
                        require ext_code.size(address(_49726))
                        staticcall address(_49726).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _49655 << 144, Mask(112, 0, _49656)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49829 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49863 = mem[_49829]
                        require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                        mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49829]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        _45989 = mem[t]
                        _49261 = mem[mem[_6428]]
                        idx = idx + 1
                        w = _49863
                        continue 
                    require ext_code.size(address(_48256))
                    staticcall address(_48256).factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if ext_call.success:
                        _49364 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49436 = mem[_49364]
                        require mem[_49364] == mem[_49364 + 12 len 20]
                        mem[mem[64] + 4] = address(_46030)
                        mem[mem[64] + 36] = address(_46062)
                        require ext_code.size(address(_49436))
                        staticcall address(_49436).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_46030), address(_46062)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49724 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49780 = mem[_49724]
                        require mem[_49724] == mem[_49724 + 12 len 20]
                        require ext_code.size(mem[_49724 + 12 len 20])
                        staticcall mem[_49724 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49916 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _49932 = mem[_49916]
                        require mem[_49916] == mem[_49916 + 18 len 14]
                        _49948 = mem[_49916 + 32]
                        require mem[_49916 + 32] == mem[_49916 + 50 len 14]
                        require mem[_49916 + 64] == mem[_49916 + 92 len 4]
                        require ext_code.size(address(_49780))
                        staticcall address(_49780).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50012 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_50012] == mem[_50012 + 12 len 20]
                        if mem[_50012 + 12 len 20] != address(_46062):
                            _50044 = mem[_46186 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49932)
                            mem[mem[64] + 68] = Mask(112, 0, _49948)
                            require ext_code.size(address(_50044))
                            staticcall address(_50044).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49932 << 144, Mask(112, 0, _49948)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _50133 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _50165 = mem[_50133]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50133]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45989 = mem[t]
                            idx = idx + 1
                            w = _50165
                            continue 
                        _50062 = mem[_46186 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _49948)
                        mem[mem[64] + 68] = Mask(112, 0, _49932)
                        require ext_code.size(address(_50062))
                        staticcall address(_50062).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _49948 << 144, Mask(112, 0, _49932)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50149 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _50182 = mem[_50149]
                        require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                        mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50149]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        _45989 = mem[t]
                        idx = idx + 1
                        w = _50182
                        continue 
                    require ext_code.size(address(_48256))
                    staticcall address(_48256).FACTORY() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _49450 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _49508 = mem[_49450]
                    require mem[_49450] == mem[_49450 + 12 len 20]
                    mem[mem[64] + 4] = address(_46030)
                    mem[mem[64] + 36] = address(_46062)
                    require ext_code.size(address(_49508))
                    staticcall address(_49508).0xe6a43905 with:
                            gas gas_remaining wei
                           args address(_46030), address(_46062)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _49756 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _49812 = mem[_49756]
                    require mem[_49756] == mem[_49756 + 12 len 20]
                    require ext_code.size(mem[_49756 + 12 len 20])
                    staticcall mem[_49756 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _49924 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _49940 = mem[_49924]
                    require mem[_49924] == mem[_49924 + 18 len 14]
                    _49956 = mem[_49924 + 32]
                    require mem[_49924 + 32] == mem[_49924 + 50 len 14]
                    require mem[_49924 + 64] == mem[_49924 + 92 len 4]
                    require ext_code.size(address(_49812))
                    staticcall address(_49812).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _50020 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_50020] == mem[_50020 + 12 len 20]
                    if mem[_50020 + 12 len 20] != address(_46062):
                        _50060 = mem[_46186 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _49940)
                        mem[mem[64] + 68] = Mask(112, 0, _49956)
                        require ext_code.size(address(_50060))
                        staticcall address(_50060).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _49940 << 144, Mask(112, 0, _49956)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50148 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _50180 = mem[_50148]
                        require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                        mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50148]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        _45989 = mem[t]
                        idx = idx + 1
                        w = _50180
                        continue 
                    _50092 = mem[_46186 + 64]
                    mem[mem[64] + 4] = w
                    mem[mem[64] + 36] = Mask(112, 0, _49956)
                    mem[mem[64] + 68] = Mask(112, 0, _49940)
                    require ext_code.size(address(_50092))
                    staticcall address(_50092).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args w, _49956 << 144, Mask(112, 0, _49940)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _50164 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _50205 = mem[_50164]
                    require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                    mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50164]
                    _43865 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_43865] = 26
                    mem[_43865 + 32] = 'SafeMath: division by zero'
                    _45989 = mem[t]
                    idx = idx + 1
                    w = _50205
                    continue 
                if u / _12850 > w:
                    _46169 = mem[64]
                    mem[mem[64]] = 0
                    mem[mem[64] + 32] = 0
                    mem[mem[64] + 64] = 160
                    _46236 = mem[t]
                    mem[mem[64] + 160] = mem[t]
                    idx = 0
                    v = t + 32
                    w = mem[64] + 192
                    while idx < _46236:
                        mem[w] = mem[v + 12 len 20]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        v = v + 32
                        w = w + 32
                        continue 
                    mem[_46169 + 96] = (32 * _46236) + 192
                    _48205 = mem[s]
                    mem[_46169 + (32 * _46236) + 192] = mem[s]
                    idx = 0
                    t = s + 32
                    u = _46169 + (32 * _46236) + 224
                    while idx < _48205:
                        mem[u] = mem[t + 12 len 20]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    # nil
                else:
                    if w - (u / _12850) < 0:
                        _46185 = mem[64]
                        mem[mem[64]] = 0
                        mem[mem[64] + 32] = 0
                        mem[mem[64] + 64] = 160
                        _46256 = mem[t]
                        mem[mem[64] + 160] = mem[t]
                        idx = 0
                        u = t + 32
                        v = mem[64] + 192
                        while idx < _46256:
                            mem[v] = mem[u + 12 len 20]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_46185 + 96] = (32 * _46256) + 192
                        _48204 = mem[s]
                        mem[_46185 + (32 * _46256) + 192] = mem[s]
                        idx = 0
                        t = s + 32
                        u = _46185 + (32 * _46256) + 224
                        while idx < _48204:
                            mem[u] = mem[t + 12 len 20]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        # nil
                    else:
                        if w - (u / _12850) <= 0:
                            if not mem[_9640 + 32]:
                                if v + 1 < 1:
                                    if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    u = (10^18 * v) + 10^18
                                    v = v + 1
                                    continue 
                                _46424 = mem[64]
                                mem[mem[64]] = 0
                                mem[mem[64] + 32] = 0
                                mem[mem[64] + 64] = 160
                                _46536 = mem[t]
                                mem[mem[64] + 160] = mem[t]
                                idx = 0
                                u = t + 32
                                v = mem[64] + 192
                                while idx < _46536:
                                    mem[v] = mem[u + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_46424 + 96] = (32 * _46536) + 192
                                _48201 = mem[s]
                                mem[_46424 + (32 * _46536) + 192] = mem[s]
                                idx = 0
                                t = s + 32
                                u = _46424 + (32 * _46536) + 224
                                while idx < _48201:
                                    mem[u] = mem[t + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                # nil
                            else:
                                if _12850 * mem[_9640 + 32] / mem[_9640 + 32] != _12850:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if v < _12850 * mem[_9640 + 32]:
                                    if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    u = (10^18 * v) + 10^18
                                    v = v + 1
                                    continue 
                                _46480 = mem[64]
                                mem[mem[64]] = 0
                                mem[mem[64] + 32] = 0
                                mem[mem[64] + 64] = 160
                                _46592 = mem[t]
                                mem[mem[64] + 160] = mem[t]
                                idx = 0
                                u = t + 32
                                v = mem[64] + 192
                                while idx < _46592:
                                    mem[v] = mem[u + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_46480 + 96] = (32 * _46592) + 192
                                _48200 = mem[s]
                                mem[_46480 + (32 * _46592) + 192] = mem[s]
                                idx = 0
                                t = s + 32
                                u = _46480 + (32 * _46592) + 224
                                while idx < _48200:
                                    mem[u] = mem[t + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                # nil
                        else:
                            if not mem[_9640 + 32]:
                                if v + 1 < 1:
                                    if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    u = (10^18 * v) + 10^18
                                    v = v + 1
                                    continue 
                                _46481 = mem[64]
                                mem[mem[64]] = w - (u / _12850)
                                mem[mem[64] + 32] = u / _12850
                                mem[mem[64] + 64] = 160
                                _46594 = mem[t]
                                mem[mem[64] + 160] = mem[t]
                                idx = 0
                                u = t + 32
                                v = mem[64] + 192
                                while idx < _46594:
                                    mem[v] = mem[u + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_46481 + 96] = (32 * _46594) + 192
                                _48203 = mem[s]
                                mem[_46481 + (32 * _46594) + 192] = mem[s]
                                idx = 0
                                t = s + 32
                                u = _46481 + (32 * _46594) + 224
                                while idx < _48203:
                                    mem[u] = mem[t + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                # nil
                            else:
                                if _12850 * mem[_9640 + 32] / mem[_9640 + 32] != _12850:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if v < _12850 * mem[_9640 + 32]:
                                    if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    u = (10^18 * v) + 10^18
                                    v = v + 1
                                    continue 
                                _46538 = mem[64]
                                mem[mem[64]] = w - (u / _12850)
                                mem[mem[64] + 32] = u / _12850
                                mem[mem[64] + 64] = 160
                                _46646 = mem[t]
                                mem[mem[64] + 160] = mem[t]
                                idx = 0
                                u = t + 32
                                v = mem[64] + 192
                                while idx < _46646:
                                    mem[v] = mem[u + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_46538 + 96] = (32 * _46646) + 192
                                _48202 = mem[s]
                                mem[_46538 + (32 * _46646) + 192] = mem[s]
                                idx = 0
                                t = s + 32
                                u = _46538 + (32 * _46646) + 224
                                while idx < _48202:
                                    mem[u] = mem[t + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                # nil
            else:
                mem[_43962 + (32 * _43952 - 1) + 64 len 32 * _43979 - 1] = call.data[calldata.size len 32 * _43979 - 1]
                _45990 = mem[t]
                idx = 0
                w = u / _12850
                while idx < _45990 - 1:
                    require idx < mem[t]
                    _46032 = mem[(32 * idx) + t + 32]
                    require idx + 1 < mem[t]
                    _46063 = mem[(32 * idx + 1) + t + 32]
                    _46099 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_46099] = 0
                    mem[_46099 + 32] = 0
                    mem[_46099 + 64] = 0
                    _46189 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_46189] = 0
                    mem[_46189 + 32] = 0
                    mem[_46189 + 64] = 0
                    _48151 = mem[mem[_9641]]
                    s = 0
                    while s < _48151:
                        _48197 = mem[64]
                        mem[64] = mem[64] + 96
                        mem[_48197] = 0
                        mem[_48197 + 32] = 0
                        mem[_48197 + 64] = 0
                        require s < mem[mem[_9641]]
                        _48260 = mem[(32 * s) + mem[_9641] + 32]
                        if mem[mem[(32 * s) + mem[_9641] + 32] + 12 len 20] != address(_46032):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45990 = mem[t]
                            _48151 = mem[mem[_9641]]
                            s = s + 1
                            continue 
                        if mem[mem[(32 * s) + mem[_9641] + 32] + 44 len 20] != address(_46063):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45990 = mem[t]
                            _48151 = mem[mem[_9641]]
                            s = s + 1
                            continue 
                        require idx < mem[_43962]
                        mem[(32 * idx) + _43962 + 32] = mem[mem[(32 * s) + mem[_9641] + 32] + 76 len 20]
                        _48387 = mem[_48260 + 64]
                        _49267 = mem[mem[_6428]]
                        s = 0
                        while s < _49267:
                            _49311 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_49311] = 0
                            mem[_49311 + 32] = 0
                            mem[_49311 + 64] = 0
                            mem[_49311 + 96] = 0
                            mem[_49311 + 128] = 0
                            require s < mem[mem[_6428]]
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48387):
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48387):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45990 = mem[t]
                                    _48151 = mem[mem[_9641]]
                                    _49267 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46063):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45990 = mem[t]
                                    _48151 = mem[mem[_9641]]
                                    _49267 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46032):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45990 = mem[t]
                                    _48151 = mem[mem[_9641]]
                                    _49267 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _49601 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _49602 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _49668 = mem[_48260 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _49601)
                                mem[mem[64] + 68] = Mask(112, 0, _49602)
                                require ext_code.size(address(_49668))
                                staticcall address(_49668).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _49601 << 144, Mask(112, 0, _49602)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _49793 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _49834 = mem[_49793]
                                require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                                mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49793]
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45990 = mem[t]
                                _48151 = mem[mem[_9641]]
                                _49267 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _49834
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46032):
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48387):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45990 = mem[t]
                                    _48151 = mem[mem[_9641]]
                                    _49267 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46063):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45990 = mem[t]
                                    _48151 = mem[mem[_9641]]
                                    _49267 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46032):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45990 = mem[t]
                                    _48151 = mem[mem[_9641]]
                                    _49267 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _49633 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _49634 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _49705 = mem[_48260 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _49633)
                                mem[mem[64] + 68] = Mask(112, 0, _49634)
                                require ext_code.size(address(_49705))
                                staticcall address(_49705).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _49633 << 144, Mask(112, 0, _49634)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _49819 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _49851 = mem[_49819]
                                require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                                mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49819]
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45990 = mem[t]
                                _48151 = mem[mem[_9641]]
                                _49267 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _49851
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] == address(_46063):
                                _49526 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _49527 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _49574 = mem[_48260 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _49526)
                                mem[mem[64] + 68] = Mask(112, 0, _49527)
                                require ext_code.size(address(_49574))
                                staticcall address(_49574).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _49526 << 144, Mask(112, 0, _49527)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _49707 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _49767 = mem[_49707]
                                require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                                mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49707]
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45990 = mem[t]
                                _48151 = mem[mem[_9641]]
                                _49267 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _49767
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48387):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45990 = mem[t]
                                _48151 = mem[mem[_9641]]
                                _49267 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46063):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45990 = mem[t]
                                _48151 = mem[mem[_9641]]
                                _49267 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46032):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45990 = mem[t]
                                _48151 = mem[mem[_9641]]
                                _49267 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _49670 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _49671 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _49738 = mem[_48260 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49670)
                            mem[mem[64] + 68] = Mask(112, 0, _49671)
                            require ext_code.size(address(_49738))
                            staticcall address(_49738).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49670 << 144, Mask(112, 0, _49671)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49835 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49875 = mem[_49835]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49835]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45990 = mem[t]
                            _48151 = mem[mem[_9641]]
                            _49267 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _49875
                            continue 
                        require ext_code.size(address(_48387))
                        staticcall address(_48387).factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if ext_call.success:
                            _49373 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49439 = mem[_49373]
                            require mem[_49373] == mem[_49373 + 12 len 20]
                            mem[mem[64] + 4] = address(_46032)
                            mem[mem[64] + 36] = address(_46063)
                            require ext_code.size(address(_49439))
                            staticcall address(_49439).0xe6a43905 with:
                                    gas gas_remaining wei
                                   args address(_46032), address(_46063)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49736 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49792 = mem[_49736]
                            require mem[_49736] == mem[_49736 + 12 len 20]
                            require ext_code.size(mem[_49736 + 12 len 20])
                            staticcall mem[_49736 + 12 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49919 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _49935 = mem[_49919]
                            require mem[_49919] == mem[_49919 + 18 len 14]
                            _49951 = mem[_49919 + 32]
                            require mem[_49919 + 32] == mem[_49919 + 50 len 14]
                            require mem[_49919 + 64] == mem[_49919 + 92 len 4]
                            require ext_code.size(address(_49792))
                            staticcall address(_49792).token0() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _50015 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_50015] == mem[_50015 + 12 len 20]
                            if mem[_50015 + 12 len 20] != address(_46063):
                                _50050 = mem[_48260 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _49935)
                                mem[mem[64] + 68] = Mask(112, 0, _49951)
                                require ext_code.size(address(_50050))
                                staticcall address(_50050).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _49935 << 144, Mask(112, 0, _49951)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _50139 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _50171 = mem[_50139]
                                require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                                mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50139]
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45990 = mem[t]
                                _48151 = mem[mem[_9641]]
                                idx = idx + 1
                                w = _50171
                                continue 
                            _50074 = mem[_48260 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49951)
                            mem[mem[64] + 68] = Mask(112, 0, _49935)
                            require ext_code.size(address(_50074))
                            staticcall address(_50074).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49951 << 144, Mask(112, 0, _49935)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _50155 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _50191 = mem[_50155]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50155]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45990 = mem[t]
                            _48151 = mem[mem[_9641]]
                            idx = idx + 1
                            w = _50191
                            continue 
                        require ext_code.size(address(_48387))
                        staticcall address(_48387).FACTORY() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49465 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49523 = mem[_49465]
                        require mem[_49465] == mem[_49465 + 12 len 20]
                        mem[mem[64] + 4] = address(_46032)
                        mem[mem[64] + 36] = address(_46063)
                        require ext_code.size(address(_49523))
                        staticcall address(_49523).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_46032), address(_46063)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49765 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49818 = mem[_49765]
                        require mem[_49765] == mem[_49765 + 12 len 20]
                        require ext_code.size(mem[_49765 + 12 len 20])
                        staticcall mem[_49765 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49927 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _49943 = mem[_49927]
                        require mem[_49927] == mem[_49927 + 18 len 14]
                        _49959 = mem[_49927 + 32]
                        require mem[_49927 + 32] == mem[_49927 + 50 len 14]
                        require mem[_49927 + 64] == mem[_49927 + 92 len 4]
                        require ext_code.size(address(_49818))
                        staticcall address(_49818).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50023 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_50023] == mem[_50023 + 12 len 20]
                        if mem[_50023 + 12 len 20] != address(_46063):
                            _50072 = mem[_48260 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49943)
                            mem[mem[64] + 68] = Mask(112, 0, _49959)
                            require ext_code.size(address(_50072))
                            staticcall address(_50072).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49943 << 144, Mask(112, 0, _49959)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _50154 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _50189 = mem[_50154]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50154]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45990 = mem[t]
                            _48151 = mem[mem[_9641]]
                            idx = idx + 1
                            w = _50189
                            continue 
                        _50101 = mem[_48260 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _49959)
                        mem[mem[64] + 68] = Mask(112, 0, _49943)
                        require ext_code.size(address(_50101))
                        staticcall address(_50101).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _49959 << 144, Mask(112, 0, _49943)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50170 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _50214 = mem[_50170]
                        require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                        mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50170]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        _45990 = mem[t]
                        _48151 = mem[mem[_9641]]
                        idx = idx + 1
                        w = _50214
                        continue 
                    require idx < mem[_43962]
                    mem[(32 * idx) + _43962 + 32] = mem[_46189 + 76 len 20]
                    _48259 = mem[_46189 + 64]
                    _49265 = mem[mem[_6428]]
                    s = 0
                    while s < _49265:
                        _49308 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_49308] = 0
                        mem[_49308 + 32] = 0
                        mem[_49308 + 64] = 0
                        mem[_49308 + 96] = 0
                        mem[_49308 + 128] = 0
                        require s < mem[mem[_6428]]
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48259):
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48259):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45990 = mem[t]
                                _49265 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46063):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45990 = mem[t]
                                _49265 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46032):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45990 = mem[t]
                                _49265 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _49597 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _49598 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _49663 = mem[_46189 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49597)
                            mem[mem[64] + 68] = Mask(112, 0, _49598)
                            require ext_code.size(address(_49663))
                            staticcall address(_49663).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49597 << 144, Mask(112, 0, _49598)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49789 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49832 = mem[_49789]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49789]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45990 = mem[t]
                            _49265 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _49832
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46032):
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48259):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45990 = mem[t]
                                _49265 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46063):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45990 = mem[t]
                                _49265 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46032):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45990 = mem[t]
                                _49265 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _49629 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _49630 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _49701 = mem[_46189 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49629)
                            mem[mem[64] + 68] = Mask(112, 0, _49630)
                            require ext_code.size(address(_49701))
                            staticcall address(_49701).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49629 << 144, Mask(112, 0, _49630)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49817 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49849 = mem[_49817]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49817]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45990 = mem[t]
                            _49265 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _49849
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] == address(_46063):
                            _49521 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _49522 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _49571 = mem[_46189 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49521)
                            mem[mem[64] + 68] = Mask(112, 0, _49522)
                            require ext_code.size(address(_49571))
                            staticcall address(_49571).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49521 << 144, Mask(112, 0, _49522)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49703 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49764 = mem[_49703]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49703]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45990 = mem[t]
                            _49265 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _49764
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48259):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45990 = mem[t]
                            _49265 = mem[mem[_6428]]
                            s = s + 1
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46063):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45990 = mem[t]
                            _49265 = mem[mem[_6428]]
                            s = s + 1
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46032):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45990 = mem[t]
                            _49265 = mem[mem[_6428]]
                            s = s + 1
                            continue 
                        _49665 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                        _49666 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                        _49734 = mem[_46189 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _49665)
                        mem[mem[64] + 68] = Mask(112, 0, _49666)
                        require ext_code.size(address(_49734))
                        staticcall address(_49734).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _49665 << 144, Mask(112, 0, _49666)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49833 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49871 = mem[_49833]
                        require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                        mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49833]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        _45990 = mem[t]
                        _49265 = mem[mem[_6428]]
                        idx = idx + 1
                        w = _49871
                        continue 
                    require ext_code.size(address(_48259))
                    staticcall address(_48259).factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if ext_call.success:
                        _49370 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49438 = mem[_49370]
                        require mem[_49370] == mem[_49370 + 12 len 20]
                        mem[mem[64] + 4] = address(_46032)
                        mem[mem[64] + 36] = address(_46063)
                        require ext_code.size(address(_49438))
                        staticcall address(_49438).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_46032), address(_46063)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49732 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49788 = mem[_49732]
                        require mem[_49732] == mem[_49732 + 12 len 20]
                        require ext_code.size(mem[_49732 + 12 len 20])
                        staticcall mem[_49732 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49918 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _49934 = mem[_49918]
                        require mem[_49918] == mem[_49918 + 18 len 14]
                        _49950 = mem[_49918 + 32]
                        require mem[_49918 + 32] == mem[_49918 + 50 len 14]
                        require mem[_49918 + 64] == mem[_49918 + 92 len 4]
                        require ext_code.size(address(_49788))
                        staticcall address(_49788).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50014 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_50014] == mem[_50014 + 12 len 20]
                        if mem[_50014 + 12 len 20] != address(_46063):
                            _50048 = mem[_46189 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49934)
                            mem[mem[64] + 68] = Mask(112, 0, _49950)
                            require ext_code.size(address(_50048))
                            staticcall address(_50048).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49934 << 144, Mask(112, 0, _49950)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _50137 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _50169 = mem[_50137]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50137]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45990 = mem[t]
                            idx = idx + 1
                            w = _50169
                            continue 
                        _50070 = mem[_46189 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _49950)
                        mem[mem[64] + 68] = Mask(112, 0, _49934)
                        require ext_code.size(address(_50070))
                        staticcall address(_50070).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _49950 << 144, Mask(112, 0, _49934)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50153 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _50188 = mem[_50153]
                        require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                        mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50153]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        _45990 = mem[t]
                        idx = idx + 1
                        w = _50188
                        continue 
                    require ext_code.size(address(_48259))
                    staticcall address(_48259).FACTORY() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _49462 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _49518 = mem[_49462]
                    require mem[_49462] == mem[_49462 + 12 len 20]
                    mem[mem[64] + 4] = address(_46032)
                    mem[mem[64] + 36] = address(_46063)
                    require ext_code.size(address(_49518))
                    staticcall address(_49518).0xe6a43905 with:
                            gas gas_remaining wei
                           args address(_46032), address(_46063)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _49762 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _49816 = mem[_49762]
                    require mem[_49762] == mem[_49762 + 12 len 20]
                    require ext_code.size(mem[_49762 + 12 len 20])
                    staticcall mem[_49762 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _49926 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _49942 = mem[_49926]
                    require mem[_49926] == mem[_49926 + 18 len 14]
                    _49958 = mem[_49926 + 32]
                    require mem[_49926 + 32] == mem[_49926 + 50 len 14]
                    require mem[_49926 + 64] == mem[_49926 + 92 len 4]
                    require ext_code.size(address(_49816))
                    staticcall address(_49816).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _50022 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_50022] == mem[_50022 + 12 len 20]
                    if mem[_50022 + 12 len 20] != address(_46063):
                        _50068 = mem[_46189 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _49942)
                        mem[mem[64] + 68] = Mask(112, 0, _49958)
                        require ext_code.size(address(_50068))
                        staticcall address(_50068).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _49942 << 144, Mask(112, 0, _49958)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50152 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _50186 = mem[_50152]
                        require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                        mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50152]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        _45990 = mem[t]
                        idx = idx + 1
                        w = _50186
                        continue 
                    _50098 = mem[_46189 + 64]
                    mem[mem[64] + 4] = w
                    mem[mem[64] + 36] = Mask(112, 0, _49958)
                    mem[mem[64] + 68] = Mask(112, 0, _49942)
                    require ext_code.size(address(_50098))
                    staticcall address(_50098).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args w, _49958 << 144, Mask(112, 0, _49942)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _50168 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _50211 = mem[_50168]
                    require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                    mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50168]
                    _43865 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_43865] = 26
                    mem[_43865 + 32] = 'SafeMath: division by zero'
                    _45990 = mem[t]
                    idx = idx + 1
                    w = _50211
                    continue 
                if u / _12850 > w:
                    _46171 = mem[64]
                    mem[mem[64]] = 0
                    mem[mem[64] + 32] = 0
                    mem[mem[64] + 64] = 160
                    _46237 = mem[t]
                    mem[mem[64] + 160] = mem[t]
                    idx = 0
                    u = t + 32
                    v = mem[64] + 192
                    while idx < _46237:
                        mem[v] = mem[u + 12 len 20]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_46171 + 96] = (32 * _46237) + 192
                    _48215 = mem[s]
                    mem[_46171 + (32 * _46237) + 192] = mem[s]
                    idx = 0
                    t = s + 32
                    u = _46171 + (32 * _46237) + 224
                    while idx < _48215:
                        mem[u] = mem[t + 12 len 20]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    # nil
                else:
                    if w - (u / _12850) < 0:
                        _46188 = mem[64]
                        mem[mem[64]] = 0
                        mem[mem[64] + 32] = 0
                        mem[mem[64] + 64] = 160
                        _46259 = mem[t]
                        mem[mem[64] + 160] = mem[t]
                        idx = 0
                        u = t + 32
                        v = mem[64] + 192
                        while idx < _46259:
                            mem[v] = mem[u + 12 len 20]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_46188 + 96] = (32 * _46259) + 192
                        _48214 = mem[s]
                        mem[_46188 + (32 * _46259) + 192] = mem[s]
                        idx = 0
                        t = s + 32
                        u = _46188 + (32 * _46259) + 224
                        while idx < _48214:
                            mem[u] = mem[t + 12 len 20]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        # nil
                    else:
                        if w - (u / _12850) <= 0:
                            if not mem[_9640 + 32]:
                                if v + 1 < 1:
                                    if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    u = (10^18 * v) + 10^18
                                    v = v + 1
                                    continue 
                                _46430 = mem[64]
                                mem[mem[64]] = 0
                                mem[mem[64] + 32] = 0
                                mem[mem[64] + 64] = 160
                                _46542 = mem[t]
                                mem[mem[64] + 160] = mem[t]
                                idx = 0
                                u = t + 32
                                v = mem[64] + 192
                                while idx < _46542:
                                    mem[v] = mem[u + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_46430 + 96] = (32 * _46542) + 192
                                _48211 = mem[s]
                                mem[_46430 + (32 * _46542) + 192] = mem[s]
                                idx = 0
                                t = s + 32
                                u = _46430 + (32 * _46542) + 224
                                while idx < _48211:
                                    mem[u] = mem[t + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                # nil
                            else:
                                if _12850 * mem[_9640 + 32] / mem[_9640 + 32] != _12850:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if v < _12850 * mem[_9640 + 32]:
                                    if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    u = (10^18 * v) + 10^18
                                    v = v + 1
                                    continue 
                                _46484 = mem[64]
                                mem[mem[64]] = 0
                                mem[mem[64] + 32] = 0
                                mem[mem[64] + 64] = 160
                                _46597 = mem[t]
                                mem[mem[64] + 160] = mem[t]
                                idx = 0
                                u = t + 32
                                v = mem[64] + 192
                                while idx < _46597:
                                    mem[v] = mem[u + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_46484 + 96] = (32 * _46597) + 192
                                _48210 = mem[s]
                                mem[_46484 + (32 * _46597) + 192] = mem[s]
                                idx = 0
                                t = s + 32
                                u = _46484 + (32 * _46597) + 224
                                while idx < _48210:
                                    mem[u] = mem[t + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                # nil
                        else:
                            if not mem[_9640 + 32]:
                                if v + 1 < 1:
                                    if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    u = (10^18 * v) + 10^18
                                    v = v + 1
                                    continue 
                                _46485 = mem[64]
                                mem[mem[64]] = w - (u / _12850)
                                mem[mem[64] + 32] = u / _12850
                                mem[mem[64] + 64] = 160
                                _46599 = mem[t]
                                mem[mem[64] + 160] = mem[t]
                                idx = 0
                                u = t + 32
                                v = mem[64] + 192
                                while idx < _46599:
                                    mem[v] = mem[u + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_46485 + 96] = (32 * _46599) + 192
                                _48213 = mem[s]
                                mem[_46485 + (32 * _46599) + 192] = mem[s]
                                idx = 0
                                t = s + 32
                                u = _46485 + (32 * _46599) + 224
                                while idx < _48213:
                                    mem[u] = mem[t + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                # nil
                            else:
                                if _12850 * mem[_9640 + 32] / mem[_9640 + 32] != _12850:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if v < _12850 * mem[_9640 + 32]:
                                    if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    u = (10^18 * v) + 10^18
                                    v = v + 1
                                    continue 
                                _46544 = mem[64]
                                mem[mem[64]] = w - (u / _12850)
                                mem[mem[64] + 32] = u / _12850
                                mem[mem[64] + 64] = 160
                                _46654 = mem[t]
                                mem[mem[64] + 160] = mem[t]
                                idx = 0
                                u = t + 32
                                v = mem[64] + 192
                                while idx < _46654:
                                    mem[v] = mem[u + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_46544 + 96] = (32 * _46654) + 192
                                _48212 = mem[s]
                                mem[_46544 + (32 * _46654) + 192] = mem[s]
                                idx = 0
                                t = s + 32
                                u = _46544 + (32 * _46654) + 224
                                while idx < _48212:
                                    mem[u] = mem[t + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                # nil
        else:
            mem[_43962 + 32 len 32 * _43952 - 1] = call.data[calldata.size len 32 * _43952 - 1]
            _43993 = mem[t]
            require mem[t] - 1 <= test266151307()
            mem[_43962 + (32 * _43952 - 1) + 32] = mem[t] - 1
            mem[64] = _43962 + (32 * _43952 - 1) + (32 * _43993 - 1) + 64
            if not _43993 - 1:
                _45991 = mem[t]
                idx = 0
                w = u / _12850
                while idx < _45991 - 1:
                    require idx < mem[t]
                    _46034 = mem[(32 * idx) + t + 32]
                    require idx + 1 < mem[t]
                    _46064 = mem[(32 * idx + 1) + t + 32]
                    _46100 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_46100] = 0
                    mem[_46100 + 32] = 0
                    mem[_46100 + 64] = 0
                    _46192 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_46192] = 0
                    mem[_46192 + 32] = 0
                    mem[_46192 + 64] = 0
                    _48153 = mem[mem[_9641]]
                    s = 0
                    while s < _48153:
                        _48198 = mem[64]
                        mem[64] = mem[64] + 96
                        mem[_48198] = 0
                        mem[_48198 + 32] = 0
                        mem[_48198 + 64] = 0
                        require s < mem[mem[_9641]]
                        _48263 = mem[(32 * s) + mem[_9641] + 32]
                        if mem[mem[(32 * s) + mem[_9641] + 32] + 12 len 20] != address(_46034):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45991 = mem[t]
                            _48153 = mem[mem[_9641]]
                            s = s + 1
                            continue 
                        if mem[mem[(32 * s) + mem[_9641] + 32] + 44 len 20] != address(_46064):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45991 = mem[t]
                            _48153 = mem[mem[_9641]]
                            s = s + 1
                            continue 
                        require idx < mem[_43962]
                        mem[(32 * idx) + _43962 + 32] = mem[mem[(32 * s) + mem[_9641] + 32] + 76 len 20]
                        _48391 = mem[_48263 + 64]
                        _49271 = mem[mem[_6428]]
                        s = 0
                        while s < _49271:
                            _49317 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_49317] = 0
                            mem[_49317 + 32] = 0
                            mem[_49317 + 64] = 0
                            mem[_49317 + 96] = 0
                            mem[_49317 + 128] = 0
                            require s < mem[mem[_6428]]
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48391):
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48391):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45991 = mem[t]
                                    _48153 = mem[mem[_9641]]
                                    _49271 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46064):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45991 = mem[t]
                                    _48153 = mem[mem[_9641]]
                                    _49271 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46034):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45991 = mem[t]
                                    _48153 = mem[mem[_9641]]
                                    _49271 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _49609 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _49610 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _49678 = mem[_48263 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _49609)
                                mem[mem[64] + 68] = Mask(112, 0, _49610)
                                require ext_code.size(address(_49678))
                                staticcall address(_49678).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _49609 << 144, Mask(112, 0, _49610)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _49801 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _49838 = mem[_49801]
                                require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                                mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49801]
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45991 = mem[t]
                                _48153 = mem[mem[_9641]]
                                _49271 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _49838
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46034):
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48391):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45991 = mem[t]
                                    _48153 = mem[mem[_9641]]
                                    _49271 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46064):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45991 = mem[t]
                                    _48153 = mem[mem[_9641]]
                                    _49271 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46034):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45991 = mem[t]
                                    _48153 = mem[mem[_9641]]
                                    _49271 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _49641 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _49642 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _49713 = mem[_48263 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _49641)
                                mem[mem[64] + 68] = Mask(112, 0, _49642)
                                require ext_code.size(address(_49713))
                                staticcall address(_49713).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _49641 << 144, Mask(112, 0, _49642)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _49823 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _49855 = mem[_49823]
                                require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                                mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49823]
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45991 = mem[t]
                                _48153 = mem[mem[_9641]]
                                _49271 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _49855
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] == address(_46064):
                                _49536 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _49537 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _49580 = mem[_48263 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _49536)
                                mem[mem[64] + 68] = Mask(112, 0, _49537)
                                require ext_code.size(address(_49580))
                                staticcall address(_49580).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _49536 << 144, Mask(112, 0, _49537)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _49715 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _49773 = mem[_49715]
                                require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                                mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49715]
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45991 = mem[t]
                                _48153 = mem[mem[_9641]]
                                _49271 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _49773
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48391):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45991 = mem[t]
                                _48153 = mem[mem[_9641]]
                                _49271 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46064):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45991 = mem[t]
                                _48153 = mem[mem[_9641]]
                                _49271 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46034):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45991 = mem[t]
                                _48153 = mem[mem[_9641]]
                                _49271 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _49680 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _49681 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _49746 = mem[_48263 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49680)
                            mem[mem[64] + 68] = Mask(112, 0, _49681)
                            require ext_code.size(address(_49746))
                            staticcall address(_49746).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49680 << 144, Mask(112, 0, _49681)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49839 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49883 = mem[_49839]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49839]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45991 = mem[t]
                            _48153 = mem[mem[_9641]]
                            _49271 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _49883
                            continue 
                        require ext_code.size(address(_48391))
                        staticcall address(_48391).factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if ext_call.success:
                            _49379 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49441 = mem[_49379]
                            require mem[_49379] == mem[_49379 + 12 len 20]
                            mem[mem[64] + 4] = address(_46034)
                            mem[mem[64] + 36] = address(_46064)
                            require ext_code.size(address(_49441))
                            staticcall address(_49441).0xe6a43905 with:
                                    gas gas_remaining wei
                                   args address(_46034), address(_46064)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49744 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49800 = mem[_49744]
                            require mem[_49744] == mem[_49744 + 12 len 20]
                            require ext_code.size(mem[_49744 + 12 len 20])
                            staticcall mem[_49744 + 12 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49921 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _49937 = mem[_49921]
                            require mem[_49921] == mem[_49921 + 18 len 14]
                            _49953 = mem[_49921 + 32]
                            require mem[_49921 + 32] == mem[_49921 + 50 len 14]
                            require mem[_49921 + 64] == mem[_49921 + 92 len 4]
                            require ext_code.size(address(_49800))
                            staticcall address(_49800).token0() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _50017 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_50017] == mem[_50017 + 12 len 20]
                            if mem[_50017 + 12 len 20] != address(_46064):
                                _50054 = mem[_48263 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _49937)
                                mem[mem[64] + 68] = Mask(112, 0, _49953)
                                require ext_code.size(address(_50054))
                                staticcall address(_50054).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _49937 << 144, Mask(112, 0, _49953)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _50143 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _50175 = mem[_50143]
                                require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                                mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50143]
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45991 = mem[t]
                                _48153 = mem[mem[_9641]]
                                idx = idx + 1
                                w = _50175
                                continue 
                            _50082 = mem[_48263 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49953)
                            mem[mem[64] + 68] = Mask(112, 0, _49937)
                            require ext_code.size(address(_50082))
                            staticcall address(_50082).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49953 << 144, Mask(112, 0, _49937)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _50159 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _50197 = mem[_50159]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50159]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45991 = mem[t]
                            _48153 = mem[mem[_9641]]
                            idx = idx + 1
                            w = _50197
                            continue 
                        require ext_code.size(address(_48391))
                        staticcall address(_48391).FACTORY() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49477 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49533 = mem[_49477]
                        require mem[_49477] == mem[_49477 + 12 len 20]
                        mem[mem[64] + 4] = address(_46034)
                        mem[mem[64] + 36] = address(_46064)
                        require ext_code.size(address(_49533))
                        staticcall address(_49533).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_46034), address(_46064)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49771 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49822 = mem[_49771]
                        require mem[_49771] == mem[_49771 + 12 len 20]
                        require ext_code.size(mem[_49771 + 12 len 20])
                        staticcall mem[_49771 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49929 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _49945 = mem[_49929]
                        require mem[_49929] == mem[_49929 + 18 len 14]
                        _49961 = mem[_49929 + 32]
                        require mem[_49929 + 32] == mem[_49929 + 50 len 14]
                        require mem[_49929 + 64] == mem[_49929 + 92 len 4]
                        require ext_code.size(address(_49822))
                        staticcall address(_49822).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50025 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_50025] == mem[_50025 + 12 len 20]
                        if mem[_50025 + 12 len 20] != address(_46064):
                            _50080 = mem[_48263 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49945)
                            mem[mem[64] + 68] = Mask(112, 0, _49961)
                            require ext_code.size(address(_50080))
                            staticcall address(_50080).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49945 << 144, Mask(112, 0, _49961)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _50158 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _50195 = mem[_50158]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50158]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45991 = mem[t]
                            _48153 = mem[mem[_9641]]
                            idx = idx + 1
                            w = _50195
                            continue 
                        _50107 = mem[_48263 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _49961)
                        mem[mem[64] + 68] = Mask(112, 0, _49945)
                        require ext_code.size(address(_50107))
                        staticcall address(_50107).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _49961 << 144, Mask(112, 0, _49945)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50174 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _50220 = mem[_50174]
                        require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                        mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50174]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        _45991 = mem[t]
                        _48153 = mem[mem[_9641]]
                        idx = idx + 1
                        w = _50220
                        continue 
                    require idx < mem[_43962]
                    mem[(32 * idx) + _43962 + 32] = mem[_46192 + 76 len 20]
                    _48262 = mem[_46192 + 64]
                    _49269 = mem[mem[_6428]]
                    s = 0
                    while s < _49269:
                        _49314 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_49314] = 0
                        mem[_49314 + 32] = 0
                        mem[_49314 + 64] = 0
                        mem[_49314 + 96] = 0
                        mem[_49314 + 128] = 0
                        require s < mem[mem[_6428]]
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48262):
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48262):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45991 = mem[t]
                                _49269 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46064):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45991 = mem[t]
                                _49269 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46034):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45991 = mem[t]
                                _49269 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _49605 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _49606 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _49673 = mem[_46192 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49605)
                            mem[mem[64] + 68] = Mask(112, 0, _49606)
                            require ext_code.size(address(_49673))
                            staticcall address(_49673).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49605 << 144, Mask(112, 0, _49606)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49797 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49836 = mem[_49797]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49797]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45991 = mem[t]
                            _49269 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _49836
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46034):
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48262):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45991 = mem[t]
                                _49269 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46064):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45991 = mem[t]
                                _49269 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46034):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45991 = mem[t]
                                _49269 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _49637 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _49638 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _49709 = mem[_46192 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49637)
                            mem[mem[64] + 68] = Mask(112, 0, _49638)
                            require ext_code.size(address(_49709))
                            staticcall address(_49709).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49637 << 144, Mask(112, 0, _49638)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49821 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49853 = mem[_49821]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49821]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45991 = mem[t]
                            _49269 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _49853
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] == address(_46064):
                            _49531 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _49532 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _49577 = mem[_46192 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49531)
                            mem[mem[64] + 68] = Mask(112, 0, _49532)
                            require ext_code.size(address(_49577))
                            staticcall address(_49577).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49531 << 144, Mask(112, 0, _49532)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49711 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49770 = mem[_49711]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49711]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45991 = mem[t]
                            _49269 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _49770
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48262):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45991 = mem[t]
                            _49269 = mem[mem[_6428]]
                            s = s + 1
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46064):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45991 = mem[t]
                            _49269 = mem[mem[_6428]]
                            s = s + 1
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46034):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45991 = mem[t]
                            _49269 = mem[mem[_6428]]
                            s = s + 1
                            continue 
                        _49675 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                        _49676 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                        _49742 = mem[_46192 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _49675)
                        mem[mem[64] + 68] = Mask(112, 0, _49676)
                        require ext_code.size(address(_49742))
                        staticcall address(_49742).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _49675 << 144, Mask(112, 0, _49676)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49837 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49879 = mem[_49837]
                        require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                        mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49837]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        _45991 = mem[t]
                        _49269 = mem[mem[_6428]]
                        idx = idx + 1
                        w = _49879
                        continue 
                    require ext_code.size(address(_48262))
                    staticcall address(_48262).factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if ext_call.success:
                        _49376 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49440 = mem[_49376]
                        require mem[_49376] == mem[_49376 + 12 len 20]
                        mem[mem[64] + 4] = address(_46034)
                        mem[mem[64] + 36] = address(_46064)
                        require ext_code.size(address(_49440))
                        staticcall address(_49440).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_46034), address(_46064)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49740 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49796 = mem[_49740]
                        require mem[_49740] == mem[_49740 + 12 len 20]
                        require ext_code.size(mem[_49740 + 12 len 20])
                        staticcall mem[_49740 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49920 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _49936 = mem[_49920]
                        require mem[_49920] == mem[_49920 + 18 len 14]
                        _49952 = mem[_49920 + 32]
                        require mem[_49920 + 32] == mem[_49920 + 50 len 14]
                        require mem[_49920 + 64] == mem[_49920 + 92 len 4]
                        require ext_code.size(address(_49796))
                        staticcall address(_49796).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50016 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_50016] == mem[_50016 + 12 len 20]
                        if mem[_50016 + 12 len 20] != address(_46064):
                            _50052 = mem[_46192 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49936)
                            mem[mem[64] + 68] = Mask(112, 0, _49952)
                            require ext_code.size(address(_50052))
                            staticcall address(_50052).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49936 << 144, Mask(112, 0, _49952)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _50141 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _50173 = mem[_50141]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50141]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45991 = mem[t]
                            idx = idx + 1
                            w = _50173
                            continue 
                        _50078 = mem[_46192 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _49952)
                        mem[mem[64] + 68] = Mask(112, 0, _49936)
                        require ext_code.size(address(_50078))
                        staticcall address(_50078).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _49952 << 144, Mask(112, 0, _49936)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50157 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _50194 = mem[_50157]
                        require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                        mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50157]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        _45991 = mem[t]
                        idx = idx + 1
                        w = _50194
                        continue 
                    require ext_code.size(address(_48262))
                    staticcall address(_48262).FACTORY() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _49474 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _49528 = mem[_49474]
                    require mem[_49474] == mem[_49474 + 12 len 20]
                    mem[mem[64] + 4] = address(_46034)
                    mem[mem[64] + 36] = address(_46064)
                    require ext_code.size(address(_49528))
                    staticcall address(_49528).0xe6a43905 with:
                            gas gas_remaining wei
                           args address(_46034), address(_46064)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _49768 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _49820 = mem[_49768]
                    require mem[_49768] == mem[_49768 + 12 len 20]
                    require ext_code.size(mem[_49768 + 12 len 20])
                    staticcall mem[_49768 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _49928 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _49944 = mem[_49928]
                    require mem[_49928] == mem[_49928 + 18 len 14]
                    _49960 = mem[_49928 + 32]
                    require mem[_49928 + 32] == mem[_49928 + 50 len 14]
                    require mem[_49928 + 64] == mem[_49928 + 92 len 4]
                    require ext_code.size(address(_49820))
                    staticcall address(_49820).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _50024 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_50024] == mem[_50024 + 12 len 20]
                    if mem[_50024 + 12 len 20] != address(_46064):
                        _50076 = mem[_46192 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _49944)
                        mem[mem[64] + 68] = Mask(112, 0, _49960)
                        require ext_code.size(address(_50076))
                        staticcall address(_50076).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _49944 << 144, Mask(112, 0, _49960)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50156 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _50192 = mem[_50156]
                        require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                        mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50156]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        _45991 = mem[t]
                        idx = idx + 1
                        w = _50192
                        continue 
                    _50104 = mem[_46192 + 64]
                    mem[mem[64] + 4] = w
                    mem[mem[64] + 36] = Mask(112, 0, _49960)
                    mem[mem[64] + 68] = Mask(112, 0, _49944)
                    require ext_code.size(address(_50104))
                    staticcall address(_50104).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args w, _49960 << 144, Mask(112, 0, _49944)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _50172 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _50217 = mem[_50172]
                    require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                    mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50172]
                    _43865 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_43865] = 26
                    mem[_43865 + 32] = 'SafeMath: division by zero'
                    _45991 = mem[t]
                    idx = idx + 1
                    w = _50217
                    continue 
                if u / _12850 > w:
                    _46173 = mem[64]
                    mem[mem[64]] = 0
                    mem[mem[64] + 32] = 0
                    mem[mem[64] + 64] = 160
                    _46238 = mem[t]
                    mem[mem[64] + 160] = mem[t]
                    idx = 0
                    u = t + 32
                    v = mem[64] + 192
                    while idx < _46238:
                        mem[v] = mem[u + 12 len 20]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_46173 + 96] = (32 * _46238) + 192
                    _48225 = mem[s]
                    mem[_46173 + (32 * _46238) + 192] = mem[s]
                    idx = 0
                    t = s + 32
                    u = _46173 + (32 * _46238) + 224
                    while idx < _48225:
                        mem[u] = mem[t + 12 len 20]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    # nil
                else:
                    if w - (u / _12850) < 0:
                        _46191 = mem[64]
                        mem[mem[64]] = 0
                        mem[mem[64] + 32] = 0
                        mem[mem[64] + 64] = 160
                        _46262 = mem[t]
                        mem[mem[64] + 160] = mem[t]
                        idx = 0
                        u = t + 32
                        v = mem[64] + 192
                        while idx < _46262:
                            mem[v] = mem[u + 12 len 20]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_46191 + 96] = (32 * _46262) + 192
                        _48224 = mem[s]
                        mem[_46191 + (32 * _46262) + 192] = mem[s]
                        idx = 0
                        t = s + 32
                        u = _46191 + (32 * _46262) + 224
                        while idx < _48224:
                            mem[u] = mem[t + 12 len 20]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        # nil
                    else:
                        if w - (u / _12850) <= 0:
                            if not mem[_9640 + 32]:
                                if v + 1 < 1:
                                    if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    u = (10^18 * v) + 10^18
                                    v = v + 1
                                    continue 
                                _46436 = mem[64]
                                mem[mem[64]] = 0
                                mem[mem[64] + 32] = 0
                                mem[mem[64] + 64] = 160
                                _46548 = mem[t]
                                mem[mem[64] + 160] = mem[t]
                                idx = 0
                                u = t + 32
                                v = mem[64] + 192
                                while idx < _46548:
                                    mem[v] = mem[u + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_46436 + 96] = (32 * _46548) + 192
                                _48221 = mem[s]
                                mem[_46436 + (32 * _46548) + 192] = mem[s]
                                idx = 0
                                t = s + 32
                                u = _46436 + (32 * _46548) + 224
                                while idx < _48221:
                                    mem[u] = mem[t + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                # nil
                            else:
                                if _12850 * mem[_9640 + 32] / mem[_9640 + 32] != _12850:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if v < _12850 * mem[_9640 + 32]:
                                    if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    u = (10^18 * v) + 10^18
                                    v = v + 1
                                    continue 
                                _46488 = mem[64]
                                mem[mem[64]] = 0
                                mem[mem[64] + 32] = 0
                                mem[mem[64] + 64] = 160
                                _46602 = mem[t]
                                mem[mem[64] + 160] = mem[t]
                                idx = 0
                                u = t + 32
                                v = mem[64] + 192
                                while idx < _46602:
                                    mem[v] = mem[u + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_46488 + 96] = (32 * _46602) + 192
                                _48220 = mem[s]
                                mem[_46488 + (32 * _46602) + 192] = mem[s]
                                idx = 0
                                t = s + 32
                                u = _46488 + (32 * _46602) + 224
                                while idx < _48220:
                                    mem[u] = mem[t + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                # nil
                        else:
                            if not mem[_9640 + 32]:
                                if v + 1 < 1:
                                    if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    u = (10^18 * v) + 10^18
                                    v = v + 1
                                    continue 
                                _46489 = mem[64]
                                mem[mem[64]] = w - (u / _12850)
                                mem[mem[64] + 32] = u / _12850
                                mem[mem[64] + 64] = 160
                                _46604 = mem[t]
                                mem[mem[64] + 160] = mem[t]
                                idx = 0
                                u = t + 32
                                v = mem[64] + 192
                                while idx < _46604:
                                    mem[v] = mem[u + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_46489 + 96] = (32 * _46604) + 192
                                _48223 = mem[s]
                                mem[_46489 + (32 * _46604) + 192] = mem[s]
                                idx = 0
                                t = s + 32
                                u = _46489 + (32 * _46604) + 224
                                while idx < _48223:
                                    mem[u] = mem[t + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                # nil
                            else:
                                if _12850 * mem[_9640 + 32] / mem[_9640 + 32] != _12850:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if v < _12850 * mem[_9640 + 32]:
                                    if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    u = (10^18 * v) + 10^18
                                    v = v + 1
                                    continue 
                                _46550 = mem[64]
                                mem[mem[64]] = w - (u / _12850)
                                mem[mem[64] + 32] = u / _12850
                                mem[mem[64] + 64] = 160
                                _46662 = mem[t]
                                mem[mem[64] + 160] = mem[t]
                                idx = 0
                                u = t + 32
                                v = mem[64] + 192
                                while idx < _46662:
                                    mem[v] = mem[u + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_46550 + 96] = (32 * _46662) + 192
                                _48222 = mem[s]
                                mem[_46550 + (32 * _46662) + 192] = mem[s]
                                idx = 0
                                t = s + 32
                                u = _46550 + (32 * _46662) + 224
                                while idx < _48222:
                                    mem[u] = mem[t + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                # nil
            else:
                mem[_43962 + (32 * _43952 - 1) + 64 len 32 * _43993 - 1] = call.data[calldata.size len 32 * _43993 - 1]
                _45992 = mem[t]
                idx = 0
                w = u / _12850
                while idx < _45992 - 1:
                    require idx < mem[t]
                    _46036 = mem[(32 * idx) + t + 32]
                    require idx + 1 < mem[t]
                    _46065 = mem[(32 * idx + 1) + t + 32]
                    _46101 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_46101] = 0
                    mem[_46101 + 32] = 0
                    mem[_46101 + 64] = 0
                    _46195 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_46195] = 0
                    mem[_46195 + 32] = 0
                    mem[_46195 + 64] = 0
                    _48155 = mem[mem[_9641]]
                    s = 0
                    while s < _48155:
                        _48199 = mem[64]
                        mem[64] = mem[64] + 96
                        mem[_48199] = 0
                        mem[_48199 + 32] = 0
                        mem[_48199 + 64] = 0
                        require s < mem[mem[_9641]]
                        _48266 = mem[(32 * s) + mem[_9641] + 32]
                        if mem[mem[(32 * s) + mem[_9641] + 32] + 12 len 20] != address(_46036):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45992 = mem[t]
                            _48155 = mem[mem[_9641]]
                            s = s + 1
                            continue 
                        if mem[mem[(32 * s) + mem[_9641] + 32] + 44 len 20] != address(_46065):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45992 = mem[t]
                            _48155 = mem[mem[_9641]]
                            s = s + 1
                            continue 
                        require idx < mem[_43962]
                        mem[(32 * idx) + _43962 + 32] = mem[mem[(32 * s) + mem[_9641] + 32] + 76 len 20]
                        _48395 = mem[_48266 + 64]
                        _49275 = mem[mem[_6428]]
                        s = 0
                        while s < _49275:
                            _49323 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_49323] = 0
                            mem[_49323 + 32] = 0
                            mem[_49323 + 64] = 0
                            mem[_49323 + 96] = 0
                            mem[_49323 + 128] = 0
                            require s < mem[mem[_6428]]
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48395):
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48395):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45992 = mem[t]
                                    _48155 = mem[mem[_9641]]
                                    _49275 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46065):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45992 = mem[t]
                                    _48155 = mem[mem[_9641]]
                                    _49275 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46036):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45992 = mem[t]
                                    _48155 = mem[mem[_9641]]
                                    _49275 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _49617 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _49618 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _49688 = mem[_48266 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _49617)
                                mem[mem[64] + 68] = Mask(112, 0, _49618)
                                require ext_code.size(address(_49688))
                                staticcall address(_49688).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _49617 << 144, Mask(112, 0, _49618)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _49809 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _49842 = mem[_49809]
                                require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                                mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49809]
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45992 = mem[t]
                                _48155 = mem[mem[_9641]]
                                _49275 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _49842
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46036):
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48395):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45992 = mem[t]
                                    _48155 = mem[mem[_9641]]
                                    _49275 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46065):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45992 = mem[t]
                                    _48155 = mem[mem[_9641]]
                                    _49275 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46036):
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    _45992 = mem[t]
                                    _48155 = mem[mem[_9641]]
                                    _49275 = mem[mem[_6428]]
                                    s = s + 1
                                    continue 
                                _49649 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _49650 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _49721 = mem[_48266 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _49649)
                                mem[mem[64] + 68] = Mask(112, 0, _49650)
                                require ext_code.size(address(_49721))
                                staticcall address(_49721).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _49649 << 144, Mask(112, 0, _49650)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _49827 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _49859 = mem[_49827]
                                require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                                mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49827]
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45992 = mem[t]
                                _48155 = mem[mem[_9641]]
                                _49275 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _49859
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] == address(_46065):
                                _49546 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                                _49547 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                                _49586 = mem[_48266 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _49546)
                                mem[mem[64] + 68] = Mask(112, 0, _49547)
                                require ext_code.size(address(_49586))
                                staticcall address(_49586).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _49546 << 144, Mask(112, 0, _49547)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _49723 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _49779 = mem[_49723]
                                require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                                mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49723]
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45992 = mem[t]
                                _48155 = mem[mem[_9641]]
                                _49275 = mem[mem[_6428]]
                                idx = idx + 1
                                w = _49779
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48395):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45992 = mem[t]
                                _48155 = mem[mem[_9641]]
                                _49275 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46065):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45992 = mem[t]
                                _48155 = mem[mem[_9641]]
                                _49275 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46036):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45992 = mem[t]
                                _48155 = mem[mem[_9641]]
                                _49275 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _49690 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _49691 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _49754 = mem[_48266 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49690)
                            mem[mem[64] + 68] = Mask(112, 0, _49691)
                            require ext_code.size(address(_49754))
                            staticcall address(_49754).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49690 << 144, Mask(112, 0, _49691)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49843 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49891 = mem[_49843]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49843]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45992 = mem[t]
                            _48155 = mem[mem[_9641]]
                            _49275 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _49891
                            continue 
                        require ext_code.size(address(_48395))
                        staticcall address(_48395).factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if ext_call.success:
                            _49385 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49443 = mem[_49385]
                            require mem[_49385] == mem[_49385 + 12 len 20]
                            mem[mem[64] + 4] = address(_46036)
                            mem[mem[64] + 36] = address(_46065)
                            require ext_code.size(address(_49443))
                            staticcall address(_49443).0xe6a43905 with:
                                    gas gas_remaining wei
                                   args address(_46036), address(_46065)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49752 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49808 = mem[_49752]
                            require mem[_49752] == mem[_49752 + 12 len 20]
                            require ext_code.size(mem[_49752 + 12 len 20])
                            staticcall mem[_49752 + 12 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49923 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _49939 = mem[_49923]
                            require mem[_49923] == mem[_49923 + 18 len 14]
                            _49955 = mem[_49923 + 32]
                            require mem[_49923 + 32] == mem[_49923 + 50 len 14]
                            require mem[_49923 + 64] == mem[_49923 + 92 len 4]
                            require ext_code.size(address(_49808))
                            staticcall address(_49808).token0() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _50019 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_50019] == mem[_50019 + 12 len 20]
                            if mem[_50019 + 12 len 20] != address(_46065):
                                _50058 = mem[_48266 + 64]
                                mem[mem[64] + 4] = w
                                mem[mem[64] + 36] = Mask(112, 0, _49939)
                                mem[mem[64] + 68] = Mask(112, 0, _49955)
                                require ext_code.size(address(_50058))
                                staticcall address(_50058).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                        gas gas_remaining wei
                                       args w, _49939 << 144, Mask(112, 0, _49955)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _50147 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _50179 = mem[_50147]
                                require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                                mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50147]
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45992 = mem[t]
                                _48155 = mem[mem[_9641]]
                                idx = idx + 1
                                w = _50179
                                continue 
                            _50090 = mem[_48266 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49955)
                            mem[mem[64] + 68] = Mask(112, 0, _49939)
                            require ext_code.size(address(_50090))
                            staticcall address(_50090).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49955 << 144, Mask(112, 0, _49939)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _50163 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _50203 = mem[_50163]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50163]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45992 = mem[t]
                            _48155 = mem[mem[_9641]]
                            idx = idx + 1
                            w = _50203
                            continue 
                        require ext_code.size(address(_48395))
                        staticcall address(_48395).FACTORY() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49489 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49543 = mem[_49489]
                        require mem[_49489] == mem[_49489 + 12 len 20]
                        mem[mem[64] + 4] = address(_46036)
                        mem[mem[64] + 36] = address(_46065)
                        require ext_code.size(address(_49543))
                        staticcall address(_49543).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_46036), address(_46065)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49777 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49826 = mem[_49777]
                        require mem[_49777] == mem[_49777 + 12 len 20]
                        require ext_code.size(mem[_49777 + 12 len 20])
                        staticcall mem[_49777 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49931 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _49947 = mem[_49931]
                        require mem[_49931] == mem[_49931 + 18 len 14]
                        _49963 = mem[_49931 + 32]
                        require mem[_49931 + 32] == mem[_49931 + 50 len 14]
                        require mem[_49931 + 64] == mem[_49931 + 92 len 4]
                        require ext_code.size(address(_49826))
                        staticcall address(_49826).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50027 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_50027] == mem[_50027 + 12 len 20]
                        if mem[_50027 + 12 len 20] != address(_46065):
                            _50088 = mem[_48266 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49947)
                            mem[mem[64] + 68] = Mask(112, 0, _49963)
                            require ext_code.size(address(_50088))
                            staticcall address(_50088).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49947 << 144, Mask(112, 0, _49963)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _50162 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _50201 = mem[_50162]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50162]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45992 = mem[t]
                            _48155 = mem[mem[_9641]]
                            idx = idx + 1
                            w = _50201
                            continue 
                        _50113 = mem[_48266 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _49963)
                        mem[mem[64] + 68] = Mask(112, 0, _49947)
                        require ext_code.size(address(_50113))
                        staticcall address(_50113).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _49963 << 144, Mask(112, 0, _49947)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50178 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _50226 = mem[_50178]
                        require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                        mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50178]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        _45992 = mem[t]
                        _48155 = mem[mem[_9641]]
                        idx = idx + 1
                        w = _50226
                        continue 
                    require idx < mem[_43962]
                    mem[(32 * idx) + _43962 + 32] = mem[_46195 + 76 len 20]
                    _48265 = mem[_46195 + 64]
                    _49273 = mem[mem[_6428]]
                    s = 0
                    while s < _49273:
                        _49320 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_49320] = 0
                        mem[_49320 + 32] = 0
                        mem[_49320 + 64] = 0
                        mem[_49320 + 96] = 0
                        mem[_49320 + 128] = 0
                        require s < mem[mem[_6428]]
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48265):
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48265):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45992 = mem[t]
                                _49273 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46065):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45992 = mem[t]
                                _49273 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46036):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45992 = mem[t]
                                _49273 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _49613 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _49614 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _49683 = mem[_46195 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49613)
                            mem[mem[64] + 68] = Mask(112, 0, _49614)
                            require ext_code.size(address(_49683))
                            staticcall address(_49683).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49613 << 144, Mask(112, 0, _49614)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49805 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49840 = mem[_49805]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49805]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45992 = mem[t]
                            _49273 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _49840
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46036):
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48265):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45992 = mem[t]
                                _49273 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46065):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45992 = mem[t]
                                _49273 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46036):
                                _43865 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_43865] = 26
                                mem[_43865 + 32] = 'SafeMath: division by zero'
                                _45992 = mem[t]
                                _49273 = mem[mem[_6428]]
                                s = s + 1
                                continue 
                            _49645 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _49646 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _49717 = mem[_46195 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49645)
                            mem[mem[64] + 68] = Mask(112, 0, _49646)
                            require ext_code.size(address(_49717))
                            staticcall address(_49717).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49645 << 144, Mask(112, 0, _49646)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49825 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49857 = mem[_49825]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49825]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45992 = mem[t]
                            _49273 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _49857
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] == address(_46065):
                            _49541 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                            _49542 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                            _49583 = mem[_46195 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49541)
                            mem[mem[64] + 68] = Mask(112, 0, _49542)
                            require ext_code.size(address(_49583))
                            staticcall address(_49583).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49541 << 144, Mask(112, 0, _49542)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _49719 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _49776 = mem[_49719]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49719]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45992 = mem[t]
                            _49273 = mem[mem[_6428]]
                            idx = idx + 1
                            w = _49776
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 140 len 20] != address(_48265):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45992 = mem[t]
                            _49273 = mem[mem[_6428]]
                            s = s + 1
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 12 len 20] != address(_46065):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45992 = mem[t]
                            _49273 = mem[mem[_6428]]
                            s = s + 1
                            continue 
                        if mem[mem[(32 * s) + mem[_6428] + 32] + 44 len 20] != address(_46036):
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45992 = mem[t]
                            _49273 = mem[mem[_6428]]
                            s = s + 1
                            continue 
                        _49685 = mem[mem[(32 * s) + mem[_6428] + 32] + 96]
                        _49686 = mem[mem[(32 * s) + mem[_6428] + 32] + 64]
                        _49750 = mem[_46195 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _49685)
                        mem[mem[64] + 68] = Mask(112, 0, _49686)
                        require ext_code.size(address(_49750))
                        staticcall address(_49750).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _49685 << 144, Mask(112, 0, _49686)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49841 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49887 = mem[_49841]
                        require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                        mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_49841]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        _45992 = mem[t]
                        _49273 = mem[mem[_6428]]
                        idx = idx + 1
                        w = _49887
                        continue 
                    require ext_code.size(address(_48265))
                    staticcall address(_48265).factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if ext_call.success:
                        _49382 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49442 = mem[_49382]
                        require mem[_49382] == mem[_49382 + 12 len 20]
                        mem[mem[64] + 4] = address(_46036)
                        mem[mem[64] + 36] = address(_46065)
                        require ext_code.size(address(_49442))
                        staticcall address(_49442).0xe6a43905 with:
                                gas gas_remaining wei
                               args address(_46036), address(_46065)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49748 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _49804 = mem[_49748]
                        require mem[_49748] == mem[_49748 + 12 len 20]
                        require ext_code.size(mem[_49748 + 12 len 20])
                        staticcall mem[_49748 + 12 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _49922 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _49938 = mem[_49922]
                        require mem[_49922] == mem[_49922 + 18 len 14]
                        _49954 = mem[_49922 + 32]
                        require mem[_49922 + 32] == mem[_49922 + 50 len 14]
                        require mem[_49922 + 64] == mem[_49922 + 92 len 4]
                        require ext_code.size(address(_49804))
                        staticcall address(_49804).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50018 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_50018] == mem[_50018 + 12 len 20]
                        if mem[_50018 + 12 len 20] != address(_46065):
                            _50056 = mem[_46195 + 64]
                            mem[mem[64] + 4] = w
                            mem[mem[64] + 36] = Mask(112, 0, _49938)
                            mem[mem[64] + 68] = Mask(112, 0, _49954)
                            require ext_code.size(address(_50056))
                            staticcall address(_50056).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                    gas gas_remaining wei
                                   args w, _49938 << 144, Mask(112, 0, _49954)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _50145 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _50177 = mem[_50145]
                            require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                            mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50145]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            _45992 = mem[t]
                            idx = idx + 1
                            w = _50177
                            continue 
                        _50086 = mem[_46195 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _49954)
                        mem[mem[64] + 68] = Mask(112, 0, _49938)
                        require ext_code.size(address(_50086))
                        staticcall address(_50086).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _49954 << 144, Mask(112, 0, _49938)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50161 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _50200 = mem[_50161]
                        require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                        mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50161]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        _45992 = mem[t]
                        idx = idx + 1
                        w = _50200
                        continue 
                    require ext_code.size(address(_48265))
                    staticcall address(_48265).FACTORY() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _49486 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _49538 = mem[_49486]
                    require mem[_49486] == mem[_49486 + 12 len 20]
                    mem[mem[64] + 4] = address(_46036)
                    mem[mem[64] + 36] = address(_46065)
                    require ext_code.size(address(_49538))
                    staticcall address(_49538).0xe6a43905 with:
                            gas gas_remaining wei
                           args address(_46036), address(_46065)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _49774 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _49824 = mem[_49774]
                    require mem[_49774] == mem[_49774 + 12 len 20]
                    require ext_code.size(mem[_49774 + 12 len 20])
                    staticcall mem[_49774 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _49930 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _49946 = mem[_49930]
                    require mem[_49930] == mem[_49930 + 18 len 14]
                    _49962 = mem[_49930 + 32]
                    require mem[_49930 + 32] == mem[_49930 + 50 len 14]
                    require mem[_49930 + 64] == mem[_49930 + 92 len 4]
                    require ext_code.size(address(_49824))
                    staticcall address(_49824).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _50026 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_50026] == mem[_50026 + 12 len 20]
                    if mem[_50026 + 12 len 20] != address(_46065):
                        _50084 = mem[_46195 + 64]
                        mem[mem[64] + 4] = w
                        mem[mem[64] + 36] = Mask(112, 0, _49946)
                        mem[mem[64] + 68] = Mask(112, 0, _49962)
                        require ext_code.size(address(_50084))
                        staticcall address(_50084).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                                gas gas_remaining wei
                               args w, _49946 << 144, Mask(112, 0, _49962)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _50160 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _50198 = mem[_50160]
                        require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                        mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50160]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        _45992 = mem[t]
                        idx = idx + 1
                        w = _50198
                        continue 
                    _50110 = mem[_46195 + 64]
                    mem[mem[64] + 4] = w
                    mem[mem[64] + 36] = Mask(112, 0, _49962)
                    mem[mem[64] + 68] = Mask(112, 0, _49946)
                    require ext_code.size(address(_50110))
                    staticcall address(_50110).getAmountOut(uint256 rg1, uint256 rg2, uint256 rg3) with:
                            gas gas_remaining wei
                           args w, _49962 << 144, Mask(112, 0, _49946)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _50176 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _50223 = mem[_50176]
                    require idx < mem[_43962 + (32 * _43952 - 1) + 32]
                    mem[(32 * idx) + _43962 + (32 * _43952 - 1) + 64] = mem[_50176]
                    _43865 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_43865] = 26
                    mem[_43865 + 32] = 'SafeMath: division by zero'
                    _45992 = mem[t]
                    idx = idx + 1
                    w = _50223
                    continue 
                if u / _12850 > w:
                    _46175 = mem[64]
                    mem[mem[64]] = 0
                    mem[mem[64] + 32] = 0
                    mem[mem[64] + 64] = 160
                    _46239 = mem[t]
                    mem[mem[64] + 160] = mem[t]
                    idx = 0
                    u = t + 32
                    v = mem[64] + 192
                    while idx < _46239:
                        mem[v] = mem[u + 12 len 20]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_46175 + 96] = (32 * _46239) + 192
                    _48235 = mem[s]
                    mem[_46175 + (32 * _46239) + 192] = mem[s]
                    idx = 0
                    t = s + 32
                    u = _46175 + (32 * _46239) + 224
                    while idx < _48235:
                        mem[u] = mem[t + 12 len 20]
                        _43865 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_43865] = 26
                        mem[_43865 + 32] = 'SafeMath: division by zero'
                        idx = idx + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    # nil
                else:
                    if w - (u / _12850) < 0:
                        _46194 = mem[64]
                        mem[mem[64]] = 0
                        mem[mem[64] + 32] = 0
                        mem[mem[64] + 64] = 160
                        _46265 = mem[t]
                        mem[mem[64] + 160] = mem[t]
                        idx = 0
                        u = t + 32
                        v = mem[64] + 192
                        while idx < _46265:
                            mem[v] = mem[u + 12 len 20]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_46194 + 96] = (32 * _46265) + 192
                        _48234 = mem[s]
                        mem[_46194 + (32 * _46265) + 192] = mem[s]
                        idx = 0
                        t = s + 32
                        u = _46194 + (32 * _46265) + 224
                        while idx < _48234:
                            mem[u] = mem[t + 12 len 20]
                            _43865 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_43865] = 26
                            mem[_43865 + 32] = 'SafeMath: division by zero'
                            idx = idx + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        # nil
                    else:
                        if w - (u / _12850) <= 0:
                            if not mem[_9640 + 32]:
                                if v + 1 < 1:
                                    if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    u = (10^18 * v) + 10^18
                                    v = v + 1
                                    continue 
                                _46442 = mem[64]
                                mem[mem[64]] = 0
                                mem[mem[64] + 32] = 0
                                mem[mem[64] + 64] = 160
                                _46554 = mem[t]
                                mem[mem[64] + 160] = mem[t]
                                idx = 0
                                u = t + 32
                                v = mem[64] + 192
                                while idx < _46554:
                                    mem[v] = mem[u + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_46442 + 96] = (32 * _46554) + 192
                                _48231 = mem[s]
                                mem[_46442 + (32 * _46554) + 192] = mem[s]
                                idx = 0
                                t = s + 32
                                u = _46442 + (32 * _46554) + 224
                                while idx < _48231:
                                    mem[u] = mem[t + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                # nil
                            else:
                                if _12850 * mem[_9640 + 32] / mem[_9640 + 32] != _12850:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if v < _12850 * mem[_9640 + 32]:
                                    if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    u = (10^18 * v) + 10^18
                                    v = v + 1
                                    continue 
                                _46492 = mem[64]
                                mem[mem[64]] = 0
                                mem[mem[64] + 32] = 0
                                mem[mem[64] + 64] = 160
                                _46607 = mem[t]
                                mem[mem[64] + 160] = mem[t]
                                idx = 0
                                u = t + 32
                                v = mem[64] + 192
                                while idx < _46607:
                                    mem[v] = mem[u + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_46492 + 96] = (32 * _46607) + 192
                                _48230 = mem[s]
                                mem[_46492 + (32 * _46607) + 192] = mem[s]
                                idx = 0
                                t = s + 32
                                u = _46492 + (32 * _46607) + 224
                                while idx < _48230:
                                    mem[u] = mem[t + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                # nil
                        else:
                            if not mem[_9640 + 32]:
                                if v + 1 < 1:
                                    if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    u = (10^18 * v) + 10^18
                                    v = v + 1
                                    continue 
                                _46493 = mem[64]
                                mem[mem[64]] = w - (u / _12850)
                                mem[mem[64] + 32] = u / _12850
                                mem[mem[64] + 64] = 160
                                _46609 = mem[t]
                                mem[mem[64] + 160] = mem[t]
                                idx = 0
                                u = t + 32
                                v = mem[64] + 192
                                while idx < _46609:
                                    mem[v] = mem[u + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_46493 + 96] = (32 * _46609) + 192
                                _48233 = mem[s]
                                mem[_46493 + (32 * _46609) + 192] = mem[s]
                                idx = 0
                                t = s + 32
                                u = _46493 + (32 * _46609) + 224
                                while idx < _48233:
                                    mem[u] = mem[t + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                # nil
                            else:
                                if _12850 * mem[_9640 + 32] / mem[_9640 + 32] != _12850:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if v < _12850 * mem[_9640 + 32]:
                                    if (10^18 * v) + 10^18 / 10^18 != v + 1:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    u = (10^18 * v) + 10^18
                                    v = v + 1
                                    continue 
                                _46556 = mem[64]
                                mem[mem[64]] = w - (u / _12850)
                                mem[mem[64] + 32] = u / _12850
                                mem[mem[64] + 64] = 160
                                _46670 = mem[t]
                                mem[mem[64] + 160] = mem[t]
                                idx = 0
                                u = t + 32
                                v = mem[64] + 192
                                while idx < _46670:
                                    mem[v] = mem[u + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_46556 + 96] = (32 * _46670) + 192
                                _48232 = mem[s]
                                mem[_46556 + (32 * _46670) + 192] = mem[s]
                                idx = 0
                                t = s + 32
                                u = _46556 + (32 * _46670) + 224
                                while idx < _48232:
                                    mem[u] = mem[t + 12 len 20]
                                    _43865 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_43865] = 26
                                    mem[_43865 + 32] = 'SafeMath: division by zero'
                                    idx = idx + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                # nil
    _43882 = mem[64]
    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
    mem[mem[64] + 4] = 32
    _43887 = mem[_43865]
    mem[mem[64] + 36] = mem[_43865]
    mem[mem[64] + 68 len ceil32(_43887)] = mem[_43865 + 32 len ceil32(_43887)]
    if ceil32(_43887) <= _43887:
        revert with 0, 32, mem[mem[64] + 36 len ceil32(_43887) + 32]
    mem[mem[64] + _43887 + 68] = 0
    revert with memory
      from mem[64]
       len ceil32(_43887) + _43882 + -mem[64] + 68
}



}
