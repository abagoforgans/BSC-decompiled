contract main {




// =====================  Runtime code  =====================


#
#  - transferFrom(address arg1, address arg2, uint256 arg3)
#
address owner;
array of struct stor1;
array of struct stor2;
mapping of uint256 balanceOf;
mapping of uint256 allowance;
mapping of uint8 stor6;
uint256 _decimals;
uint256 _totalSupply;
uint256 _maxTxAmount;
uint256 _liquidityFee;
uint256 sub_a61b83e3;
uint256 _marketingFee;
uint256 _sellLiquidityFee;
uint256 sub_a7acc074;
uint256 _sellMarketingFee;
uint256 _sellFee;
address BUSDAddress;
uint256 _fee;
address _marketingWalletAddress;
uint8 sub_09afb3ce; offset 160
uint128 stor20; offset 160
address sub_b768d6cdAddress;
uint8 stor22;
array of struct stor23;
address stor24;

function sub_09afb3ce(?) payable {
    return bool(sub_09afb3ce)
}

function totalSupply() payable {
    return _totalSupply
}

function _marketingFee() payable {
    return _marketingFee
}

function decimals() payable {
    return _decimals
}

function _decimals() payable {
    return _decimals
}

function _totalSupply() payable {
    return _totalSupply
}

function BUSD() payable {
    return BUSDAddress
}

function _sellFee() payable {
    return _sellFee
}

function _liquidityFee() payable {
    return _liquidityFee
}

function balanceOf(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return balanceOf[address(arg1)]
}

function _maxTxAmount() payable {
    return _maxTxAmount
}

function _sellLiquidityFee() payable {
    return _sellLiquidityFee
}

function owner() payable {
    return owner
}

function _marketingWallet() payable {
    return _marketingWalletAddress
}

function sub_a61b83e3(?) payable {
    return sub_a61b83e3
}

function sub_a7acc074(?) payable {
    return sub_a7acc074
}

function sub_b768d6cd(?) payable {
    return sub_b768d6cdAddress
}

function _fee() payable {
    return _fee
}

function _sellMarketingFee() payable {
    return _sellMarketingFee
}

function allowance(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return allowance[address(arg1)][address(arg2)]
}

function _fallback() payable {
    revert
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function setSwapEnabled(bool arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor20 = Mask(96, 0, arg1)
}

function setMarketingWallet(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    _marketingWalletAddress = arg1
}

function approve(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'IERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'IERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = arg2
    emit Approval(arg2, msg.sender, arg1);
    return 1
}

function increaseAllowance(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if allowance[address(msg.sender)][address(arg1)] > -arg2 - 1:
        revert with 'NH{q', 17
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'IERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'IERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] += arg2
    emit Approval((allowance[address(msg.sender)][address(arg1)] + arg2), msg.sender, arg1);
    return 1
}

function decreaseAllowance(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    require allowance[address(msg.sender)][address(arg1)] >= arg2
    if allowance[address(msg.sender)][address(arg1)] < arg2:
        revert with 'NH{q', 17
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'IERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'IERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] -= arg2
    emit Approval((allowance[address(msg.sender)][address(arg1)] - arg2), msg.sender, arg1);
    return 1
}

function name() payable {
    if bool(stor1.length):
        if bool(stor1.length) == stor1.length.field_1 < 32:
            revert with 'NH{q', 34
        if bool(stor1.length):
            if bool(stor1.length) == stor1.length.field_1 < 32:
                revert with 'NH{q', 34
            if stor1.length.field_1:
                if 31 < stor1.length.field_1:
                    mem[128] = uint256(stor1.field_0)
                    idx = 128
                    s = 0
                    while stor1.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor1[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor1.length.field_1), data=mem[128 len ceil32(stor1.length.field_1)])
                mem[128] = 256 * stor1.length.field_8
        else:
            if bool(stor1.length) == stor1.length.field_1 < 32:
                revert with 'NH{q', 34
            if stor1.length.field_1:
                if 31 < stor1.length.field_1:
                    mem[128] = uint256(stor1.field_0)
                    idx = 128
                    s = 0
                    while stor1.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor1[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor1.length.field_1), data=mem[128 len ceil32(stor1.length.field_1)])
                mem[128] = 256 * stor1.length.field_8
        mem[ceil32(stor1.length.field_1) + 192 len ceil32(stor1.length.field_1)] = mem[128 len ceil32(stor1.length.field_1)]
        if ceil32(stor1.length.field_1) > stor1.length.field_1:
            mem[ceil32(stor1.length.field_1) + stor1.length.field_1 + 192] = 0
        return Array(len=2 * Mask(256, -1, stor1.length.field_1), data=mem[128 len ceil32(stor1.length.field_1)], mem[(2 * ceil32(stor1.length.field_1)) + 192 len 2 * ceil32(stor1.length.field_1)]), 
    if bool(stor1.length) == stor1.length.field_1 < 32:
        revert with 'NH{q', 34
    if bool(stor1.length):
        if bool(stor1.length) == stor1.length.field_1 < 32:
            revert with 'NH{q', 34
        if stor1.length.field_1:
            if 31 < stor1.length.field_1:
                mem[128] = uint256(stor1.field_0)
                idx = 128
                s = 0
                while stor1.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor1[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor1.length % 128, data=mem[128 len ceil32(stor1.length.field_1)])
            mem[128] = 256 * stor1.length.field_8
    else:
        if bool(stor1.length) == stor1.length.field_1 < 32:
            revert with 'NH{q', 34
        if stor1.length.field_1:
            if 31 < stor1.length.field_1:
                mem[128] = uint256(stor1.field_0)
                idx = 128
                s = 0
                while stor1.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor1[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor1.length % 128, data=mem[128 len ceil32(stor1.length.field_1)])
            mem[128] = 256 * stor1.length.field_8
    mem[ceil32(stor1.length.field_1) + 192 len ceil32(stor1.length.field_1)] = mem[128 len ceil32(stor1.length.field_1)]
    if ceil32(stor1.length.field_1) > stor1.length.field_1:
        mem[ceil32(stor1.length.field_1) + stor1.length.field_1 + 192] = 0
    return Array(len=stor1.length % 128, data=mem[128 len ceil32(stor1.length.field_1)], mem[(2 * ceil32(stor1.length.field_1)) + 192 len 2 * ceil32(stor1.length.field_1)]), 
}

function symbol() payable {
    if bool(stor2.length):
        if bool(stor2.length) == stor2.length.field_1 < 32:
            revert with 'NH{q', 34
        if bool(stor2.length):
            if bool(stor2.length) == stor2.length.field_1 < 32:
                revert with 'NH{q', 34
            if stor2.length.field_1:
                if 31 < stor2.length.field_1:
                    mem[128] = uint256(stor2.field_0)
                    idx = 128
                    s = 0
                    while stor2.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor2[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor2.length.field_1), data=mem[128 len ceil32(stor2.length.field_1)])
                mem[128] = 256 * stor2.length.field_8
        else:
            if bool(stor2.length) == stor2.length.field_1 < 32:
                revert with 'NH{q', 34
            if stor2.length.field_1:
                if 31 < stor2.length.field_1:
                    mem[128] = uint256(stor2.field_0)
                    idx = 128
                    s = 0
                    while stor2.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor2[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor2.length.field_1), data=mem[128 len ceil32(stor2.length.field_1)])
                mem[128] = 256 * stor2.length.field_8
        mem[ceil32(stor2.length.field_1) + 192 len ceil32(stor2.length.field_1)] = mem[128 len ceil32(stor2.length.field_1)]
        if ceil32(stor2.length.field_1) > stor2.length.field_1:
            mem[ceil32(stor2.length.field_1) + stor2.length.field_1 + 192] = 0
        return Array(len=2 * Mask(256, -1, stor2.length.field_1), data=mem[128 len ceil32(stor2.length.field_1)], mem[(2 * ceil32(stor2.length.field_1)) + 192 len 2 * ceil32(stor2.length.field_1)]), 
    if bool(stor2.length) == stor2.length.field_1 < 32:
        revert with 'NH{q', 34
    if bool(stor2.length):
        if bool(stor2.length) == stor2.length.field_1 < 32:
            revert with 'NH{q', 34
        if stor2.length.field_1:
            if 31 < stor2.length.field_1:
                mem[128] = uint256(stor2.field_0)
                idx = 128
                s = 0
                while stor2.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor2[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor2.length % 128, data=mem[128 len ceil32(stor2.length.field_1)])
            mem[128] = 256 * stor2.length.field_8
    else:
        if bool(stor2.length) == stor2.length.field_1 < 32:
            revert with 'NH{q', 34
        if stor2.length.field_1:
            if 31 < stor2.length.field_1:
                mem[128] = uint256(stor2.field_0)
                idx = 128
                s = 0
                while stor2.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor2[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor2.length % 128, data=mem[128 len ceil32(stor2.length.field_1)])
            mem[128] = 256 * stor2.length.field_8
    mem[ceil32(stor2.length.field_1) + 192 len ceil32(stor2.length.field_1)] = mem[128 len ceil32(stor2.length.field_1)]
    if ceil32(stor2.length.field_1) > stor2.length.field_1:
        mem[ceil32(stor2.length.field_1) + stor2.length.field_1 + 192] = 0
    return Array(len=stor2.length % 128, data=mem[128 len ceil32(stor2.length.field_1)], mem[(2 * ceil32(stor2.length.field_1)) + 192 len 2 * ceil32(stor2.length.field_1)]), 
}

function transfer(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    require msg.sender
    require arg1
    mem[128] = address(arg1)
    mem[96] = 20
    if sha3(arg1) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
        if msg.sender == arg1:
            if not this.address:
                revert with 0, 'IERC20: approve from the zero address'
            if not stor24:
                revert with 0, 'IERC20: approve to the zero address'
            allowance[address(this.address)][stor24] = arg2
            emit Approval(arg2, this.address, stor24);
            balanceOf[address(this.address)] = arg2
            mem[180] = this.address
            require ext_code.size(stor24)
            staticcall stor24.WETH() with:
                    gas gas_remaining wei
            mem[244] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            mem[212] = ext_call.return_data[12 len 20]
            stor22 = 1
            if block.timestamp > -21:
                revert with 'NH{q', 17
            mem[ceil32(return_data.size) + 244] = 0x791ac94700000000000000000000000000000000000000000000000000000000
            mem[ceil32(return_data.size) + 248] = arg2
            idx = 0
            s = 180
            t = ceil32(return_data.size) + 440
            while idx < 2:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(stor24)
            call stor24.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                 gas gas_remaining wei
                args arg2, 0, 160, address(arg1), block.timestamp + 20, 2, mem[ceil32(return_data.size) + 440 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            stor22 = 0
        else:
            if stor22:
                require ext_code.size(stor24)
                staticcall stor24.factory() with:
                        gas gas_remaining wei
                mem[148] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                require ext_code.size(stor24)
                staticcall stor24.WETH() with:
                        gas gas_remaining wei
                mem[ceil32(return_data.size) + 148] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                mem[(2 * ceil32(return_data.size)) + 152] = this.address
                mem[(2 * ceil32(return_data.size)) + 184] = address(ext_call.return_data[0])
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args address(this.address), address(ext_call.return_data[0])
                mem[(2 * ceil32(return_data.size)) + 148] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = (4 * ceil32(return_data.size)) + 148
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if ext_call.return_data[12 len 20] != msg.sender:
                    require ext_code.size(stor24)
                    staticcall stor24.factory() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(stor24)
                    staticcall stor24.WETH() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if arg1 == ext_call.return_data[12 len 20]:
                        if stor6[address(msg.sender)]:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if sha3(arg1) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if arg1 == this.address:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if stor22:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if not arg2:
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                mem[(8 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(10 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                       args mem[(10 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                mem[(10 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(12 * ceil32(return_data.size)) + 268] = this.address
                                mem[(12 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(ext_call.return_data[0]), mem[(12 * ceil32(return_data.size)) + 332 len 20 * ceil32(return_data.size)]
                                mem[(12 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if arg1 != ext_call.return_data[12 len 20]:
                                    require arg2 <= _maxTxAmount
                                    mem[(14 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.factory() with:
                                            gas gas_remaining wei
                                           args mem[(14 * ceil32(return_data.size)) + 268 len 24 * ceil32(return_data.size)]
                                    mem[(14 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(15 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.WETH() with:
                                            gas gas_remaining wei
                                           args mem[(15 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                    mem[(15 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(16 * ceil32(return_data.size)) + 268] = this.address
                                    mem[(16 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args mem[(16 * ceil32(return_data.size)) + 268 len (17 * ceil32(return_data.size)) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == arg1:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        mem[(16 * ceil32(return_data.size)) + 264] = arg2
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                        mem[(16 * ceil32(return_data.size)) + 264] = 1
                                        return memory
                                          from (16 * ceil32(return_data.size)) + 264
                                           len (31 * ceil32(return_data.size)) + 32
                                    stor23.length++
                                    stor23[stor23.length].field_0 = arg1
                                    stor23[stor23.length].field_256 = arg2
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    mem[(16 * ceil32(return_data.size)) + 328] = arg2
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    mem[(16 * ceil32(return_data.size)) + 328] = 1
                                    return memory
                                      from (16 * ceil32(return_data.size)) + 328
                                       len (31 * ceil32(return_data.size)) + 32
                            else:
                                if arg2 and _fee > -1 / arg2:
                                    revert with 'NH{q', 17
                                if not arg2:
                                    revert with 'NH{q', 18
                                if arg2 * _fee / arg2 != _fee:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                mem[(8 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(10 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                       args mem[(10 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                mem[(10 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(12 * ceil32(return_data.size)) + 268] = this.address
                                mem[(12 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(ext_call.return_data[0]), mem[(12 * ceil32(return_data.size)) + 332 len 20 * ceil32(return_data.size)]
                                mem[(12 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if arg1 != ext_call.return_data[12 len 20]:
                                    require arg2 <= _maxTxAmount
                                    mem[(14 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.factory() with:
                                            gas gas_remaining wei
                                           args mem[(14 * ceil32(return_data.size)) + 268 len 24 * ceil32(return_data.size)]
                                    mem[(14 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(15 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.WETH() with:
                                            gas gas_remaining wei
                                           args mem[(15 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                    mem[(15 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(16 * ceil32(return_data.size)) + 268] = this.address
                                    mem[(16 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args mem[(16 * ceil32(return_data.size)) + 268 len (17 * ceil32(return_data.size)) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == arg1:
                                        if arg2 < arg2 * _fee / 100:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[0] += arg2 * _fee / 100
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                        mem[(16 * ceil32(return_data.size)) + 264] = arg2 - (arg2 * _fee / 100)
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                        if arg2 * _fee / 100 > 0:
                                            mem[(16 * ceil32(return_data.size)) + 264] = arg2 * _fee / 100
                                            emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                        mem[(16 * ceil32(return_data.size)) + 264] = 1
                                        return memory
                                          from (16 * ceil32(return_data.size)) + 264
                                           len (31 * ceil32(return_data.size)) + 32
                                    stor23.length++
                                    stor23[stor23.length].field_0 = arg1
                                    stor23[stor23.length].field_256 = arg2
                                    if arg2 < arg2 * _fee / 100:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[0] += arg2 * _fee / 100
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                    mem[(16 * ceil32(return_data.size)) + 328] = arg2 - (arg2 * _fee / 100)
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    if arg2 * _fee / 100 > 0:
                                        mem[(16 * ceil32(return_data.size)) + 328] = arg2 * _fee / 100
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                    mem[(16 * ceil32(return_data.size)) + 328] = 1
                                    return memory
                                      from (16 * ceil32(return_data.size)) + 328
                                       len (31 * ceil32(return_data.size)) + 32
                            ('eq', ('param', 'arg1'), ('ext_call.return_data', 12, 20))
                            if not arg2:
                                require arg2 <= _maxTxAmount
                                mem[(14 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                       args mem[(14 * ceil32(return_data.size)) + 332 len 24 * ceil32(return_data.size)]
                                mem[(14 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(15 * ceil32(return_data.size)) + 328] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                       args mem[(15 * ceil32(return_data.size)) + 332 len 16 * ceil32(return_data.size)]
                                mem[(15 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(16 * ceil32(return_data.size)) + 332] = this.address
                                mem[(16 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args mem[(16 * ceil32(return_data.size)) + 332 len (17 * ceil32(return_data.size)) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] == arg1:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    mem[(16 * ceil32(return_data.size)) + 328] = arg2
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    mem[(16 * ceil32(return_data.size)) + 328] = 1
                                    return memory
                                      from (16 * ceil32(return_data.size)) + 328
                                       len (31 * ceil32(return_data.size)) + 32
                                stor23.length++
                                stor23[stor23.length].field_0 = arg1
                                stor23[stor23.length].field_256 = arg2
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                mem[(16 * ceil32(return_data.size)) + 392] = arg2
                                emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                            else:
                                if arg2 and _sellFee > -1 / arg2:
                                    revert with 'NH{q', 17
                                if not arg2:
                                    revert with 'NH{q', 18
                                if arg2 * _sellFee / arg2 != _sellFee:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(14 * ceil32(return_data.size)) + 396 len 24 * ceil32(return_data.size)]
                                require arg2 <= _maxTxAmount
                                mem[(14 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                       args mem[(14 * ceil32(return_data.size)) + 332 len 24 * ceil32(return_data.size)]
                                mem[(14 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(15 * ceil32(return_data.size)) + 328] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                       args mem[(15 * ceil32(return_data.size)) + 332 len 16 * ceil32(return_data.size)]
                                mem[(15 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(16 * ceil32(return_data.size)) + 332] = this.address
                                mem[(16 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args mem[(16 * ceil32(return_data.size)) + 332 len (17 * ceil32(return_data.size)) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] == arg1:
                                    if arg2 < arg2 * _sellFee / 100:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[0] += arg2 * _sellFee / 100
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                    mem[(16 * ceil32(return_data.size)) + 328] = arg2 - (arg2 * _sellFee / 100)
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    if arg2 * _sellFee / 100 > 0:
                                        mem[(16 * ceil32(return_data.size)) + 328] = arg2 * _sellFee / 100
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                    mem[(16 * ceil32(return_data.size)) + 328] = 1
                                    return memory
                                      from (16 * ceil32(return_data.size)) + 328
                                       len (31 * ceil32(return_data.size)) + 32
                                stor23.length++
                                stor23[stor23.length].field_0 = arg1
                                stor23[stor23.length].field_256 = arg2
                                if arg2 < arg2 * _sellFee / 100:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[0] += arg2 * _sellFee / 100
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                mem[(16 * ceil32(return_data.size)) + 392] = arg2 - (arg2 * _sellFee / 100)
                                emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                if arg2 * _sellFee / 100 > 0:
                                    mem[(16 * ceil32(return_data.size)) + 392] = arg2 * _sellFee / 100
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                            mem[(16 * ceil32(return_data.size)) + 392] = 1
                            return memory
                              from (16 * ceil32(return_data.size)) + 392
                               len (31 * ceil32(return_data.size)) + 32
                    require ext_code.size(stor24)
                    staticcall stor24.factory() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(stor24)
                    staticcall stor24.WETH() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if stor6[address(msg.sender)]:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if stor6[address(arg1)]:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if sha3(arg1) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if arg1 == this.address:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if ext_call.return_data[12 len 20] != msg.sender:
                        if msg.sender == address(ext_call.return_data[0]):
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                    else:
                        if stor6[address(arg1)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                    if stor22:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if not arg2:
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[(15 * ceil32(return_data.size)) + 268] = this.address
                        mem[(15 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0]), mem[(15 * ceil32(return_data.size)) + 332 len 5 * ceil32(return_data.size)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if arg1 != ext_call.return_data[12 len 20]:
                            require arg2 <= _maxTxAmount
                            mem[(17 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                                   args mem[(17 * ceil32(return_data.size)) + 268 len 8 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(19 * ceil32(return_data.size)) + 268] = this.address
                            mem[(19 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] == arg1:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2,
                                              mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              arg1,
                                return 1, mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)]
                            stor23.length++
                            stor23[stor23.length].field_0 = arg1
                            stor23[stor23.length].field_256 = arg2
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2,
                                          mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                    else:
                        if arg2 and _fee > -1 / arg2:
                            revert with 'NH{q', 17
                        if not arg2:
                            revert with 'NH{q', 18
                        if arg2 * _fee / arg2 != _fee:
                            revert with 0, 'SafeMath: multiplication overflow'
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[(15 * ceil32(return_data.size)) + 268] = this.address
                        mem[(15 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0]), mem[(15 * ceil32(return_data.size)) + 332 len 5 * ceil32(return_data.size)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if arg1 != ext_call.return_data[12 len 20]:
                            require arg2 <= _maxTxAmount
                            mem[(17 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                                   args mem[(17 * ceil32(return_data.size)) + 268 len 8 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(19 * ceil32(return_data.size)) + 268] = this.address
                            mem[(19 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] == arg1:
                                if arg2 < arg2 * _fee / 100:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[0] += arg2 * _fee / 100
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 - (arg2 * _fee / 100),
                                              mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              arg1,
                                if arg2 * _fee / 100 > 0:
                                    emit Transfer(address arg1, address arg2, uint256 arg3):
                                                  arg2 * _fee / 100,
                                                  mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                                  msg.sender,
                                                  0,
                                return 1, mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)]
                            stor23.length++
                            stor23[stor23.length].field_0 = arg1
                            stor23[stor23.length].field_256 = arg2
                            if arg2 < arg2 * _fee / 100:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[0] += arg2 * _fee / 100
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2 - (arg2 * _fee / 100),
                                          mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            if arg2 * _fee / 100 > 0:
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 * _fee / 100,
                                              mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              0,
                            return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                    ('eq', ('param', 'arg1'), ('ext_call.return_data', 12, 20))
                    if not arg2:
                        require arg2 <= _maxTxAmount
                        mem[(17 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                               args mem[(17 * ceil32(return_data.size)) + 332 len 8 * ceil32(return_data.size)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[(19 * ceil32(return_data.size)) + 332] = this.address
                        mem[(19 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ext_call.return_data[12 len 20] == arg1:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2,
                                          mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                        stor23.length++
                        stor23[stor23.length].field_0 = arg1
                        stor23[stor23.length].field_256 = arg2
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(address arg1, address arg2, uint256 arg3):
                                      arg2,
                                      mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                      msg.sender,
                                      arg1,
                    else:
                        if arg2 and _sellFee > -1 / arg2:
                            revert with 'NH{q', 17
                        if not arg2:
                            revert with 'NH{q', 18
                        if arg2 * _sellFee / arg2 != _sellFee:
                            revert with 0, 'SafeMath: multiplication overflow', mem[(17 * ceil32(return_data.size)) + 396 len 9 * ceil32(return_data.size)]
                        require arg2 <= _maxTxAmount
                        mem[(17 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                               args mem[(17 * ceil32(return_data.size)) + 332 len 8 * ceil32(return_data.size)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[(19 * ceil32(return_data.size)) + 332] = this.address
                        mem[(19 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ext_call.return_data[12 len 20] == arg1:
                            if arg2 < arg2 * _sellFee / 100:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[0] += arg2 * _sellFee / 100
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2 - (arg2 * _sellFee / 100),
                                          mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            if arg2 * _sellFee / 100 > 0:
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 * _sellFee / 100,
                                              mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              0,
                            return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                        stor23.length++
                        stor23[stor23.length].field_0 = arg1
                        stor23[stor23.length].field_256 = arg2
                        if arg2 < arg2 * _sellFee / 100:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                            revert with 'NH{q', 17
                        balanceOf[0] += arg2 * _sellFee / 100
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                        emit Transfer(address arg1, address arg2, uint256 arg3):
                                      arg2 - (arg2 * _sellFee / 100),
                                      mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                      msg.sender,
                                      arg1,
                        if arg2 * _sellFee / 100 > 0:
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2 * _sellFee / 100,
                                          mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          0,
                    return 1, mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)]
                idx = 0
                while idx < stor23.length:
                    mem[0] = stor23[idx].field_0
                    mem[32] = 3
                    _640 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_640] = 26
                    mem[_640 + 32] = 'SafeMath: division by zero'
                    if idx >= stor23.length:
                        revert with 'NH{q', 50
                    mem[0] = stor23[idx].field_0
                    mem[32] = 3
                    balanceOf[stor23[idx].field_0] = balanceOf[stor23[idx].field_0] / 100
                    if idx == -1:
                        revert with 'NH{q', 17
                    idx = idx + 1
                    continue 
                stor23.length = 0
                mem[0] = 23
                idx = 0
                while 2 * stor23.length > idx:
                    stor23[idx].field_0 = 0
                    stor23[idx].field_256 = 0
                    idx = idx + 2
                    continue 
                require ext_code.size(stor24)
                staticcall stor24.factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8568 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8658 = mem[_8568]
                require mem[_8568] == mem[_8568 + 12 len 20]
                require ext_code.size(stor24)
                staticcall stor24.WETH() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9246 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9337 = mem[_9246]
                require mem[_9246] == mem[_9246 + 12 len 20]
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(_9337)
                require ext_code.size(address(_8658))
                staticcall address(_8658).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args address(this.address), address(_9337)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10654 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_10654] == mem[_10654 + 12 len 20]
                if arg1 != mem[_10654 + 12 len 20]:
                    require ext_code.size(stor24)
                    staticcall stor24.factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11674 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11806 = mem[_11674]
                    require mem[_11674] == mem[_11674 + 12 len 20]
                    require ext_code.size(stor24)
                    staticcall stor24.WETH() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12193 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12303 = mem[_12193]
                    require mem[_12193] == mem[_12193 + 12 len 20]
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(_12303)
                    require ext_code.size(address(_11806))
                    staticcall address(_11806).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_12303)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12657 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12729 = mem[_12657]
                    require mem[_12657] == mem[_12657 + 12 len 20]
                    if mem[_12657 + 12 len 20] != msg.sender:
                        if stor6[address(msg.sender)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                        else:
                            mem[0] = arg1
                            mem[32] = 6
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[mem[64] + 32] = address(arg1)
                                _13095 = mem[64]
                                mem[mem[64]] = 20
                                mem[64] = mem[64] + 52
                                if sha3(mem[_13095 + 32 len mem[_13095]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg1 == this.address:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if msg.sender == address(_12729):
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor22:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if not arg2:
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < 0:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -1:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                else:
                                                    if arg2 and _fee > -1 / arg2:
                                                        revert with 'NH{q', 17
                                                    if not arg2:
                                                        revert with 'NH{q', 18
                                                    if arg2 * _fee / arg2 != _fee:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < arg2 * _fee / 100:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[0] += arg2 * _fee / 100
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                        emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                        if arg2 * _fee / 100 > 0:
                                                            emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                    else:
                        if stor6[address(msg.sender)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                        else:
                            mem[0] = arg1
                            mem[32] = 6
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[mem[64] + 32] = address(arg1)
                                _13113 = mem[64]
                                mem[mem[64]] = 20
                                mem[64] = mem[64] + 52
                                if sha3(mem[_13113 + 32 len mem[_13113]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg1 == this.address:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if stor6[address(arg1)]:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor22:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if not arg2:
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < 0:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -1:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                else:
                                                    if arg2 and _fee > -1 / arg2:
                                                        revert with 'NH{q', 17
                                                    if not arg2:
                                                        revert with 'NH{q', 18
                                                    if arg2 * _fee / arg2 != _fee:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < arg2 * _fee / 100:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[0] += arg2 * _fee / 100
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                        emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                        if arg2 * _fee / 100 > 0:
                                                            emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                else:
                    mem[0] = msg.sender
                    mem[32] = 6
                    if stor6[address(msg.sender)]:
                        if stor6[address(msg.sender)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                        else:
                            mem[0] = arg1
                            mem[32] = 6
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[mem[64] + 32] = address(arg1)
                                _12264 = mem[64]
                                mem[mem[64]] = 20
                                mem[64] = mem[64] + 52
                                if sha3(mem[_12264 + 32 len mem[_12264]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg1 == this.address:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if stor6[address(msg.sender)]:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor22:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if not arg2:
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < 0:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -1:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                else:
                                                    if arg2 and _fee > -1 / arg2:
                                                        revert with 'NH{q', 17
                                                    if not arg2:
                                                        revert with 'NH{q', 18
                                                    if arg2 * _fee / arg2 != _fee:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < arg2 * _fee / 100:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[0] += arg2 * _fee / 100
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                        emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                        if arg2 * _fee / 100 > 0:
                                                            emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                    else:
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11727 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11837 = mem[_11727]
                        require mem[_11727] == mem[_11727 + 12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12232 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12328 = mem[_12232]
                        require mem[_12232] == mem[_12232 + 12 len 20]
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(_12328)
                        require ext_code.size(address(_11837))
                        staticcall address(_11837).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_12328)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12690 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12755 = mem[_12690]
                        require mem[_12690] == mem[_12690 + 12 len 20]
                        if mem[_12690 + 12 len 20] != msg.sender:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[0] = arg1
                                mem[32] = 6
                                if stor6[address(arg1)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[mem[64] + 32] = address(arg1)
                                    _13117 = mem[64]
                                    mem[mem[64]] = 20
                                    mem[64] = mem[64] + 52
                                    if sha3(mem[_13117 + 32 len mem[_13117]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg1 == this.address:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if msg.sender == address(_12755):
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if stor22:
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if not arg2:
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                    else:
                                                        if arg2 and _fee > -1 / arg2:
                                                            revert with 'NH{q', 17
                                                        if not arg2:
                                                            revert with 'NH{q', 18
                                                        if arg2 * _fee / arg2 != _fee:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _fee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _fee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                            emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                            if arg2 * _fee / 100 > 0:
                                                                emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                        else:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[0] = arg1
                                mem[32] = 6
                                if stor6[address(arg1)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[mem[64] + 32] = address(arg1)
                                    _13156 = mem[64]
                                    mem[mem[64]] = 20
                                    mem[64] = mem[64] + 52
                                    if sha3(mem[_13156 + 32 len mem[_13156]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg1 == this.address:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor6[address(arg1)]:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if stor22:
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if not arg2:
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                    else:
                                                        if arg2 and _fee > -1 / arg2:
                                                            revert with 'NH{q', 17
                                                        if not arg2:
                                                            revert with 'NH{q', 18
                                                        if arg2 * _fee / arg2 != _fee:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _fee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _fee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                            emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                            if arg2 * _fee / 100 > 0:
                                                                emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
            else:
                mem[32] = 3
                require balanceOf[address(msg.sender)] >= arg2
                require ext_code.size(stor24)
                staticcall stor24.factory() with:
                        gas gas_remaining wei
                mem[148] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                require ext_code.size(stor24)
                staticcall stor24.WETH() with:
                        gas gas_remaining wei
                mem[ceil32(return_data.size) + 148] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                mem[(2 * ceil32(return_data.size)) + 152] = this.address
                mem[(2 * ceil32(return_data.size)) + 184] = address(ext_call.return_data[0])
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args address(this.address), address(ext_call.return_data[0])
                mem[(2 * ceil32(return_data.size)) + 148] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = (4 * ceil32(return_data.size)) + 148
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if ext_call.return_data[12 len 20] != msg.sender:
                    require ext_code.size(stor24)
                    staticcall stor24.factory() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(stor24)
                    staticcall stor24.WETH() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if arg1 == ext_call.return_data[12 len 20]:
                        if stor6[address(msg.sender)]:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if sha3(arg1) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if arg1 == this.address:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if stor22:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if not arg2:
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                mem[(8 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(10 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                       args mem[(10 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                mem[(10 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(12 * ceil32(return_data.size)) + 268] = this.address
                                mem[(12 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(ext_call.return_data[0]), mem[(12 * ceil32(return_data.size)) + 332 len 20 * ceil32(return_data.size)]
                                mem[(12 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if arg1 != ext_call.return_data[12 len 20]:
                                    require arg2 <= _maxTxAmount
                                    mem[(14 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.factory() with:
                                            gas gas_remaining wei
                                           args mem[(14 * ceil32(return_data.size)) + 268 len 24 * ceil32(return_data.size)]
                                    mem[(14 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(15 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.WETH() with:
                                            gas gas_remaining wei
                                           args mem[(15 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                    mem[(15 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(16 * ceil32(return_data.size)) + 268] = this.address
                                    mem[(16 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args mem[(16 * ceil32(return_data.size)) + 268 len (17 * ceil32(return_data.size)) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == arg1:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        mem[(16 * ceil32(return_data.size)) + 264] = arg2
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                        mem[(16 * ceil32(return_data.size)) + 264] = 1
                                        return memory
                                          from (16 * ceil32(return_data.size)) + 264
                                           len (31 * ceil32(return_data.size)) + 32
                                    stor23.length++
                                    stor23[stor23.length].field_0 = arg1
                                    stor23[stor23.length].field_256 = arg2
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    mem[(16 * ceil32(return_data.size)) + 328] = arg2
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    mem[(16 * ceil32(return_data.size)) + 328] = 1
                                    return memory
                                      from (16 * ceil32(return_data.size)) + 328
                                       len (31 * ceil32(return_data.size)) + 32
                            else:
                                if arg2 and _fee > -1 / arg2:
                                    revert with 'NH{q', 17
                                if not arg2:
                                    revert with 'NH{q', 18
                                if arg2 * _fee / arg2 != _fee:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                mem[(8 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(10 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                       args mem[(10 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                mem[(10 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(12 * ceil32(return_data.size)) + 268] = this.address
                                mem[(12 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(ext_call.return_data[0]), mem[(12 * ceil32(return_data.size)) + 332 len 20 * ceil32(return_data.size)]
                                mem[(12 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if arg1 != ext_call.return_data[12 len 20]:
                                    require arg2 <= _maxTxAmount
                                    mem[(14 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.factory() with:
                                            gas gas_remaining wei
                                           args mem[(14 * ceil32(return_data.size)) + 268 len 24 * ceil32(return_data.size)]
                                    mem[(14 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(15 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.WETH() with:
                                            gas gas_remaining wei
                                           args mem[(15 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                    mem[(15 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(16 * ceil32(return_data.size)) + 268] = this.address
                                    mem[(16 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args mem[(16 * ceil32(return_data.size)) + 268 len (17 * ceil32(return_data.size)) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == arg1:
                                        if arg2 < arg2 * _fee / 100:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[0] += arg2 * _fee / 100
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                        mem[(16 * ceil32(return_data.size)) + 264] = arg2 - (arg2 * _fee / 100)
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                        if arg2 * _fee / 100 > 0:
                                            mem[(16 * ceil32(return_data.size)) + 264] = arg2 * _fee / 100
                                            emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                        mem[(16 * ceil32(return_data.size)) + 264] = 1
                                        return memory
                                          from (16 * ceil32(return_data.size)) + 264
                                           len (31 * ceil32(return_data.size)) + 32
                                    stor23.length++
                                    stor23[stor23.length].field_0 = arg1
                                    stor23[stor23.length].field_256 = arg2
                                    if arg2 < arg2 * _fee / 100:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[0] += arg2 * _fee / 100
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                    mem[(16 * ceil32(return_data.size)) + 328] = arg2 - (arg2 * _fee / 100)
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    if arg2 * _fee / 100 > 0:
                                        mem[(16 * ceil32(return_data.size)) + 328] = arg2 * _fee / 100
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                    mem[(16 * ceil32(return_data.size)) + 328] = 1
                                    return memory
                                      from (16 * ceil32(return_data.size)) + 328
                                       len (31 * ceil32(return_data.size)) + 32
                            ('eq', ('param', 'arg1'), ('ext_call.return_data', 12, 20))
                            if not arg2:
                                require arg2 <= _maxTxAmount
                                mem[(14 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                       args mem[(14 * ceil32(return_data.size)) + 332 len 24 * ceil32(return_data.size)]
                                mem[(14 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(15 * ceil32(return_data.size)) + 328] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                       args mem[(15 * ceil32(return_data.size)) + 332 len 16 * ceil32(return_data.size)]
                                mem[(15 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(16 * ceil32(return_data.size)) + 332] = this.address
                                mem[(16 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args mem[(16 * ceil32(return_data.size)) + 332 len (17 * ceil32(return_data.size)) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] == arg1:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    mem[(16 * ceil32(return_data.size)) + 328] = arg2
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    mem[(16 * ceil32(return_data.size)) + 328] = 1
                                    return memory
                                      from (16 * ceil32(return_data.size)) + 328
                                       len (31 * ceil32(return_data.size)) + 32
                                stor23.length++
                                stor23[stor23.length].field_0 = arg1
                                stor23[stor23.length].field_256 = arg2
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                mem[(16 * ceil32(return_data.size)) + 392] = arg2
                                emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                            else:
                                if arg2 and _sellFee > -1 / arg2:
                                    revert with 'NH{q', 17
                                if not arg2:
                                    revert with 'NH{q', 18
                                if arg2 * _sellFee / arg2 != _sellFee:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(14 * ceil32(return_data.size)) + 396 len 24 * ceil32(return_data.size)]
                                require arg2 <= _maxTxAmount
                                mem[(14 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                       args mem[(14 * ceil32(return_data.size)) + 332 len 24 * ceil32(return_data.size)]
                                mem[(14 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(15 * ceil32(return_data.size)) + 328] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                       args mem[(15 * ceil32(return_data.size)) + 332 len 16 * ceil32(return_data.size)]
                                mem[(15 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(16 * ceil32(return_data.size)) + 332] = this.address
                                mem[(16 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args mem[(16 * ceil32(return_data.size)) + 332 len (17 * ceil32(return_data.size)) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] == arg1:
                                    if arg2 < arg2 * _sellFee / 100:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[0] += arg2 * _sellFee / 100
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                    mem[(16 * ceil32(return_data.size)) + 328] = arg2 - (arg2 * _sellFee / 100)
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    if arg2 * _sellFee / 100 > 0:
                                        mem[(16 * ceil32(return_data.size)) + 328] = arg2 * _sellFee / 100
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                    mem[(16 * ceil32(return_data.size)) + 328] = 1
                                    return memory
                                      from (16 * ceil32(return_data.size)) + 328
                                       len (31 * ceil32(return_data.size)) + 32
                                stor23.length++
                                stor23[stor23.length].field_0 = arg1
                                stor23[stor23.length].field_256 = arg2
                                if arg2 < arg2 * _sellFee / 100:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[0] += arg2 * _sellFee / 100
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                mem[(16 * ceil32(return_data.size)) + 392] = arg2 - (arg2 * _sellFee / 100)
                                emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                if arg2 * _sellFee / 100 > 0:
                                    mem[(16 * ceil32(return_data.size)) + 392] = arg2 * _sellFee / 100
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                            mem[(16 * ceil32(return_data.size)) + 392] = 1
                            return memory
                              from (16 * ceil32(return_data.size)) + 392
                               len (31 * ceil32(return_data.size)) + 32
                    require ext_code.size(stor24)
                    staticcall stor24.factory() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(stor24)
                    staticcall stor24.WETH() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if stor6[address(msg.sender)]:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if stor6[address(arg1)]:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if sha3(arg1) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if arg1 == this.address:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if ext_call.return_data[12 len 20] != msg.sender:
                        if msg.sender == address(ext_call.return_data[0]):
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                    else:
                        if stor6[address(arg1)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                    if stor22:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if not arg2:
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[(15 * ceil32(return_data.size)) + 268] = this.address
                        mem[(15 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0]), mem[(15 * ceil32(return_data.size)) + 332 len 5 * ceil32(return_data.size)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if arg1 != ext_call.return_data[12 len 20]:
                            require arg2 <= _maxTxAmount
                            mem[(17 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                                   args mem[(17 * ceil32(return_data.size)) + 268 len 8 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(19 * ceil32(return_data.size)) + 268] = this.address
                            mem[(19 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] == arg1:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2,
                                              mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              arg1,
                                return 1, mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)]
                            stor23.length++
                            stor23[stor23.length].field_0 = arg1
                            stor23[stor23.length].field_256 = arg2
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2,
                                          mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                    else:
                        if arg2 and _fee > -1 / arg2:
                            revert with 'NH{q', 17
                        if not arg2:
                            revert with 'NH{q', 18
                        if arg2 * _fee / arg2 != _fee:
                            revert with 0, 'SafeMath: multiplication overflow'
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[(15 * ceil32(return_data.size)) + 268] = this.address
                        mem[(15 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0]), mem[(15 * ceil32(return_data.size)) + 332 len 5 * ceil32(return_data.size)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if arg1 != ext_call.return_data[12 len 20]:
                            require arg2 <= _maxTxAmount
                            mem[(17 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                                   args mem[(17 * ceil32(return_data.size)) + 268 len 8 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(19 * ceil32(return_data.size)) + 268] = this.address
                            mem[(19 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] == arg1:
                                if arg2 < arg2 * _fee / 100:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[0] += arg2 * _fee / 100
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 - (arg2 * _fee / 100),
                                              mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              arg1,
                                if arg2 * _fee / 100 > 0:
                                    emit Transfer(address arg1, address arg2, uint256 arg3):
                                                  arg2 * _fee / 100,
                                                  mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                                  msg.sender,
                                                  0,
                                return 1, mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)]
                            stor23.length++
                            stor23[stor23.length].field_0 = arg1
                            stor23[stor23.length].field_256 = arg2
                            if arg2 < arg2 * _fee / 100:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[0] += arg2 * _fee / 100
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2 - (arg2 * _fee / 100),
                                          mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            if arg2 * _fee / 100 > 0:
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 * _fee / 100,
                                              mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              0,
                            return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                    ('eq', ('param', 'arg1'), ('ext_call.return_data', 12, 20))
                    if not arg2:
                        require arg2 <= _maxTxAmount
                        mem[(17 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                               args mem[(17 * ceil32(return_data.size)) + 332 len 8 * ceil32(return_data.size)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[(19 * ceil32(return_data.size)) + 332] = this.address
                        mem[(19 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ext_call.return_data[12 len 20] == arg1:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2,
                                          mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                        stor23.length++
                        stor23[stor23.length].field_0 = arg1
                        stor23[stor23.length].field_256 = arg2
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(address arg1, address arg2, uint256 arg3):
                                      arg2,
                                      mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                      msg.sender,
                                      arg1,
                    else:
                        if arg2 and _sellFee > -1 / arg2:
                            revert with 'NH{q', 17
                        if not arg2:
                            revert with 'NH{q', 18
                        if arg2 * _sellFee / arg2 != _sellFee:
                            revert with 0, 'SafeMath: multiplication overflow', mem[(17 * ceil32(return_data.size)) + 396 len 9 * ceil32(return_data.size)]
                        require arg2 <= _maxTxAmount
                        mem[(17 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                               args mem[(17 * ceil32(return_data.size)) + 332 len 8 * ceil32(return_data.size)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[(19 * ceil32(return_data.size)) + 332] = this.address
                        mem[(19 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ext_call.return_data[12 len 20] == arg1:
                            if arg2 < arg2 * _sellFee / 100:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[0] += arg2 * _sellFee / 100
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2 - (arg2 * _sellFee / 100),
                                          mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            if arg2 * _sellFee / 100 > 0:
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 * _sellFee / 100,
                                              mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              0,
                            return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                        stor23.length++
                        stor23[stor23.length].field_0 = arg1
                        stor23[stor23.length].field_256 = arg2
                        if arg2 < arg2 * _sellFee / 100:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                            revert with 'NH{q', 17
                        balanceOf[0] += arg2 * _sellFee / 100
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                        emit Transfer(address arg1, address arg2, uint256 arg3):
                                      arg2 - (arg2 * _sellFee / 100),
                                      mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                      msg.sender,
                                      arg1,
                        if arg2 * _sellFee / 100 > 0:
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2 * _sellFee / 100,
                                          mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          0,
                    return 1, mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)]
                idx = 0
                while idx < stor23.length:
                    mem[0] = stor23[idx].field_0
                    mem[32] = 3
                    _642 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_642] = 26
                    mem[_642 + 32] = 'SafeMath: division by zero'
                    if idx >= stor23.length:
                        revert with 'NH{q', 50
                    mem[0] = stor23[idx].field_0
                    mem[32] = 3
                    balanceOf[stor23[idx].field_0] = balanceOf[stor23[idx].field_0] / 100
                    if idx == -1:
                        revert with 'NH{q', 17
                    idx = idx + 1
                    continue 
                stor23.length = 0
                mem[0] = 23
                idx = 0
                while 2 * stor23.length > idx:
                    stor23[idx].field_0 = 0
                    stor23[idx].field_256 = 0
                    idx = idx + 2
                    continue 
                require ext_code.size(stor24)
                staticcall stor24.factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8572 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8663 = mem[_8572]
                require mem[_8572] == mem[_8572 + 12 len 20]
                require ext_code.size(stor24)
                staticcall stor24.WETH() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9255 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9340 = mem[_9255]
                require mem[_9255] == mem[_9255 + 12 len 20]
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(_9340)
                require ext_code.size(address(_8663))
                staticcall address(_8663).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args address(this.address), address(_9340)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10662 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_10662] == mem[_10662 + 12 len 20]
                if arg1 != mem[_10662 + 12 len 20]:
                    require ext_code.size(stor24)
                    staticcall stor24.factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11684 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11810 = mem[_11684]
                    require mem[_11684] == mem[_11684 + 12 len 20]
                    require ext_code.size(stor24)
                    staticcall stor24.WETH() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12201 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12307 = mem[_12201]
                    require mem[_12201] == mem[_12201 + 12 len 20]
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(_12307)
                    require ext_code.size(address(_11810))
                    staticcall address(_11810).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_12307)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12662 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12733 = mem[_12662]
                    require mem[_12662] == mem[_12662 + 12 len 20]
                    if mem[_12662 + 12 len 20] != msg.sender:
                        if stor6[address(msg.sender)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                        else:
                            mem[0] = arg1
                            mem[32] = 6
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[mem[64] + 32] = address(arg1)
                                _13098 = mem[64]
                                mem[mem[64]] = 20
                                mem[64] = mem[64] + 52
                                if sha3(mem[_13098 + 32 len mem[_13098]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg1 == this.address:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if msg.sender == address(_12733):
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor22:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if not arg2:
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < 0:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -1:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                else:
                                                    if arg2 and _fee > -1 / arg2:
                                                        revert with 'NH{q', 17
                                                    if not arg2:
                                                        revert with 'NH{q', 18
                                                    if arg2 * _fee / arg2 != _fee:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < arg2 * _fee / 100:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[0] += arg2 * _fee / 100
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                        emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                        if arg2 * _fee / 100 > 0:
                                                            emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                    else:
                        if stor6[address(msg.sender)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                        else:
                            mem[0] = arg1
                            mem[32] = 6
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[mem[64] + 32] = address(arg1)
                                _13120 = mem[64]
                                mem[mem[64]] = 20
                                mem[64] = mem[64] + 52
                                if sha3(mem[_13120 + 32 len mem[_13120]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg1 == this.address:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if stor6[address(arg1)]:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor22:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if not arg2:
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < 0:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -1:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                else:
                                                    if arg2 and _fee > -1 / arg2:
                                                        revert with 'NH{q', 17
                                                    if not arg2:
                                                        revert with 'NH{q', 18
                                                    if arg2 * _fee / arg2 != _fee:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < arg2 * _fee / 100:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[0] += arg2 * _fee / 100
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                        emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                        if arg2 * _fee / 100 > 0:
                                                            emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                else:
                    mem[0] = msg.sender
                    mem[32] = 6
                    if stor6[address(msg.sender)]:
                        if stor6[address(msg.sender)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                        else:
                            mem[0] = arg1
                            mem[32] = 6
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[mem[64] + 32] = address(arg1)
                                _12271 = mem[64]
                                mem[mem[64]] = 20
                                mem[64] = mem[64] + 52
                                if sha3(mem[_12271 + 32 len mem[_12271]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg1 == this.address:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if stor6[address(msg.sender)]:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor22:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if not arg2:
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < 0:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -1:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                else:
                                                    if arg2 and _fee > -1 / arg2:
                                                        revert with 'NH{q', 17
                                                    if not arg2:
                                                        revert with 'NH{q', 18
                                                    if arg2 * _fee / arg2 != _fee:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < arg2 * _fee / 100:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[0] += arg2 * _fee / 100
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                        emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                        if arg2 * _fee / 100 > 0:
                                                            emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                    else:
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11736 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11841 = mem[_11736]
                        require mem[_11736] == mem[_11736 + 12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12238 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12332 = mem[_12238]
                        require mem[_12238] == mem[_12238 + 12 len 20]
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(_12332)
                        require ext_code.size(address(_11841))
                        staticcall address(_11841).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_12332)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12694 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12758 = mem[_12694]
                        require mem[_12694] == mem[_12694 + 12 len 20]
                        if mem[_12694 + 12 len 20] != msg.sender:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[0] = arg1
                                mem[32] = 6
                                if stor6[address(arg1)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[mem[64] + 32] = address(arg1)
                                    _13124 = mem[64]
                                    mem[mem[64]] = 20
                                    mem[64] = mem[64] + 52
                                    if sha3(mem[_13124 + 32 len mem[_13124]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg1 == this.address:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if msg.sender == address(_12758):
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if stor22:
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if not arg2:
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                    else:
                                                        if arg2 and _fee > -1 / arg2:
                                                            revert with 'NH{q', 17
                                                        if not arg2:
                                                            revert with 'NH{q', 18
                                                        if arg2 * _fee / arg2 != _fee:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _fee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _fee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                            emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                            if arg2 * _fee / 100 > 0:
                                                                emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                        else:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[0] = arg1
                                mem[32] = 6
                                if stor6[address(arg1)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[mem[64] + 32] = address(arg1)
                                    _13160 = mem[64]
                                    mem[mem[64]] = 20
                                    mem[64] = mem[64] + 52
                                    if sha3(mem[_13160 + 32 len mem[_13160]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg1 == this.address:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor6[address(arg1)]:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if stor22:
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if not arg2:
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                    else:
                                                        if arg2 and _fee > -1 / arg2:
                                                            revert with 'NH{q', 17
                                                        if not arg2:
                                                            revert with 'NH{q', 18
                                                        if arg2 * _fee / arg2 != _fee:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _fee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _fee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                            emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                            if arg2 * _fee / 100 > 0:
                                                                emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
    else:
        mem[32] = 6
        if not stor6[address(msg.sender)]:
            if stor22:
                require ext_code.size(stor24)
                staticcall stor24.factory() with:
                        gas gas_remaining wei
                mem[148] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                require ext_code.size(stor24)
                staticcall stor24.WETH() with:
                        gas gas_remaining wei
                mem[ceil32(return_data.size) + 148] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                mem[(2 * ceil32(return_data.size)) + 152] = this.address
                mem[(2 * ceil32(return_data.size)) + 184] = address(ext_call.return_data[0])
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args address(this.address), address(ext_call.return_data[0])
                mem[(2 * ceil32(return_data.size)) + 148] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = (4 * ceil32(return_data.size)) + 148
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if ext_call.return_data[12 len 20] != msg.sender:
                    require ext_code.size(stor24)
                    staticcall stor24.factory() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(stor24)
                    staticcall stor24.WETH() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if arg1 == ext_call.return_data[12 len 20]:
                        if stor6[address(msg.sender)]:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if sha3(arg1) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if arg1 == this.address:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if stor22:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if not arg2:
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                mem[(8 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(10 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                       args mem[(10 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                mem[(10 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(12 * ceil32(return_data.size)) + 268] = this.address
                                mem[(12 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(ext_call.return_data[0]), mem[(12 * ceil32(return_data.size)) + 332 len 20 * ceil32(return_data.size)]
                                mem[(12 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if arg1 != ext_call.return_data[12 len 20]:
                                    require arg2 <= _maxTxAmount
                                    mem[(14 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.factory() with:
                                            gas gas_remaining wei
                                           args mem[(14 * ceil32(return_data.size)) + 268 len 24 * ceil32(return_data.size)]
                                    mem[(14 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(15 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.WETH() with:
                                            gas gas_remaining wei
                                           args mem[(15 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                    mem[(15 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(16 * ceil32(return_data.size)) + 268] = this.address
                                    mem[(16 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args mem[(16 * ceil32(return_data.size)) + 268 len (17 * ceil32(return_data.size)) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == arg1:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        mem[(16 * ceil32(return_data.size)) + 264] = arg2
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                        mem[(16 * ceil32(return_data.size)) + 264] = 1
                                        return memory
                                          from (16 * ceil32(return_data.size)) + 264
                                           len (31 * ceil32(return_data.size)) + 32
                                    stor23.length++
                                    stor23[stor23.length].field_0 = arg1
                                    stor23[stor23.length].field_256 = arg2
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    mem[(16 * ceil32(return_data.size)) + 328] = arg2
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    mem[(16 * ceil32(return_data.size)) + 328] = 1
                                    return memory
                                      from (16 * ceil32(return_data.size)) + 328
                                       len (31 * ceil32(return_data.size)) + 32
                            else:
                                if arg2 and _fee > -1 / arg2:
                                    revert with 'NH{q', 17
                                if not arg2:
                                    revert with 'NH{q', 18
                                if arg2 * _fee / arg2 != _fee:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                mem[(8 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(10 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                       args mem[(10 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                mem[(10 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(12 * ceil32(return_data.size)) + 268] = this.address
                                mem[(12 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(ext_call.return_data[0]), mem[(12 * ceil32(return_data.size)) + 332 len 20 * ceil32(return_data.size)]
                                mem[(12 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if arg1 != ext_call.return_data[12 len 20]:
                                    require arg2 <= _maxTxAmount
                                    mem[(14 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.factory() with:
                                            gas gas_remaining wei
                                           args mem[(14 * ceil32(return_data.size)) + 268 len 24 * ceil32(return_data.size)]
                                    mem[(14 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(15 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.WETH() with:
                                            gas gas_remaining wei
                                           args mem[(15 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                    mem[(15 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(16 * ceil32(return_data.size)) + 268] = this.address
                                    mem[(16 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args mem[(16 * ceil32(return_data.size)) + 268 len (17 * ceil32(return_data.size)) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == arg1:
                                        if arg2 < arg2 * _fee / 100:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[0] += arg2 * _fee / 100
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                        mem[(16 * ceil32(return_data.size)) + 264] = arg2 - (arg2 * _fee / 100)
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                        if arg2 * _fee / 100 > 0:
                                            mem[(16 * ceil32(return_data.size)) + 264] = arg2 * _fee / 100
                                            emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                        mem[(16 * ceil32(return_data.size)) + 264] = 1
                                        return memory
                                          from (16 * ceil32(return_data.size)) + 264
                                           len (31 * ceil32(return_data.size)) + 32
                                    stor23.length++
                                    stor23[stor23.length].field_0 = arg1
                                    stor23[stor23.length].field_256 = arg2
                                    if arg2 < arg2 * _fee / 100:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[0] += arg2 * _fee / 100
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                    mem[(16 * ceil32(return_data.size)) + 328] = arg2 - (arg2 * _fee / 100)
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    if arg2 * _fee / 100 > 0:
                                        mem[(16 * ceil32(return_data.size)) + 328] = arg2 * _fee / 100
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                    mem[(16 * ceil32(return_data.size)) + 328] = 1
                                    return memory
                                      from (16 * ceil32(return_data.size)) + 328
                                       len (31 * ceil32(return_data.size)) + 32
                            ('eq', ('param', 'arg1'), ('ext_call.return_data', 12, 20))
                            if not arg2:
                                require arg2 <= _maxTxAmount
                                mem[(14 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                       args mem[(14 * ceil32(return_data.size)) + 332 len 24 * ceil32(return_data.size)]
                                mem[(14 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(15 * ceil32(return_data.size)) + 328] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                       args mem[(15 * ceil32(return_data.size)) + 332 len 16 * ceil32(return_data.size)]
                                mem[(15 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(16 * ceil32(return_data.size)) + 332] = this.address
                                mem[(16 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args mem[(16 * ceil32(return_data.size)) + 332 len (17 * ceil32(return_data.size)) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] == arg1:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    mem[(16 * ceil32(return_data.size)) + 328] = arg2
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    mem[(16 * ceil32(return_data.size)) + 328] = 1
                                    return memory
                                      from (16 * ceil32(return_data.size)) + 328
                                       len (31 * ceil32(return_data.size)) + 32
                                stor23.length++
                                stor23[stor23.length].field_0 = arg1
                                stor23[stor23.length].field_256 = arg2
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                mem[(16 * ceil32(return_data.size)) + 392] = arg2
                                emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                            else:
                                if arg2 and _sellFee > -1 / arg2:
                                    revert with 'NH{q', 17
                                if not arg2:
                                    revert with 'NH{q', 18
                                if arg2 * _sellFee / arg2 != _sellFee:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(14 * ceil32(return_data.size)) + 396 len 24 * ceil32(return_data.size)]
                                require arg2 <= _maxTxAmount
                                mem[(14 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                       args mem[(14 * ceil32(return_data.size)) + 332 len 24 * ceil32(return_data.size)]
                                mem[(14 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(15 * ceil32(return_data.size)) + 328] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                       args mem[(15 * ceil32(return_data.size)) + 332 len 16 * ceil32(return_data.size)]
                                mem[(15 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(16 * ceil32(return_data.size)) + 332] = this.address
                                mem[(16 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args mem[(16 * ceil32(return_data.size)) + 332 len (17 * ceil32(return_data.size)) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] == arg1:
                                    if arg2 < arg2 * _sellFee / 100:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[0] += arg2 * _sellFee / 100
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                    mem[(16 * ceil32(return_data.size)) + 328] = arg2 - (arg2 * _sellFee / 100)
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    if arg2 * _sellFee / 100 > 0:
                                        mem[(16 * ceil32(return_data.size)) + 328] = arg2 * _sellFee / 100
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                    mem[(16 * ceil32(return_data.size)) + 328] = 1
                                    return memory
                                      from (16 * ceil32(return_data.size)) + 328
                                       len (31 * ceil32(return_data.size)) + 32
                                stor23.length++
                                stor23[stor23.length].field_0 = arg1
                                stor23[stor23.length].field_256 = arg2
                                if arg2 < arg2 * _sellFee / 100:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[0] += arg2 * _sellFee / 100
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                mem[(16 * ceil32(return_data.size)) + 392] = arg2 - (arg2 * _sellFee / 100)
                                emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                if arg2 * _sellFee / 100 > 0:
                                    mem[(16 * ceil32(return_data.size)) + 392] = arg2 * _sellFee / 100
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                            mem[(16 * ceil32(return_data.size)) + 392] = 1
                            return memory
                              from (16 * ceil32(return_data.size)) + 392
                               len (31 * ceil32(return_data.size)) + 32
                    require ext_code.size(stor24)
                    staticcall stor24.factory() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(stor24)
                    staticcall stor24.WETH() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if stor6[address(msg.sender)]:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if stor6[address(arg1)]:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if sha3(arg1) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if arg1 == this.address:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if ext_call.return_data[12 len 20] != msg.sender:
                        if msg.sender == address(ext_call.return_data[0]):
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                    else:
                        if stor6[address(arg1)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                    if stor22:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if not arg2:
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[(15 * ceil32(return_data.size)) + 268] = this.address
                        mem[(15 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0]), mem[(15 * ceil32(return_data.size)) + 332 len 5 * ceil32(return_data.size)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if arg1 != ext_call.return_data[12 len 20]:
                            require arg2 <= _maxTxAmount
                            mem[(17 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                                   args mem[(17 * ceil32(return_data.size)) + 268 len 8 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(19 * ceil32(return_data.size)) + 268] = this.address
                            mem[(19 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] == arg1:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2,
                                              mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              arg1,
                                return 1, mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)]
                            stor23.length++
                            stor23[stor23.length].field_0 = arg1
                            stor23[stor23.length].field_256 = arg2
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2,
                                          mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                    else:
                        if arg2 and _fee > -1 / arg2:
                            revert with 'NH{q', 17
                        if not arg2:
                            revert with 'NH{q', 18
                        if arg2 * _fee / arg2 != _fee:
                            revert with 0, 'SafeMath: multiplication overflow'
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[(15 * ceil32(return_data.size)) + 268] = this.address
                        mem[(15 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0]), mem[(15 * ceil32(return_data.size)) + 332 len 5 * ceil32(return_data.size)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if arg1 != ext_call.return_data[12 len 20]:
                            require arg2 <= _maxTxAmount
                            mem[(17 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                                   args mem[(17 * ceil32(return_data.size)) + 268 len 8 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(19 * ceil32(return_data.size)) + 268] = this.address
                            mem[(19 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] == arg1:
                                if arg2 < arg2 * _fee / 100:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[0] += arg2 * _fee / 100
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 - (arg2 * _fee / 100),
                                              mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              arg1,
                                if arg2 * _fee / 100 > 0:
                                    emit Transfer(address arg1, address arg2, uint256 arg3):
                                                  arg2 * _fee / 100,
                                                  mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                                  msg.sender,
                                                  0,
                                return 1, mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)]
                            stor23.length++
                            stor23[stor23.length].field_0 = arg1
                            stor23[stor23.length].field_256 = arg2
                            if arg2 < arg2 * _fee / 100:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[0] += arg2 * _fee / 100
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2 - (arg2 * _fee / 100),
                                          mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            if arg2 * _fee / 100 > 0:
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 * _fee / 100,
                                              mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              0,
                            return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                    ('eq', ('param', 'arg1'), ('ext_call.return_data', 12, 20))
                    if not arg2:
                        require arg2 <= _maxTxAmount
                        mem[(17 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                               args mem[(17 * ceil32(return_data.size)) + 332 len 8 * ceil32(return_data.size)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[(19 * ceil32(return_data.size)) + 332] = this.address
                        mem[(19 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ext_call.return_data[12 len 20] == arg1:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2,
                                          mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                        stor23.length++
                        stor23[stor23.length].field_0 = arg1
                        stor23[stor23.length].field_256 = arg2
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(address arg1, address arg2, uint256 arg3):
                                      arg2,
                                      mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                      msg.sender,
                                      arg1,
                    else:
                        if arg2 and _sellFee > -1 / arg2:
                            revert with 'NH{q', 17
                        if not arg2:
                            revert with 'NH{q', 18
                        if arg2 * _sellFee / arg2 != _sellFee:
                            revert with 0, 'SafeMath: multiplication overflow', mem[(17 * ceil32(return_data.size)) + 396 len 9 * ceil32(return_data.size)]
                        require arg2 <= _maxTxAmount
                        mem[(17 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                               args mem[(17 * ceil32(return_data.size)) + 332 len 8 * ceil32(return_data.size)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[(19 * ceil32(return_data.size)) + 332] = this.address
                        mem[(19 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ext_call.return_data[12 len 20] == arg1:
                            if arg2 < arg2 * _sellFee / 100:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[0] += arg2 * _sellFee / 100
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2 - (arg2 * _sellFee / 100),
                                          mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            if arg2 * _sellFee / 100 > 0:
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 * _sellFee / 100,
                                              mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              0,
                            return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                        stor23.length++
                        stor23[stor23.length].field_0 = arg1
                        stor23[stor23.length].field_256 = arg2
                        if arg2 < arg2 * _sellFee / 100:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                            revert with 'NH{q', 17
                        balanceOf[0] += arg2 * _sellFee / 100
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                        emit Transfer(address arg1, address arg2, uint256 arg3):
                                      arg2 - (arg2 * _sellFee / 100),
                                      mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                      msg.sender,
                                      arg1,
                        if arg2 * _sellFee / 100 > 0:
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2 * _sellFee / 100,
                                          mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          0,
                    return 1, mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)]
                idx = 0
                while idx < stor23.length:
                    mem[0] = stor23[idx].field_0
                    mem[32] = 3
                    _644 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_644] = 26
                    mem[_644 + 32] = 'SafeMath: division by zero'
                    if idx >= stor23.length:
                        revert with 'NH{q', 50
                    mem[0] = stor23[idx].field_0
                    mem[32] = 3
                    balanceOf[stor23[idx].field_0] = balanceOf[stor23[idx].field_0] / 100
                    if idx == -1:
                        revert with 'NH{q', 17
                    idx = idx + 1
                    continue 
                stor23.length = 0
                mem[0] = 23
                idx = 0
                while 2 * stor23.length > idx:
                    stor23[idx].field_0 = 0
                    stor23[idx].field_256 = 0
                    idx = idx + 2
                    continue 
                require ext_code.size(stor24)
                staticcall stor24.factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8575 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8681 = mem[_8575]
                require mem[_8575] == mem[_8575 + 12 len 20]
                require ext_code.size(stor24)
                staticcall stor24.WETH() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9260 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9347 = mem[_9260]
                require mem[_9260] == mem[_9260 + 12 len 20]
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(_9347)
                require ext_code.size(address(_8681))
                staticcall address(_8681).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args address(this.address), address(_9347)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10680 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_10680] == mem[_10680 + 12 len 20]
                if arg1 != mem[_10680 + 12 len 20]:
                    require ext_code.size(stor24)
                    staticcall stor24.factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11691 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11815 = mem[_11691]
                    require mem[_11691] == mem[_11691 + 12 len 20]
                    require ext_code.size(stor24)
                    staticcall stor24.WETH() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12206 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12311 = mem[_12206]
                    require mem[_12206] == mem[_12206 + 12 len 20]
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(_12311)
                    require ext_code.size(address(_11815))
                    staticcall address(_11815).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_12311)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12667 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12737 = mem[_12667]
                    require mem[_12667] == mem[_12667 + 12 len 20]
                    if mem[_12667 + 12 len 20] != msg.sender:
                        if stor6[address(msg.sender)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                        else:
                            mem[0] = arg1
                            mem[32] = 6
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[mem[64] + 32] = address(arg1)
                                _13101 = mem[64]
                                mem[mem[64]] = 20
                                mem[64] = mem[64] + 52
                                if sha3(mem[_13101 + 32 len mem[_13101]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg1 == this.address:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if msg.sender == address(_12737):
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor22:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if not arg2:
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < 0:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -1:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                else:
                                                    if arg2 and _fee > -1 / arg2:
                                                        revert with 'NH{q', 17
                                                    if not arg2:
                                                        revert with 'NH{q', 18
                                                    if arg2 * _fee / arg2 != _fee:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < arg2 * _fee / 100:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[0] += arg2 * _fee / 100
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                        emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                        if arg2 * _fee / 100 > 0:
                                                            emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                    else:
                        if stor6[address(msg.sender)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                        else:
                            mem[0] = arg1
                            mem[32] = 6
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[mem[64] + 32] = address(arg1)
                                _13127 = mem[64]
                                mem[mem[64]] = 20
                                mem[64] = mem[64] + 52
                                if sha3(mem[_13127 + 32 len mem[_13127]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg1 == this.address:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if stor6[address(arg1)]:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor22:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if not arg2:
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < 0:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -1:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                else:
                                                    if arg2 and _fee > -1 / arg2:
                                                        revert with 'NH{q', 17
                                                    if not arg2:
                                                        revert with 'NH{q', 18
                                                    if arg2 * _fee / arg2 != _fee:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < arg2 * _fee / 100:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[0] += arg2 * _fee / 100
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                        emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                        if arg2 * _fee / 100 > 0:
                                                            emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                else:
                    mem[0] = msg.sender
                    mem[32] = 6
                    if stor6[address(msg.sender)]:
                        if stor6[address(msg.sender)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                        else:
                            mem[0] = arg1
                            mem[32] = 6
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[mem[64] + 32] = address(arg1)
                                _12276 = mem[64]
                                mem[mem[64]] = 20
                                mem[64] = mem[64] + 52
                                if sha3(mem[_12276 + 32 len mem[_12276]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg1 == this.address:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if stor6[address(msg.sender)]:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor22:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if not arg2:
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < 0:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -1:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                else:
                                                    if arg2 and _fee > -1 / arg2:
                                                        revert with 'NH{q', 17
                                                    if not arg2:
                                                        revert with 'NH{q', 18
                                                    if arg2 * _fee / arg2 != _fee:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < arg2 * _fee / 100:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[0] += arg2 * _fee / 100
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                        emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                        if arg2 * _fee / 100 > 0:
                                                            emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                    else:
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11740 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11848 = mem[_11740]
                        require mem[_11740] == mem[_11740 + 12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12242 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12337 = mem[_12242]
                        require mem[_12242] == mem[_12242 + 12 len 20]
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(_12337)
                        require ext_code.size(address(_11848))
                        staticcall address(_11848).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_12337)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12698 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12761 = mem[_12698]
                        require mem[_12698] == mem[_12698 + 12 len 20]
                        if mem[_12698 + 12 len 20] != msg.sender:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[0] = arg1
                                mem[32] = 6
                                if stor6[address(arg1)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[mem[64] + 32] = address(arg1)
                                    _13131 = mem[64]
                                    mem[mem[64]] = 20
                                    mem[64] = mem[64] + 52
                                    if sha3(mem[_13131 + 32 len mem[_13131]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg1 == this.address:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if msg.sender == address(_12761):
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if stor22:
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if not arg2:
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                    else:
                                                        if arg2 and _fee > -1 / arg2:
                                                            revert with 'NH{q', 17
                                                        if not arg2:
                                                            revert with 'NH{q', 18
                                                        if arg2 * _fee / arg2 != _fee:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _fee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _fee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                            emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                            if arg2 * _fee / 100 > 0:
                                                                emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                        else:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[0] = arg1
                                mem[32] = 6
                                if stor6[address(arg1)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[mem[64] + 32] = address(arg1)
                                    _13164 = mem[64]
                                    mem[mem[64]] = 20
                                    mem[64] = mem[64] + 52
                                    if sha3(mem[_13164 + 32 len mem[_13164]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg1 == this.address:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor6[address(arg1)]:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if stor22:
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if not arg2:
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                    else:
                                                        if arg2 and _fee > -1 / arg2:
                                                            revert with 'NH{q', 17
                                                        if not arg2:
                                                            revert with 'NH{q', 18
                                                        if arg2 * _fee / arg2 != _fee:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _fee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _fee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                            emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                            if arg2 * _fee / 100 > 0:
                                                                emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
            else:
                mem[32] = 3
                require balanceOf[address(msg.sender)] >= arg2
                require ext_code.size(stor24)
                staticcall stor24.factory() with:
                        gas gas_remaining wei
                mem[148] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                require ext_code.size(stor24)
                staticcall stor24.WETH() with:
                        gas gas_remaining wei
                mem[ceil32(return_data.size) + 148] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                mem[(2 * ceil32(return_data.size)) + 152] = this.address
                mem[(2 * ceil32(return_data.size)) + 184] = address(ext_call.return_data[0])
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args address(this.address), address(ext_call.return_data[0])
                mem[(2 * ceil32(return_data.size)) + 148] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = (4 * ceil32(return_data.size)) + 148
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if ext_call.return_data[12 len 20] != msg.sender:
                    require ext_code.size(stor24)
                    staticcall stor24.factory() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(stor24)
                    staticcall stor24.WETH() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if arg1 == ext_call.return_data[12 len 20]:
                        if stor6[address(msg.sender)]:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if sha3(arg1) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if arg1 == this.address:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if stor22:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                            if not arg2:
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                mem[(8 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(10 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                       args mem[(10 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                mem[(10 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(12 * ceil32(return_data.size)) + 268] = this.address
                                mem[(12 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(ext_call.return_data[0]), mem[(12 * ceil32(return_data.size)) + 332 len 20 * ceil32(return_data.size)]
                                mem[(12 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if arg1 != ext_call.return_data[12 len 20]:
                                    require arg2 <= _maxTxAmount
                                    mem[(14 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.factory() with:
                                            gas gas_remaining wei
                                           args mem[(14 * ceil32(return_data.size)) + 268 len 24 * ceil32(return_data.size)]
                                    mem[(14 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(15 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.WETH() with:
                                            gas gas_remaining wei
                                           args mem[(15 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                    mem[(15 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(16 * ceil32(return_data.size)) + 268] = this.address
                                    mem[(16 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args mem[(16 * ceil32(return_data.size)) + 268 len (17 * ceil32(return_data.size)) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == arg1:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        mem[(16 * ceil32(return_data.size)) + 264] = arg2
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                        mem[(16 * ceil32(return_data.size)) + 264] = 1
                                        return memory
                                          from (16 * ceil32(return_data.size)) + 264
                                           len (31 * ceil32(return_data.size)) + 32
                                    stor23.length++
                                    stor23[stor23.length].field_0 = arg1
                                    stor23[stor23.length].field_256 = arg2
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    mem[(16 * ceil32(return_data.size)) + 328] = arg2
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    mem[(16 * ceil32(return_data.size)) + 328] = 1
                                    return memory
                                      from (16 * ceil32(return_data.size)) + 328
                                       len (31 * ceil32(return_data.size)) + 32
                            else:
                                if arg2 and _fee > -1 / arg2:
                                    revert with 'NH{q', 17
                                if not arg2:
                                    revert with 'NH{q', 18
                                if arg2 * _fee / arg2 != _fee:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                mem[(8 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(10 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                       args mem[(10 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                mem[(10 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(12 * ceil32(return_data.size)) + 268] = this.address
                                mem[(12 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(ext_call.return_data[0]), mem[(12 * ceil32(return_data.size)) + 332 len 20 * ceil32(return_data.size)]
                                mem[(12 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if arg1 != ext_call.return_data[12 len 20]:
                                    require arg2 <= _maxTxAmount
                                    mem[(14 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.factory() with:
                                            gas gas_remaining wei
                                           args mem[(14 * ceil32(return_data.size)) + 268 len 24 * ceil32(return_data.size)]
                                    mem[(14 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(15 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.WETH() with:
                                            gas gas_remaining wei
                                           args mem[(15 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                    mem[(15 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(16 * ceil32(return_data.size)) + 268] = this.address
                                    mem[(16 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args mem[(16 * ceil32(return_data.size)) + 268 len (17 * ceil32(return_data.size)) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == arg1:
                                        if arg2 < arg2 * _fee / 100:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[0] += arg2 * _fee / 100
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                        mem[(16 * ceil32(return_data.size)) + 264] = arg2 - (arg2 * _fee / 100)
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                        if arg2 * _fee / 100 > 0:
                                            mem[(16 * ceil32(return_data.size)) + 264] = arg2 * _fee / 100
                                            emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                        mem[(16 * ceil32(return_data.size)) + 264] = 1
                                        return memory
                                          from (16 * ceil32(return_data.size)) + 264
                                           len (31 * ceil32(return_data.size)) + 32
                                    stor23.length++
                                    stor23[stor23.length].field_0 = arg1
                                    stor23[stor23.length].field_256 = arg2
                                    if arg2 < arg2 * _fee / 100:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[0] += arg2 * _fee / 100
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                    mem[(16 * ceil32(return_data.size)) + 328] = arg2 - (arg2 * _fee / 100)
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    if arg2 * _fee / 100 > 0:
                                        mem[(16 * ceil32(return_data.size)) + 328] = arg2 * _fee / 100
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                    mem[(16 * ceil32(return_data.size)) + 328] = 1
                                    return memory
                                      from (16 * ceil32(return_data.size)) + 328
                                       len (31 * ceil32(return_data.size)) + 32
                            ('eq', ('param', 'arg1'), ('ext_call.return_data', 12, 20))
                            if not arg2:
                                require arg2 <= _maxTxAmount
                                mem[(14 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                       args mem[(14 * ceil32(return_data.size)) + 332 len 24 * ceil32(return_data.size)]
                                mem[(14 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(15 * ceil32(return_data.size)) + 328] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                       args mem[(15 * ceil32(return_data.size)) + 332 len 16 * ceil32(return_data.size)]
                                mem[(15 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(16 * ceil32(return_data.size)) + 332] = this.address
                                mem[(16 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args mem[(16 * ceil32(return_data.size)) + 332 len (17 * ceil32(return_data.size)) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] == arg1:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    mem[(16 * ceil32(return_data.size)) + 328] = arg2
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    mem[(16 * ceil32(return_data.size)) + 328] = 1
                                    return memory
                                      from (16 * ceil32(return_data.size)) + 328
                                       len (31 * ceil32(return_data.size)) + 32
                                stor23.length++
                                stor23[stor23.length].field_0 = arg1
                                stor23[stor23.length].field_256 = arg2
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                mem[(16 * ceil32(return_data.size)) + 392] = arg2
                                emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                            else:
                                if arg2 and _sellFee > -1 / arg2:
                                    revert with 'NH{q', 17
                                if not arg2:
                                    revert with 'NH{q', 18
                                if arg2 * _sellFee / arg2 != _sellFee:
                                    revert with 0, 'SafeMath: multiplication overflow', mem[(14 * ceil32(return_data.size)) + 396 len 24 * ceil32(return_data.size)]
                                require arg2 <= _maxTxAmount
                                mem[(14 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                       args mem[(14 * ceil32(return_data.size)) + 332 len 24 * ceil32(return_data.size)]
                                mem[(14 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(15 * ceil32(return_data.size)) + 328] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                       args mem[(15 * ceil32(return_data.size)) + 332 len 16 * ceil32(return_data.size)]
                                mem[(15 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(16 * ceil32(return_data.size)) + 332] = this.address
                                mem[(16 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args mem[(16 * ceil32(return_data.size)) + 332 len (17 * ceil32(return_data.size)) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] == arg1:
                                    if arg2 < arg2 * _sellFee / 100:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[0] += arg2 * _sellFee / 100
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                    mem[(16 * ceil32(return_data.size)) + 328] = arg2 - (arg2 * _sellFee / 100)
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    if arg2 * _sellFee / 100 > 0:
                                        mem[(16 * ceil32(return_data.size)) + 328] = arg2 * _sellFee / 100
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                    mem[(16 * ceil32(return_data.size)) + 328] = 1
                                    return memory
                                      from (16 * ceil32(return_data.size)) + 328
                                       len (31 * ceil32(return_data.size)) + 32
                                stor23.length++
                                stor23[stor23.length].field_0 = arg1
                                stor23[stor23.length].field_256 = arg2
                                if arg2 < arg2 * _sellFee / 100:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[0] += arg2 * _sellFee / 100
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                mem[(16 * ceil32(return_data.size)) + 392] = arg2 - (arg2 * _sellFee / 100)
                                emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                if arg2 * _sellFee / 100 > 0:
                                    mem[(16 * ceil32(return_data.size)) + 392] = arg2 * _sellFee / 100
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                            mem[(16 * ceil32(return_data.size)) + 392] = 1
                            return memory
                              from (16 * ceil32(return_data.size)) + 392
                               len (31 * ceil32(return_data.size)) + 32
                    require ext_code.size(stor24)
                    staticcall stor24.factory() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(stor24)
                    staticcall stor24.WETH() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if stor6[address(msg.sender)]:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if stor6[address(arg1)]:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if sha3(arg1) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if arg1 == this.address:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if ext_call.return_data[12 len 20] != msg.sender:
                        if msg.sender == address(ext_call.return_data[0]):
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                    else:
                        if stor6[address(arg1)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                    if stor22:
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(arg2, msg.sender, arg1);
                        return 1
                    if not arg2:
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[(15 * ceil32(return_data.size)) + 268] = this.address
                        mem[(15 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0]), mem[(15 * ceil32(return_data.size)) + 332 len 5 * ceil32(return_data.size)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if arg1 != ext_call.return_data[12 len 20]:
                            require arg2 <= _maxTxAmount
                            mem[(17 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                                   args mem[(17 * ceil32(return_data.size)) + 268 len 8 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(19 * ceil32(return_data.size)) + 268] = this.address
                            mem[(19 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] == arg1:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2,
                                              mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              arg1,
                                return 1, mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)]
                            stor23.length++
                            stor23[stor23.length].field_0 = arg1
                            stor23[stor23.length].field_256 = arg2
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2,
                                          mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                    else:
                        if arg2 and _fee > -1 / arg2:
                            revert with 'NH{q', 17
                        if not arg2:
                            revert with 'NH{q', 18
                        if arg2 * _fee / arg2 != _fee:
                            revert with 0, 'SafeMath: multiplication overflow'
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[(15 * ceil32(return_data.size)) + 268] = this.address
                        mem[(15 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0]), mem[(15 * ceil32(return_data.size)) + 332 len 5 * ceil32(return_data.size)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if arg1 != ext_call.return_data[12 len 20]:
                            require arg2 <= _maxTxAmount
                            mem[(17 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                                   args mem[(17 * ceil32(return_data.size)) + 268 len 8 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(19 * ceil32(return_data.size)) + 268] = this.address
                            mem[(19 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] == arg1:
                                if arg2 < arg2 * _fee / 100:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[0] += arg2 * _fee / 100
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 - (arg2 * _fee / 100),
                                              mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              arg1,
                                if arg2 * _fee / 100 > 0:
                                    emit Transfer(address arg1, address arg2, uint256 arg3):
                                                  arg2 * _fee / 100,
                                                  mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                                  msg.sender,
                                                  0,
                                return 1, mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)]
                            stor23.length++
                            stor23[stor23.length].field_0 = arg1
                            stor23[stor23.length].field_256 = arg2
                            if arg2 < arg2 * _fee / 100:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[0] += arg2 * _fee / 100
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2 - (arg2 * _fee / 100),
                                          mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            if arg2 * _fee / 100 > 0:
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 * _fee / 100,
                                              mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              0,
                            return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                    ('eq', ('param', 'arg1'), ('ext_call.return_data', 12, 20))
                    if not arg2:
                        require arg2 <= _maxTxAmount
                        mem[(17 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                               args mem[(17 * ceil32(return_data.size)) + 332 len 8 * ceil32(return_data.size)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[(19 * ceil32(return_data.size)) + 332] = this.address
                        mem[(19 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ext_call.return_data[12 len 20] == arg1:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2,
                                          mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                        stor23.length++
                        stor23[stor23.length].field_0 = arg1
                        stor23[stor23.length].field_256 = arg2
                        if arg2 < 0:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -1:
                            revert with 'NH{q', 17
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] += arg2
                        emit Transfer(address arg1, address arg2, uint256 arg3):
                                      arg2,
                                      mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                      msg.sender,
                                      arg1,
                    else:
                        if arg2 and _sellFee > -1 / arg2:
                            revert with 'NH{q', 17
                        if not arg2:
                            revert with 'NH{q', 18
                        if arg2 * _sellFee / arg2 != _sellFee:
                            revert with 0, 'SafeMath: multiplication overflow', mem[(17 * ceil32(return_data.size)) + 396 len 9 * ceil32(return_data.size)]
                        require arg2 <= _maxTxAmount
                        mem[(17 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                               args mem[(17 * ceil32(return_data.size)) + 332 len 8 * ceil32(return_data.size)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[(19 * ceil32(return_data.size)) + 332] = this.address
                        mem[(19 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ext_call.return_data[12 len 20] == arg1:
                            if arg2 < arg2 * _sellFee / 100:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[0] += arg2 * _sellFee / 100
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2 - (arg2 * _sellFee / 100),
                                          mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            if arg2 * _sellFee / 100 > 0:
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 * _sellFee / 100,
                                              mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              0,
                            return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                        stor23.length++
                        stor23[stor23.length].field_0 = arg1
                        stor23[stor23.length].field_256 = arg2
                        if arg2 < arg2 * _sellFee / 100:
                            revert with 'NH{q', 17
                        if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                            revert with 'NH{q', 17
                        balanceOf[0] += arg2 * _sellFee / 100
                        if balanceOf[address(msg.sender)] < arg2:
                            revert with 'NH{q', 17
                        balanceOf[address(msg.sender)] -= arg2
                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                            revert with 'NH{q', 17
                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                        emit Transfer(address arg1, address arg2, uint256 arg3):
                                      arg2 - (arg2 * _sellFee / 100),
                                      mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                      msg.sender,
                                      arg1,
                        if arg2 * _sellFee / 100 > 0:
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2 * _sellFee / 100,
                                          mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          0,
                    return 1, mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)]
                idx = 0
                while idx < stor23.length:
                    mem[0] = stor23[idx].field_0
                    mem[32] = 3
                    _646 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_646] = 26
                    mem[_646 + 32] = 'SafeMath: division by zero'
                    if idx >= stor23.length:
                        revert with 'NH{q', 50
                    mem[0] = stor23[idx].field_0
                    mem[32] = 3
                    balanceOf[stor23[idx].field_0] = balanceOf[stor23[idx].field_0] / 100
                    if idx == -1:
                        revert with 'NH{q', 17
                    idx = idx + 1
                    continue 
                stor23.length = 0
                mem[0] = 23
                idx = 0
                while 2 * stor23.length > idx:
                    stor23[idx].field_0 = 0
                    stor23[idx].field_256 = 0
                    idx = idx + 2
                    continue 
                require ext_code.size(stor24)
                staticcall stor24.factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8579 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8686 = mem[_8579]
                require mem[_8579] == mem[_8579 + 12 len 20]
                require ext_code.size(stor24)
                staticcall stor24.WETH() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9269 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9350 = mem[_9269]
                require mem[_9269] == mem[_9269 + 12 len 20]
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(_9350)
                require ext_code.size(address(_8686))
                staticcall address(_8686).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args address(this.address), address(_9350)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10688 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_10688] == mem[_10688 + 12 len 20]
                if arg1 != mem[_10688 + 12 len 20]:
                    require ext_code.size(stor24)
                    staticcall stor24.factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11701 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11819 = mem[_11701]
                    require mem[_11701] == mem[_11701 + 12 len 20]
                    require ext_code.size(stor24)
                    staticcall stor24.WETH() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12214 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12315 = mem[_12214]
                    require mem[_12214] == mem[_12214 + 12 len 20]
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(_12315)
                    require ext_code.size(address(_11819))
                    staticcall address(_11819).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_12315)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12672 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12741 = mem[_12672]
                    require mem[_12672] == mem[_12672 + 12 len 20]
                    if mem[_12672 + 12 len 20] != msg.sender:
                        if stor6[address(msg.sender)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                        else:
                            mem[0] = arg1
                            mem[32] = 6
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[mem[64] + 32] = address(arg1)
                                _13104 = mem[64]
                                mem[mem[64]] = 20
                                mem[64] = mem[64] + 52
                                if sha3(mem[_13104 + 32 len mem[_13104]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg1 == this.address:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if msg.sender == address(_12741):
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor22:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if not arg2:
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < 0:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -1:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                else:
                                                    if arg2 and _fee > -1 / arg2:
                                                        revert with 'NH{q', 17
                                                    if not arg2:
                                                        revert with 'NH{q', 18
                                                    if arg2 * _fee / arg2 != _fee:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < arg2 * _fee / 100:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[0] += arg2 * _fee / 100
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                        emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                        if arg2 * _fee / 100 > 0:
                                                            emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                    else:
                        if stor6[address(msg.sender)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                        else:
                            mem[0] = arg1
                            mem[32] = 6
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[mem[64] + 32] = address(arg1)
                                _13134 = mem[64]
                                mem[mem[64]] = 20
                                mem[64] = mem[64] + 52
                                if sha3(mem[_13134 + 32 len mem[_13134]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg1 == this.address:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if stor6[address(arg1)]:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor22:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if not arg2:
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < 0:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -1:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                else:
                                                    if arg2 and _fee > -1 / arg2:
                                                        revert with 'NH{q', 17
                                                    if not arg2:
                                                        revert with 'NH{q', 18
                                                    if arg2 * _fee / arg2 != _fee:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < arg2 * _fee / 100:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[0] += arg2 * _fee / 100
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                        emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                        if arg2 * _fee / 100 > 0:
                                                            emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                else:
                    mem[0] = msg.sender
                    mem[32] = 6
                    if stor6[address(msg.sender)]:
                        if stor6[address(msg.sender)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                        else:
                            mem[0] = arg1
                            mem[32] = 6
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[mem[64] + 32] = address(arg1)
                                _12283 = mem[64]
                                mem[mem[64]] = 20
                                mem[64] = mem[64] + 52
                                if sha3(mem[_12283 + 32 len mem[_12283]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    if arg1 == this.address:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if stor6[address(msg.sender)]:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor22:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if not arg2:
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < 0:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -1:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                else:
                                                    if arg2 and _fee > -1 / arg2:
                                                        revert with 'NH{q', 17
                                                    if not arg2:
                                                        revert with 'NH{q', 18
                                                    if arg2 * _fee / arg2 != _fee:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.factory() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(stor24)
                                                    staticcall stor24.WETH() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                            gas gas_remaining wei
                                                           args address(this.address), address(ext_call.return_data[0])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                    if arg1 != ext_call.return_data[12 len 20]:
                                                        require arg2 <= _maxTxAmount
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if ext_call.return_data[12 len 20] != arg1:
                                                            stor23.length++
                                                            stor23[stor23.length].field_0 = arg1
                                                            stor23[stor23.length].field_256 = arg2
                                                        if arg2 < arg2 * _fee / 100:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[0] += arg2 * _fee / 100
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                        emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                        if arg2 * _fee / 100 > 0:
                                                            emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                    else:
                                                        if not arg2:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if arg2 and _sellFee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _sellFee / arg2 != _sellFee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _sellFee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _sellFee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                            emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                            if arg2 * _sellFee / 100 > 0:
                                                                emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                    else:
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11749 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11852 = mem[_11749]
                        require mem[_11749] == mem[_11749 + 12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12248 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12341 = mem[_12248]
                        require mem[_12248] == mem[_12248 + 12 len 20]
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(_12341)
                        require ext_code.size(address(_11852))
                        staticcall address(_11852).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_12341)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12702 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12764 = mem[_12702]
                        require mem[_12702] == mem[_12702 + 12 len 20]
                        if mem[_12702 + 12 len 20] != msg.sender:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[0] = arg1
                                mem[32] = 6
                                if stor6[address(arg1)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[mem[64] + 32] = address(arg1)
                                    _13138 = mem[64]
                                    mem[mem[64]] = 20
                                    mem[64] = mem[64] + 52
                                    if sha3(mem[_13138 + 32 len mem[_13138]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg1 == this.address:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if msg.sender == address(_12764):
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if stor22:
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if not arg2:
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                    else:
                                                        if arg2 and _fee > -1 / arg2:
                                                            revert with 'NH{q', 17
                                                        if not arg2:
                                                            revert with 'NH{q', 18
                                                        if arg2 * _fee / arg2 != _fee:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _fee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _fee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                            emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                            if arg2 * _fee / 100 > 0:
                                                                emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                        else:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[0] = arg1
                                mem[32] = 6
                                if stor6[address(arg1)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[mem[64] + 32] = address(arg1)
                                    _13168 = mem[64]
                                    mem[mem[64]] = 20
                                    mem[64] = mem[64] + 52
                                    if sha3(mem[_13168 + 32 len mem[_13168]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg1 == this.address:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor6[address(arg1)]:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if stor22:
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if not arg2:
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                    else:
                                                        if arg2 and _fee > -1 / arg2:
                                                            revert with 'NH{q', 17
                                                        if not arg2:
                                                            revert with 'NH{q', 18
                                                        if arg2 * _fee / arg2 != _fee:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _fee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _fee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                            emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                            if arg2 * _fee / 100 > 0:
                                                                emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
        else:
            if msg.sender == arg1:
                if not this.address:
                    revert with 0, 'IERC20: approve from the zero address'
                if not stor24:
                    revert with 0, 'IERC20: approve to the zero address'
                allowance[address(this.address)][stor24] = arg2
                emit Approval(arg2, this.address, stor24);
                balanceOf[address(this.address)] = arg2
                mem[180] = this.address
                require ext_code.size(stor24)
                staticcall stor24.WETH() with:
                        gas gas_remaining wei
                mem[244] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                mem[212] = ext_call.return_data[12 len 20]
                stor22 = 1
                if block.timestamp > -21:
                    revert with 'NH{q', 17
                mem[ceil32(return_data.size) + 244] = 0x791ac94700000000000000000000000000000000000000000000000000000000
                mem[ceil32(return_data.size) + 248] = arg2
                idx = 0
                s = 180
                t = ceil32(return_data.size) + 440
                while idx < 2:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(stor24)
                call stor24.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                     gas gas_remaining wei
                    args arg2, 0, 160, address(arg1), block.timestamp + 20, 2, mem[ceil32(return_data.size) + 440 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                stor22 = 0
            else:
                if stor22:
                    require ext_code.size(stor24)
                    staticcall stor24.factory() with:
                            gas gas_remaining wei
                    mem[148] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(stor24)
                    staticcall stor24.WETH() with:
                            gas gas_remaining wei
                    mem[ceil32(return_data.size) + 148] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    mem[(2 * ceil32(return_data.size)) + 152] = this.address
                    mem[(2 * ceil32(return_data.size)) + 184] = address(ext_call.return_data[0])
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(ext_call.return_data[0])
                    mem[(2 * ceil32(return_data.size)) + 148] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = (4 * ceil32(return_data.size)) + 148
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if ext_call.return_data[12 len 20] != msg.sender:
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if arg1 == ext_call.return_data[12 len 20]:
                            if stor6[address(msg.sender)]:
                                if stor6[address(msg.sender)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                    return 1
                                if stor6[address(arg1)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                    return 1
                                if sha3(arg1) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                    return 1
                                if arg1 == this.address:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                    return 1
                                if stor6[address(msg.sender)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                    return 1
                                if stor22:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                    return 1
                                if not arg2:
                                    require ext_code.size(stor24)
                                    staticcall stor24.factory() with:
                                            gas gas_remaining wei
                                    mem[(8 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(10 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.WETH() with:
                                            gas gas_remaining wei
                                           args mem[(10 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(12 * ceil32(return_data.size)) + 268] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(this.address), address(ext_call.return_data[0]), mem[(12 * ceil32(return_data.size)) + 332 len 20 * ceil32(return_data.size)]
                                    mem[(12 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if arg1 != ext_call.return_data[12 len 20]:
                                        require arg2 <= _maxTxAmount
                                        mem[(14 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(stor24)
                                        staticcall stor24.factory() with:
                                                gas gas_remaining wei
                                               args mem[(14 * ceil32(return_data.size)) + 268 len 24 * ceil32(return_data.size)]
                                        mem[(14 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        mem[(15 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(stor24)
                                        staticcall stor24.WETH() with:
                                                gas gas_remaining wei
                                               args mem[(15 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                        mem[(15 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        mem[(16 * ceil32(return_data.size)) + 268] = this.address
                                        mem[(16 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args mem[(16 * ceil32(return_data.size)) + 268 len (17 * ceil32(return_data.size)) + 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] == arg1:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            mem[(16 * ceil32(return_data.size)) + 264] = arg2
                                            emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                            mem[(16 * ceil32(return_data.size)) + 264] = 1
                                            return memory
                                              from (16 * ceil32(return_data.size)) + 264
                                               len (31 * ceil32(return_data.size)) + 32
                                        stor23.length++
                                        stor23[stor23.length].field_0 = arg1
                                        stor23[stor23.length].field_256 = arg2
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        mem[(16 * ceil32(return_data.size)) + 328] = arg2
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                        mem[(16 * ceil32(return_data.size)) + 328] = 1
                                        return memory
                                          from (16 * ceil32(return_data.size)) + 328
                                           len (31 * ceil32(return_data.size)) + 32
                                else:
                                    if arg2 and _fee > -1 / arg2:
                                        revert with 'NH{q', 17
                                    if not arg2:
                                        revert with 'NH{q', 18
                                    if arg2 * _fee / arg2 != _fee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    require ext_code.size(stor24)
                                    staticcall stor24.factory() with:
                                            gas gas_remaining wei
                                    mem[(8 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(10 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.WETH() with:
                                            gas gas_remaining wei
                                           args mem[(10 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(12 * ceil32(return_data.size)) + 268] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(this.address), address(ext_call.return_data[0]), mem[(12 * ceil32(return_data.size)) + 332 len 20 * ceil32(return_data.size)]
                                    mem[(12 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if arg1 != ext_call.return_data[12 len 20]:
                                        require arg2 <= _maxTxAmount
                                        mem[(14 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(stor24)
                                        staticcall stor24.factory() with:
                                                gas gas_remaining wei
                                               args mem[(14 * ceil32(return_data.size)) + 268 len 24 * ceil32(return_data.size)]
                                        mem[(14 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        mem[(15 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(stor24)
                                        staticcall stor24.WETH() with:
                                                gas gas_remaining wei
                                               args mem[(15 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                        mem[(15 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        mem[(16 * ceil32(return_data.size)) + 268] = this.address
                                        mem[(16 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args mem[(16 * ceil32(return_data.size)) + 268 len (17 * ceil32(return_data.size)) + 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] == arg1:
                                            if arg2 < arg2 * _fee / 100:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[0] += arg2 * _fee / 100
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                            mem[(16 * ceil32(return_data.size)) + 264] = arg2 - (arg2 * _fee / 100)
                                            emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                            if arg2 * _fee / 100 > 0:
                                                mem[(16 * ceil32(return_data.size)) + 264] = arg2 * _fee / 100
                                                emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                            mem[(16 * ceil32(return_data.size)) + 264] = 1
                                            return memory
                                              from (16 * ceil32(return_data.size)) + 264
                                               len (31 * ceil32(return_data.size)) + 32
                                        stor23.length++
                                        stor23[stor23.length].field_0 = arg1
                                        stor23[stor23.length].field_256 = arg2
                                        if arg2 < arg2 * _fee / 100:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[0] += arg2 * _fee / 100
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                        mem[(16 * ceil32(return_data.size)) + 328] = arg2 - (arg2 * _fee / 100)
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                        if arg2 * _fee / 100 > 0:
                                            mem[(16 * ceil32(return_data.size)) + 328] = arg2 * _fee / 100
                                            emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                        mem[(16 * ceil32(return_data.size)) + 328] = 1
                                        return memory
                                          from (16 * ceil32(return_data.size)) + 328
                                           len (31 * ceil32(return_data.size)) + 32
                                ('eq', ('param', 'arg1'), ('ext_call.return_data', 12, 20))
                                if not arg2:
                                    require arg2 <= _maxTxAmount
                                    mem[(14 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.factory() with:
                                            gas gas_remaining wei
                                           args mem[(14 * ceil32(return_data.size)) + 332 len 24 * ceil32(return_data.size)]
                                    mem[(14 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(15 * ceil32(return_data.size)) + 328] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.WETH() with:
                                            gas gas_remaining wei
                                           args mem[(15 * ceil32(return_data.size)) + 332 len 16 * ceil32(return_data.size)]
                                    mem[(15 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(16 * ceil32(return_data.size)) + 332] = this.address
                                    mem[(16 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args mem[(16 * ceil32(return_data.size)) + 332 len (17 * ceil32(return_data.size)) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == arg1:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        mem[(16 * ceil32(return_data.size)) + 328] = arg2
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                        mem[(16 * ceil32(return_data.size)) + 328] = 1
                                        return memory
                                          from (16 * ceil32(return_data.size)) + 328
                                           len (31 * ceil32(return_data.size)) + 32
                                    stor23.length++
                                    stor23[stor23.length].field_0 = arg1
                                    stor23[stor23.length].field_256 = arg2
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    mem[(16 * ceil32(return_data.size)) + 392] = arg2
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                else:
                                    if arg2 and _sellFee > -1 / arg2:
                                        revert with 'NH{q', 17
                                    if not arg2:
                                        revert with 'NH{q', 18
                                    if arg2 * _sellFee / arg2 != _sellFee:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(14 * ceil32(return_data.size)) + 396 len 24 * ceil32(return_data.size)]
                                    require arg2 <= _maxTxAmount
                                    mem[(14 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.factory() with:
                                            gas gas_remaining wei
                                           args mem[(14 * ceil32(return_data.size)) + 332 len 24 * ceil32(return_data.size)]
                                    mem[(14 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(15 * ceil32(return_data.size)) + 328] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.WETH() with:
                                            gas gas_remaining wei
                                           args mem[(15 * ceil32(return_data.size)) + 332 len 16 * ceil32(return_data.size)]
                                    mem[(15 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(16 * ceil32(return_data.size)) + 332] = this.address
                                    mem[(16 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args mem[(16 * ceil32(return_data.size)) + 332 len (17 * ceil32(return_data.size)) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == arg1:
                                        if arg2 < arg2 * _sellFee / 100:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[0] += arg2 * _sellFee / 100
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                        mem[(16 * ceil32(return_data.size)) + 328] = arg2 - (arg2 * _sellFee / 100)
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                        if arg2 * _sellFee / 100 > 0:
                                            mem[(16 * ceil32(return_data.size)) + 328] = arg2 * _sellFee / 100
                                            emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                        mem[(16 * ceil32(return_data.size)) + 328] = 1
                                        return memory
                                          from (16 * ceil32(return_data.size)) + 328
                                           len (31 * ceil32(return_data.size)) + 32
                                    stor23.length++
                                    stor23[stor23.length].field_0 = arg1
                                    stor23[stor23.length].field_256 = arg2
                                    if arg2 < arg2 * _sellFee / 100:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[0] += arg2 * _sellFee / 100
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                    mem[(16 * ceil32(return_data.size)) + 392] = arg2 - (arg2 * _sellFee / 100)
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    if arg2 * _sellFee / 100 > 0:
                                        mem[(16 * ceil32(return_data.size)) + 392] = arg2 * _sellFee / 100
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                mem[(16 * ceil32(return_data.size)) + 392] = 1
                                return memory
                                  from (16 * ceil32(return_data.size)) + 392
                                   len (31 * ceil32(return_data.size)) + 32
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if stor6[address(msg.sender)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                        if stor6[address(arg1)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                        if sha3(arg1) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                        if arg1 == this.address:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                        if ext_call.return_data[12 len 20] != msg.sender:
                            if msg.sender == address(ext_call.return_data[0]):
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                        else:
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                        if stor22:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                        if not arg2:
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(15 * ceil32(return_data.size)) + 268] = this.address
                            mem[(15 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(ext_call.return_data[0]), mem[(15 * ceil32(return_data.size)) + 332 len 5 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if arg1 != ext_call.return_data[12 len 20]:
                                require arg2 <= _maxTxAmount
                                mem[(17 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                       args mem[(17 * ceil32(return_data.size)) + 268 len 8 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(19 * ceil32(return_data.size)) + 268] = this.address
                                mem[(19 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(ext_call.return_data[0])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] == arg1:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(address arg1, address arg2, uint256 arg3):
                                                  arg2,
                                                  mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                                  msg.sender,
                                                  arg1,
                                    return 1, mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)]
                                stor23.length++
                                stor23[stor23.length].field_0 = arg1
                                stor23[stor23.length].field_256 = arg2
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2,
                                              mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              arg1,
                                return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                        else:
                            if arg2 and _fee > -1 / arg2:
                                revert with 'NH{q', 17
                            if not arg2:
                                revert with 'NH{q', 18
                            if arg2 * _fee / arg2 != _fee:
                                revert with 0, 'SafeMath: multiplication overflow'
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(15 * ceil32(return_data.size)) + 268] = this.address
                            mem[(15 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(ext_call.return_data[0]), mem[(15 * ceil32(return_data.size)) + 332 len 5 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if arg1 != ext_call.return_data[12 len 20]:
                                require arg2 <= _maxTxAmount
                                mem[(17 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                       args mem[(17 * ceil32(return_data.size)) + 268 len 8 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(19 * ceil32(return_data.size)) + 268] = this.address
                                mem[(19 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(ext_call.return_data[0])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] == arg1:
                                    if arg2 < arg2 * _fee / 100:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[0] += arg2 * _fee / 100
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                    emit Transfer(address arg1, address arg2, uint256 arg3):
                                                  arg2 - (arg2 * _fee / 100),
                                                  mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                                  msg.sender,
                                                  arg1,
                                    if arg2 * _fee / 100 > 0:
                                        emit Transfer(address arg1, address arg2, uint256 arg3):
                                                      arg2 * _fee / 100,
                                                      mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                                      msg.sender,
                                                      0,
                                    return 1, mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)]
                                stor23.length++
                                stor23[stor23.length].field_0 = arg1
                                stor23[stor23.length].field_256 = arg2
                                if arg2 < arg2 * _fee / 100:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[0] += arg2 * _fee / 100
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 - (arg2 * _fee / 100),
                                              mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              arg1,
                                if arg2 * _fee / 100 > 0:
                                    emit Transfer(address arg1, address arg2, uint256 arg3):
                                                  arg2 * _fee / 100,
                                                  mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                                  msg.sender,
                                                  0,
                                return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                        ('eq', ('param', 'arg1'), ('ext_call.return_data', 12, 20))
                        if not arg2:
                            require arg2 <= _maxTxAmount
                            mem[(17 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                                   args mem[(17 * ceil32(return_data.size)) + 332 len 8 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(19 * ceil32(return_data.size)) + 332] = this.address
                            mem[(19 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] == arg1:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2,
                                              mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              arg1,
                                return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                            stor23.length++
                            stor23[stor23.length].field_0 = arg1
                            stor23[stor23.length].field_256 = arg2
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2,
                                          mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                        else:
                            if arg2 and _sellFee > -1 / arg2:
                                revert with 'NH{q', 17
                            if not arg2:
                                revert with 'NH{q', 18
                            if arg2 * _sellFee / arg2 != _sellFee:
                                revert with 0, 'SafeMath: multiplication overflow', mem[(17 * ceil32(return_data.size)) + 396 len 9 * ceil32(return_data.size)]
                            require arg2 <= _maxTxAmount
                            mem[(17 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                                   args mem[(17 * ceil32(return_data.size)) + 332 len 8 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(19 * ceil32(return_data.size)) + 332] = this.address
                            mem[(19 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] == arg1:
                                if arg2 < arg2 * _sellFee / 100:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[0] += arg2 * _sellFee / 100
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 - (arg2 * _sellFee / 100),
                                              mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              arg1,
                                if arg2 * _sellFee / 100 > 0:
                                    emit Transfer(address arg1, address arg2, uint256 arg3):
                                                  arg2 * _sellFee / 100,
                                                  mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                                  msg.sender,
                                                  0,
                                return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                            stor23.length++
                            stor23[stor23.length].field_0 = arg1
                            stor23[stor23.length].field_256 = arg2
                            if arg2 < arg2 * _sellFee / 100:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[0] += arg2 * _sellFee / 100
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2 - (arg2 * _sellFee / 100),
                                          mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            if arg2 * _sellFee / 100 > 0:
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 * _sellFee / 100,
                                              mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              0,
                        return 1, mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)]
                    idx = 0
                    while idx < stor23.length:
                        mem[0] = stor23[idx].field_0
                        mem[32] = 3
                        _647 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_647] = 26
                        mem[_647 + 32] = 'SafeMath: division by zero'
                        if idx >= stor23.length:
                            revert with 'NH{q', 50
                        mem[0] = stor23[idx].field_0
                        mem[32] = 3
                        balanceOf[stor23[idx].field_0] = balanceOf[stor23[idx].field_0] / 100
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                    stor23.length = 0
                    mem[0] = 23
                    idx = 0
                    while 2 * stor23.length > idx:
                        stor23[idx].field_0 = 0
                        stor23[idx].field_256 = 0
                        idx = idx + 2
                        continue 
                    require ext_code.size(stor24)
                    staticcall stor24.factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8582 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8699 = mem[_8582]
                    require mem[_8582] == mem[_8582 + 12 len 20]
                    require ext_code.size(stor24)
                    staticcall stor24.WETH() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9275 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9352 = mem[_9275]
                    require mem[_9275] == mem[_9275 + 12 len 20]
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(_9352)
                    require ext_code.size(address(_8699))
                    staticcall address(_8699).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_9352)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10698 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10698] == mem[_10698 + 12 len 20]
                    if arg1 != mem[_10698 + 12 len 20]:
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11710 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11823 = mem[_11710]
                        require mem[_11710] == mem[_11710 + 12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12220 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12318 = mem[_12220]
                        require mem[_12220] == mem[_12220 + 12 len 20]
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(_12318)
                        require ext_code.size(address(_11823))
                        staticcall address(_11823).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_12318)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12677 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12745 = mem[_12677]
                        require mem[_12677] == mem[_12677 + 12 len 20]
                        if mem[_12677 + 12 len 20] != msg.sender:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[0] = arg1
                                mem[32] = 6
                                if stor6[address(arg1)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[mem[64] + 32] = address(arg1)
                                    _13107 = mem[64]
                                    mem[mem[64]] = 20
                                    mem[64] = mem[64] + 52
                                    if sha3(mem[_13107 + 32 len mem[_13107]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg1 == this.address:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if msg.sender == address(_12745):
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if stor22:
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if not arg2:
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                    else:
                                                        if arg2 and _fee > -1 / arg2:
                                                            revert with 'NH{q', 17
                                                        if not arg2:
                                                            revert with 'NH{q', 18
                                                        if arg2 * _fee / arg2 != _fee:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _fee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _fee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                            emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                            if arg2 * _fee / 100 > 0:
                                                                emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                        else:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[0] = arg1
                                mem[32] = 6
                                if stor6[address(arg1)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[mem[64] + 32] = address(arg1)
                                    _13141 = mem[64]
                                    mem[mem[64]] = 20
                                    mem[64] = mem[64] + 52
                                    if sha3(mem[_13141 + 32 len mem[_13141]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg1 == this.address:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor6[address(arg1)]:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if stor22:
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if not arg2:
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                    else:
                                                        if arg2 and _fee > -1 / arg2:
                                                            revert with 'NH{q', 17
                                                        if not arg2:
                                                            revert with 'NH{q', 18
                                                        if arg2 * _fee / arg2 != _fee:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _fee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _fee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                            emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                            if arg2 * _fee / 100 > 0:
                                                                emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                    else:
                        mem[0] = msg.sender
                        mem[32] = 6
                        if stor6[address(msg.sender)]:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[0] = arg1
                                mem[32] = 6
                                if stor6[address(arg1)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[mem[64] + 32] = address(arg1)
                                    _12289 = mem[64]
                                    mem[mem[64]] = 20
                                    mem[64] = mem[64] + 52
                                    if sha3(mem[_12289 + 32 len mem[_12289]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg1 == this.address:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor6[address(msg.sender)]:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if stor22:
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if not arg2:
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                    else:
                                                        if arg2 and _fee > -1 / arg2:
                                                            revert with 'NH{q', 17
                                                        if not arg2:
                                                            revert with 'NH{q', 18
                                                        if arg2 * _fee / arg2 != _fee:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _fee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _fee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                            emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                            if arg2 * _fee / 100 > 0:
                                                                emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                        else:
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11756 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11857 = mem[_11756]
                            require mem[_11756] == mem[_11756 + 12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12253 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12346 = mem[_12253]
                            require mem[_12253] == mem[_12253 + 12 len 20]
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(_12346)
                            require ext_code.size(address(_11857))
                            staticcall address(_11857).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_12346)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12706 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12767 = mem[_12706]
                            require mem[_12706] == mem[_12706 + 12 len 20]
                            if mem[_12706 + 12 len 20] != msg.sender:
                                if stor6[address(msg.sender)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[0] = arg1
                                    mem[32] = 6
                                    if stor6[address(arg1)]:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        mem[mem[64] + 32] = address(arg1)
                                        _13145 = mem[64]
                                        mem[mem[64]] = 20
                                        mem[64] = mem[64] + 52
                                        if sha3(mem[_13145 + 32 len mem[_13145]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg1 == this.address:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if msg.sender == address(_12767):
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if stor22:
                                                        if arg2 < 0:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -1:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if not arg2:
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if arg1 != ext_call.return_data[12 len 20]:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if not arg2:
                                                                    require arg2 <= _maxTxAmount
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.factory() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.WETH() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                            gas gas_remaining wei
                                                                           args address(this.address), address(ext_call.return_data[0])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    if ext_call.return_data[12 len 20] != arg1:
                                                                        stor23.length++
                                                                        stor23[stor23.length].field_0 = arg1
                                                                        stor23[stor23.length].field_256 = arg2
                                                                    if arg2 < 0:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[0] > -1:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[address(msg.sender)] < arg2:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(msg.sender)] -= arg2
                                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(arg1)] += arg2
                                                                    emit Transfer(arg2, msg.sender, arg1);
                                                                else:
                                                                    if arg2 and _sellFee > -1 / arg2:
                                                                        revert with 'NH{q', 17
                                                                    if not arg2:
                                                                        revert with 'NH{q', 18
                                                                    if arg2 * _sellFee / arg2 != _sellFee:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    require arg2 <= _maxTxAmount
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.factory() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.WETH() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                            gas gas_remaining wei
                                                                           args address(this.address), address(ext_call.return_data[0])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    if ext_call.return_data[12 len 20] != arg1:
                                                                        stor23.length++
                                                                        stor23[stor23.length].field_0 = arg1
                                                                        stor23[stor23.length].field_256 = arg2
                                                                    if arg2 < arg2 * _sellFee / 100:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[0] += arg2 * _sellFee / 100
                                                                    if balanceOf[address(msg.sender)] < arg2:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(msg.sender)] -= arg2
                                                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                    emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                    if arg2 * _sellFee / 100 > 0:
                                                                        emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                        else:
                                                            if arg2 and _fee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _fee / arg2 != _fee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if arg1 != ext_call.return_data[12 len 20]:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _fee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _fee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                                emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                                if arg2 * _fee / 100 > 0:
                                                                    emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                            else:
                                                                if not arg2:
                                                                    require arg2 <= _maxTxAmount
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.factory() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.WETH() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                            gas gas_remaining wei
                                                                           args address(this.address), address(ext_call.return_data[0])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    if ext_call.return_data[12 len 20] != arg1:
                                                                        stor23.length++
                                                                        stor23[stor23.length].field_0 = arg1
                                                                        stor23[stor23.length].field_256 = arg2
                                                                    if arg2 < 0:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[0] > -1:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[address(msg.sender)] < arg2:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(msg.sender)] -= arg2
                                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(arg1)] += arg2
                                                                    emit Transfer(arg2, msg.sender, arg1);
                                                                else:
                                                                    if arg2 and _sellFee > -1 / arg2:
                                                                        revert with 'NH{q', 17
                                                                    if not arg2:
                                                                        revert with 'NH{q', 18
                                                                    if arg2 * _sellFee / arg2 != _sellFee:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    require arg2 <= _maxTxAmount
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.factory() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.WETH() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                            gas gas_remaining wei
                                                                           args address(this.address), address(ext_call.return_data[0])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    if ext_call.return_data[12 len 20] != arg1:
                                                                        stor23.length++
                                                                        stor23[stor23.length].field_0 = arg1
                                                                        stor23[stor23.length].field_256 = arg2
                                                                    if arg2 < arg2 * _sellFee / 100:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[0] += arg2 * _sellFee / 100
                                                                    if balanceOf[address(msg.sender)] < arg2:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(msg.sender)] -= arg2
                                                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                    emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                    if arg2 * _sellFee / 100 > 0:
                                                                        emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                            else:
                                if stor6[address(msg.sender)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[0] = arg1
                                    mem[32] = 6
                                    if stor6[address(arg1)]:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        mem[mem[64] + 32] = address(arg1)
                                        _13172 = mem[64]
                                        mem[mem[64]] = 20
                                        mem[64] = mem[64] + 52
                                        if sha3(mem[_13172 + 32 len mem[_13172]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg1 == this.address:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if stor6[address(arg1)]:
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if stor22:
                                                        if arg2 < 0:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -1:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if not arg2:
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if arg1 != ext_call.return_data[12 len 20]:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if not arg2:
                                                                    require arg2 <= _maxTxAmount
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.factory() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.WETH() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                            gas gas_remaining wei
                                                                           args address(this.address), address(ext_call.return_data[0])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    if ext_call.return_data[12 len 20] != arg1:
                                                                        stor23.length++
                                                                        stor23[stor23.length].field_0 = arg1
                                                                        stor23[stor23.length].field_256 = arg2
                                                                    if arg2 < 0:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[0] > -1:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[address(msg.sender)] < arg2:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(msg.sender)] -= arg2
                                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(arg1)] += arg2
                                                                    emit Transfer(arg2, msg.sender, arg1);
                                                                else:
                                                                    if arg2 and _sellFee > -1 / arg2:
                                                                        revert with 'NH{q', 17
                                                                    if not arg2:
                                                                        revert with 'NH{q', 18
                                                                    if arg2 * _sellFee / arg2 != _sellFee:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    require arg2 <= _maxTxAmount
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.factory() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.WETH() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                            gas gas_remaining wei
                                                                           args address(this.address), address(ext_call.return_data[0])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    if ext_call.return_data[12 len 20] != arg1:
                                                                        stor23.length++
                                                                        stor23[stor23.length].field_0 = arg1
                                                                        stor23[stor23.length].field_256 = arg2
                                                                    if arg2 < arg2 * _sellFee / 100:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[0] += arg2 * _sellFee / 100
                                                                    if balanceOf[address(msg.sender)] < arg2:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(msg.sender)] -= arg2
                                                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                    emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                    if arg2 * _sellFee / 100 > 0:
                                                                        emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                        else:
                                                            if arg2 and _fee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _fee / arg2 != _fee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if arg1 != ext_call.return_data[12 len 20]:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _fee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _fee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                                emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                                if arg2 * _fee / 100 > 0:
                                                                    emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                            else:
                                                                if not arg2:
                                                                    require arg2 <= _maxTxAmount
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.factory() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.WETH() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                            gas gas_remaining wei
                                                                           args address(this.address), address(ext_call.return_data[0])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    if ext_call.return_data[12 len 20] != arg1:
                                                                        stor23.length++
                                                                        stor23[stor23.length].field_0 = arg1
                                                                        stor23[stor23.length].field_256 = arg2
                                                                    if arg2 < 0:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[0] > -1:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[address(msg.sender)] < arg2:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(msg.sender)] -= arg2
                                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(arg1)] += arg2
                                                                    emit Transfer(arg2, msg.sender, arg1);
                                                                else:
                                                                    if arg2 and _sellFee > -1 / arg2:
                                                                        revert with 'NH{q', 17
                                                                    if not arg2:
                                                                        revert with 'NH{q', 18
                                                                    if arg2 * _sellFee / arg2 != _sellFee:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    require arg2 <= _maxTxAmount
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.factory() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.WETH() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                            gas gas_remaining wei
                                                                           args address(this.address), address(ext_call.return_data[0])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    if ext_call.return_data[12 len 20] != arg1:
                                                                        stor23.length++
                                                                        stor23[stor23.length].field_0 = arg1
                                                                        stor23[stor23.length].field_256 = arg2
                                                                    if arg2 < arg2 * _sellFee / 100:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[0] += arg2 * _sellFee / 100
                                                                    if balanceOf[address(msg.sender)] < arg2:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(msg.sender)] -= arg2
                                                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                    emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                    if arg2 * _sellFee / 100 > 0:
                                                                        emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                else:
                    mem[32] = 3
                    require balanceOf[address(msg.sender)] >= arg2
                    require ext_code.size(stor24)
                    staticcall stor24.factory() with:
                            gas gas_remaining wei
                    mem[148] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(stor24)
                    staticcall stor24.WETH() with:
                            gas gas_remaining wei
                    mem[ceil32(return_data.size) + 148] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    mem[(2 * ceil32(return_data.size)) + 152] = this.address
                    mem[(2 * ceil32(return_data.size)) + 184] = address(ext_call.return_data[0])
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(ext_call.return_data[0])
                    mem[(2 * ceil32(return_data.size)) + 148] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = (4 * ceil32(return_data.size)) + 148
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if ext_call.return_data[12 len 20] != msg.sender:
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if arg1 == ext_call.return_data[12 len 20]:
                            if stor6[address(msg.sender)]:
                                if stor6[address(msg.sender)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                    return 1
                                if stor6[address(arg1)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                    return 1
                                if sha3(arg1) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                    return 1
                                if arg1 == this.address:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                    return 1
                                if stor6[address(msg.sender)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                    return 1
                                if stor22:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                    return 1
                                if not arg2:
                                    require ext_code.size(stor24)
                                    staticcall stor24.factory() with:
                                            gas gas_remaining wei
                                    mem[(8 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(10 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.WETH() with:
                                            gas gas_remaining wei
                                           args mem[(10 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(12 * ceil32(return_data.size)) + 268] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(this.address), address(ext_call.return_data[0]), mem[(12 * ceil32(return_data.size)) + 332 len 20 * ceil32(return_data.size)]
                                    mem[(12 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if arg1 != ext_call.return_data[12 len 20]:
                                        require arg2 <= _maxTxAmount
                                        mem[(14 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(stor24)
                                        staticcall stor24.factory() with:
                                                gas gas_remaining wei
                                               args mem[(14 * ceil32(return_data.size)) + 268 len 24 * ceil32(return_data.size)]
                                        mem[(14 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        mem[(15 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(stor24)
                                        staticcall stor24.WETH() with:
                                                gas gas_remaining wei
                                               args mem[(15 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                        mem[(15 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        mem[(16 * ceil32(return_data.size)) + 268] = this.address
                                        mem[(16 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args mem[(16 * ceil32(return_data.size)) + 268 len (17 * ceil32(return_data.size)) + 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] == arg1:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            mem[(16 * ceil32(return_data.size)) + 264] = arg2
                                            emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                            mem[(16 * ceil32(return_data.size)) + 264] = 1
                                            return memory
                                              from (16 * ceil32(return_data.size)) + 264
                                               len (31 * ceil32(return_data.size)) + 32
                                        stor23.length++
                                        stor23[stor23.length].field_0 = arg1
                                        stor23[stor23.length].field_256 = arg2
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        mem[(16 * ceil32(return_data.size)) + 328] = arg2
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                        mem[(16 * ceil32(return_data.size)) + 328] = 1
                                        return memory
                                          from (16 * ceil32(return_data.size)) + 328
                                           len (31 * ceil32(return_data.size)) + 32
                                else:
                                    if arg2 and _fee > -1 / arg2:
                                        revert with 'NH{q', 17
                                    if not arg2:
                                        revert with 'NH{q', 18
                                    if arg2 * _fee / arg2 != _fee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    require ext_code.size(stor24)
                                    staticcall stor24.factory() with:
                                            gas gas_remaining wei
                                    mem[(8 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(10 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.WETH() with:
                                            gas gas_remaining wei
                                           args mem[(10 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                    mem[(10 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(12 * ceil32(return_data.size)) + 268] = this.address
                                    mem[(12 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(this.address), address(ext_call.return_data[0]), mem[(12 * ceil32(return_data.size)) + 332 len 20 * ceil32(return_data.size)]
                                    mem[(12 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if arg1 != ext_call.return_data[12 len 20]:
                                        require arg2 <= _maxTxAmount
                                        mem[(14 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(stor24)
                                        staticcall stor24.factory() with:
                                                gas gas_remaining wei
                                               args mem[(14 * ceil32(return_data.size)) + 268 len 24 * ceil32(return_data.size)]
                                        mem[(14 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        mem[(15 * ceil32(return_data.size)) + 264] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(stor24)
                                        staticcall stor24.WETH() with:
                                                gas gas_remaining wei
                                               args mem[(15 * ceil32(return_data.size)) + 268 len 16 * ceil32(return_data.size)]
                                        mem[(15 * ceil32(return_data.size)) + 264] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        mem[(16 * ceil32(return_data.size)) + 268] = this.address
                                        mem[(16 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args mem[(16 * ceil32(return_data.size)) + 268 len (17 * ceil32(return_data.size)) + 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] == arg1:
                                            if arg2 < arg2 * _fee / 100:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[0] += arg2 * _fee / 100
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                            mem[(16 * ceil32(return_data.size)) + 264] = arg2 - (arg2 * _fee / 100)
                                            emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                            if arg2 * _fee / 100 > 0:
                                                mem[(16 * ceil32(return_data.size)) + 264] = arg2 * _fee / 100
                                                emit Transfer(mem[(16 * ceil32(return_data.size)) + 264 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                            mem[(16 * ceil32(return_data.size)) + 264] = 1
                                            return memory
                                              from (16 * ceil32(return_data.size)) + 264
                                               len (31 * ceil32(return_data.size)) + 32
                                        stor23.length++
                                        stor23[stor23.length].field_0 = arg1
                                        stor23[stor23.length].field_256 = arg2
                                        if arg2 < arg2 * _fee / 100:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[0] += arg2 * _fee / 100
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                        mem[(16 * ceil32(return_data.size)) + 328] = arg2 - (arg2 * _fee / 100)
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                        if arg2 * _fee / 100 > 0:
                                            mem[(16 * ceil32(return_data.size)) + 328] = arg2 * _fee / 100
                                            emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                        mem[(16 * ceil32(return_data.size)) + 328] = 1
                                        return memory
                                          from (16 * ceil32(return_data.size)) + 328
                                           len (31 * ceil32(return_data.size)) + 32
                                ('eq', ('param', 'arg1'), ('ext_call.return_data', 12, 20))
                                if not arg2:
                                    require arg2 <= _maxTxAmount
                                    mem[(14 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.factory() with:
                                            gas gas_remaining wei
                                           args mem[(14 * ceil32(return_data.size)) + 332 len 24 * ceil32(return_data.size)]
                                    mem[(14 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(15 * ceil32(return_data.size)) + 328] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.WETH() with:
                                            gas gas_remaining wei
                                           args mem[(15 * ceil32(return_data.size)) + 332 len 16 * ceil32(return_data.size)]
                                    mem[(15 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(16 * ceil32(return_data.size)) + 332] = this.address
                                    mem[(16 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args mem[(16 * ceil32(return_data.size)) + 332 len (17 * ceil32(return_data.size)) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == arg1:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        mem[(16 * ceil32(return_data.size)) + 328] = arg2
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                        mem[(16 * ceil32(return_data.size)) + 328] = 1
                                        return memory
                                          from (16 * ceil32(return_data.size)) + 328
                                           len (31 * ceil32(return_data.size)) + 32
                                    stor23.length++
                                    stor23[stor23.length].field_0 = arg1
                                    stor23[stor23.length].field_256 = arg2
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    mem[(16 * ceil32(return_data.size)) + 392] = arg2
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                else:
                                    if arg2 and _sellFee > -1 / arg2:
                                        revert with 'NH{q', 17
                                    if not arg2:
                                        revert with 'NH{q', 18
                                    if arg2 * _sellFee / arg2 != _sellFee:
                                        revert with 0, 'SafeMath: multiplication overflow', mem[(14 * ceil32(return_data.size)) + 396 len 24 * ceil32(return_data.size)]
                                    require arg2 <= _maxTxAmount
                                    mem[(14 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.factory() with:
                                            gas gas_remaining wei
                                           args mem[(14 * ceil32(return_data.size)) + 332 len 24 * ceil32(return_data.size)]
                                    mem[(14 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(15 * ceil32(return_data.size)) + 328] = 0xad5c464800000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(stor24)
                                    staticcall stor24.WETH() with:
                                            gas gas_remaining wei
                                           args mem[(15 * ceil32(return_data.size)) + 332 len 16 * ceil32(return_data.size)]
                                    mem[(15 * ceil32(return_data.size)) + 328] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(16 * ceil32(return_data.size)) + 332] = this.address
                                    mem[(16 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args mem[(16 * ceil32(return_data.size)) + 332 len (17 * ceil32(return_data.size)) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == arg1:
                                        if arg2 < arg2 * _sellFee / 100:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[0] += arg2 * _sellFee / 100
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                        mem[(16 * ceil32(return_data.size)) + 328] = arg2 - (arg2 * _sellFee / 100)
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                        if arg2 * _sellFee / 100 > 0:
                                            mem[(16 * ceil32(return_data.size)) + 328] = arg2 * _sellFee / 100
                                            emit Transfer(mem[(16 * ceil32(return_data.size)) + 328 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                        mem[(16 * ceil32(return_data.size)) + 328] = 1
                                        return memory
                                          from (16 * ceil32(return_data.size)) + 328
                                           len (31 * ceil32(return_data.size)) + 32
                                    stor23.length++
                                    stor23[stor23.length].field_0 = arg1
                                    stor23[stor23.length].field_256 = arg2
                                    if arg2 < arg2 * _sellFee / 100:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[0] += arg2 * _sellFee / 100
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                    mem[(16 * ceil32(return_data.size)) + 392] = arg2 - (arg2 * _sellFee / 100)
                                    emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, arg1);
                                    if arg2 * _sellFee / 100 > 0:
                                        mem[(16 * ceil32(return_data.size)) + 392] = arg2 * _sellFee / 100
                                        emit Transfer(mem[(16 * ceil32(return_data.size)) + 392 len (31 * ceil32(return_data.size)) + 32], msg.sender, 0);
                                mem[(16 * ceil32(return_data.size)) + 392] = 1
                                return memory
                                  from (16 * ceil32(return_data.size)) + 392
                                   len (31 * ceil32(return_data.size)) + 32
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if stor6[address(msg.sender)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                        if stor6[address(arg1)]:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                        if sha3(arg1) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                        if arg1 == this.address:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                        if ext_call.return_data[12 len 20] != msg.sender:
                            if msg.sender == address(ext_call.return_data[0]):
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                        else:
                            if stor6[address(arg1)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                                return 1
                        if stor22:
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(arg2, msg.sender, arg1);
                            return 1
                        if not arg2:
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(15 * ceil32(return_data.size)) + 268] = this.address
                            mem[(15 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(ext_call.return_data[0]), mem[(15 * ceil32(return_data.size)) + 332 len 5 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if arg1 != ext_call.return_data[12 len 20]:
                                require arg2 <= _maxTxAmount
                                mem[(17 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                       args mem[(17 * ceil32(return_data.size)) + 268 len 8 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(19 * ceil32(return_data.size)) + 268] = this.address
                                mem[(19 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(ext_call.return_data[0])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] == arg1:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(address arg1, address arg2, uint256 arg3):
                                                  arg2,
                                                  mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                                  msg.sender,
                                                  arg1,
                                    return 1, mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)]
                                stor23.length++
                                stor23[stor23.length].field_0 = arg1
                                stor23[stor23.length].field_256 = arg2
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2,
                                              mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              arg1,
                                return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                        else:
                            if arg2 and _fee > -1 / arg2:
                                revert with 'NH{q', 17
                            if not arg2:
                                revert with 'NH{q', 18
                            if arg2 * _fee / arg2 != _fee:
                                revert with 0, 'SafeMath: multiplication overflow'
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(15 * ceil32(return_data.size)) + 268] = this.address
                            mem[(15 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(ext_call.return_data[0]), mem[(15 * ceil32(return_data.size)) + 332 len 5 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if arg1 != ext_call.return_data[12 len 20]:
                                require arg2 <= _maxTxAmount
                                mem[(17 * ceil32(return_data.size)) + 264] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                                require ext_code.size(stor24)
                                staticcall stor24.factory() with:
                                        gas gas_remaining wei
                                       args mem[(17 * ceil32(return_data.size)) + 268 len 8 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(stor24)
                                staticcall stor24.WETH() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(19 * ceil32(return_data.size)) + 268] = this.address
                                mem[(19 * ceil32(return_data.size)) + 300] = address(ext_call.return_data[0])
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(ext_call.return_data[0])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] == arg1:
                                    if arg2 < arg2 * _fee / 100:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[0] += arg2 * _fee / 100
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                    emit Transfer(address arg1, address arg2, uint256 arg3):
                                                  arg2 - (arg2 * _fee / 100),
                                                  mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                                  msg.sender,
                                                  arg1,
                                    if arg2 * _fee / 100 > 0:
                                        emit Transfer(address arg1, address arg2, uint256 arg3):
                                                      arg2 * _fee / 100,
                                                      mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)],
                                                      msg.sender,
                                                      0,
                                    return 1, mem[(21 * ceil32(return_data.size)) + 296 len 17 * ceil32(return_data.size)]
                                stor23.length++
                                stor23[stor23.length].field_0 = arg1
                                stor23[stor23.length].field_256 = arg2
                                if arg2 < arg2 * _fee / 100:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[0] += arg2 * _fee / 100
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 - (arg2 * _fee / 100),
                                              mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              arg1,
                                if arg2 * _fee / 100 > 0:
                                    emit Transfer(address arg1, address arg2, uint256 arg3):
                                                  arg2 * _fee / 100,
                                                  mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                                  msg.sender,
                                                  0,
                                return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                        ('eq', ('param', 'arg1'), ('ext_call.return_data', 12, 20))
                        if not arg2:
                            require arg2 <= _maxTxAmount
                            mem[(17 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                                   args mem[(17 * ceil32(return_data.size)) + 332 len 8 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(19 * ceil32(return_data.size)) + 332] = this.address
                            mem[(19 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] == arg1:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2,
                                              mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              arg1,
                                return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                            stor23.length++
                            stor23[stor23.length].field_0 = arg1
                            stor23[stor23.length].field_256 = arg2
                            if arg2 < 0:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -1:
                                revert with 'NH{q', 17
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] += arg2
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2,
                                          mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                        else:
                            if arg2 and _sellFee > -1 / arg2:
                                revert with 'NH{q', 17
                            if not arg2:
                                revert with 'NH{q', 18
                            if arg2 * _sellFee / arg2 != _sellFee:
                                revert with 0, 'SafeMath: multiplication overflow', mem[(17 * ceil32(return_data.size)) + 396 len 9 * ceil32(return_data.size)]
                            require arg2 <= _maxTxAmount
                            mem[(17 * ceil32(return_data.size)) + 328] = 0xc45a015500000000000000000000000000000000000000000000000000000000
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                                   args mem[(17 * ceil32(return_data.size)) + 332 len 8 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(19 * ceil32(return_data.size)) + 332] = this.address
                            mem[(19 * ceil32(return_data.size)) + 364] = address(ext_call.return_data[0])
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] == arg1:
                                if arg2 < arg2 * _sellFee / 100:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[0] += arg2 * _sellFee / 100
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 - (arg2 * _sellFee / 100),
                                              mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              arg1,
                                if arg2 * _sellFee / 100 > 0:
                                    emit Transfer(address arg1, address arg2, uint256 arg3):
                                                  arg2 * _sellFee / 100,
                                                  mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)],
                                                  msg.sender,
                                                  0,
                                return 1, mem[(21 * ceil32(return_data.size)) + 360 len 17 * ceil32(return_data.size)]
                            stor23.length++
                            stor23[stor23.length].field_0 = arg1
                            stor23[stor23.length].field_256 = arg2
                            if arg2 < arg2 * _sellFee / 100:
                                revert with 'NH{q', 17
                            if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[0] += arg2 * _sellFee / 100
                            if balanceOf[address(msg.sender)] < arg2:
                                revert with 'NH{q', 17
                            balanceOf[address(msg.sender)] -= arg2
                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                revert with 'NH{q', 17
                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                            emit Transfer(address arg1, address arg2, uint256 arg3):
                                          arg2 - (arg2 * _sellFee / 100),
                                          mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                          msg.sender,
                                          arg1,
                            if arg2 * _sellFee / 100 > 0:
                                emit Transfer(address arg1, address arg2, uint256 arg3):
                                              arg2 * _sellFee / 100,
                                              mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)],
                                              msg.sender,
                                              0,
                        return 1, mem[(21 * ceil32(return_data.size)) + 424 len 17 * ceil32(return_data.size)]
                    idx = 0
                    while idx < stor23.length:
                        mem[0] = stor23[idx].field_0
                        mem[32] = 3
                        _651 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_651] = 26
                        mem[_651 + 32] = 'SafeMath: division by zero'
                        if idx >= stor23.length:
                            revert with 'NH{q', 50
                        mem[0] = stor23[idx].field_0
                        mem[32] = 3
                        balanceOf[stor23[idx].field_0] = balanceOf[stor23[idx].field_0] / 100
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                    stor23.length = 0
                    mem[0] = 23
                    idx = 0
                    while 2 * stor23.length > idx:
                        stor23[idx].field_0 = 0
                        stor23[idx].field_256 = 0
                        idx = idx + 2
                        continue 
                    require ext_code.size(stor24)
                    staticcall stor24.factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8589 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8702 = mem[_8589]
                    require mem[_8589] == mem[_8589 + 12 len 20]
                    require ext_code.size(stor24)
                    staticcall stor24.WETH() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9287 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9357 = mem[_9287]
                    require mem[_9287] == mem[_9287 + 12 len 20]
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(_9357)
                    require ext_code.size(address(_8702))
                    staticcall address(_8702).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_9357)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10706 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10706] == mem[_10706 + 12 len 20]
                    if arg1 != mem[_10706 + 12 len 20]:
                        require ext_code.size(stor24)
                        staticcall stor24.factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11723 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11830 = mem[_11723]
                        require mem[_11723] == mem[_11723 + 12 len 20]
                        require ext_code.size(stor24)
                        staticcall stor24.WETH() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12228 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12323 = mem[_12228]
                        require mem[_12228] == mem[_12228 + 12 len 20]
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(_12323)
                        require ext_code.size(address(_11830))
                        staticcall address(_11830).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_12323)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12682 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12749 = mem[_12682]
                        require mem[_12682] == mem[_12682 + 12 len 20]
                        if mem[_12682 + 12 len 20] != msg.sender:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[0] = arg1
                                mem[32] = 6
                                if stor6[address(arg1)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[mem[64] + 32] = address(arg1)
                                    _13110 = mem[64]
                                    mem[mem[64]] = 20
                                    mem[64] = mem[64] + 52
                                    if sha3(mem[_13110 + 32 len mem[_13110]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg1 == this.address:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if msg.sender == address(_12749):
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if stor22:
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if not arg2:
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                    else:
                                                        if arg2 and _fee > -1 / arg2:
                                                            revert with 'NH{q', 17
                                                        if not arg2:
                                                            revert with 'NH{q', 18
                                                        if arg2 * _fee / arg2 != _fee:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _fee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _fee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                            emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                            if arg2 * _fee / 100 > 0:
                                                                emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                        else:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[0] = arg1
                                mem[32] = 6
                                if stor6[address(arg1)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[mem[64] + 32] = address(arg1)
                                    _13148 = mem[64]
                                    mem[mem[64]] = 20
                                    mem[64] = mem[64] + 52
                                    if sha3(mem[_13148 + 32 len mem[_13148]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg1 == this.address:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor6[address(arg1)]:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if stor22:
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if not arg2:
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                    else:
                                                        if arg2 and _fee > -1 / arg2:
                                                            revert with 'NH{q', 17
                                                        if not arg2:
                                                            revert with 'NH{q', 18
                                                        if arg2 * _fee / arg2 != _fee:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _fee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _fee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                            emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                            if arg2 * _fee / 100 > 0:
                                                                emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                    else:
                        mem[0] = msg.sender
                        mem[32] = 6
                        if stor6[address(msg.sender)]:
                            if stor6[address(msg.sender)]:
                                if arg2 < 0:
                                    revert with 'NH{q', 17
                                if balanceOf[0] > -1:
                                    revert with 'NH{q', 17
                                if balanceOf[address(msg.sender)] < arg2:
                                    revert with 'NH{q', 17
                                balanceOf[address(msg.sender)] -= arg2
                                if balanceOf[address(arg1)] > -arg2 - 1:
                                    revert with 'NH{q', 17
                                balanceOf[address(arg1)] += arg2
                                emit Transfer(arg2, msg.sender, arg1);
                            else:
                                mem[0] = arg1
                                mem[32] = 6
                                if stor6[address(arg1)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[mem[64] + 32] = address(arg1)
                                    _12297 = mem[64]
                                    mem[mem[64]] = 20
                                    mem[64] = mem[64] + 52
                                    if sha3(mem[_12297 + 32 len mem[_12297]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        if arg1 == this.address:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if stor6[address(msg.sender)]:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if stor22:
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if not arg2:
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < 0:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -1:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] += arg2
                                                            emit Transfer(arg2, msg.sender, arg1);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                    else:
                                                        if arg2 and _fee > -1 / arg2:
                                                            revert with 'NH{q', 17
                                                        if not arg2:
                                                            revert with 'NH{q', 18
                                                        if arg2 * _fee / arg2 != _fee:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.factory() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(stor24)
                                                        staticcall stor24.WETH() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        require ext_code.size(address(ext_call.return_data[0]))
                                                        staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                gas gas_remaining wei
                                                               args address(this.address), address(ext_call.return_data[0])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                        if arg1 != ext_call.return_data[12 len 20]:
                                                            require arg2 <= _maxTxAmount
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if ext_call.return_data[12 len 20] != arg1:
                                                                stor23.length++
                                                                stor23[stor23.length].field_0 = arg1
                                                                stor23[stor23.length].field_256 = arg2
                                                            if arg2 < arg2 * _fee / 100:
                                                                revert with 'NH{q', 17
                                                            if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[0] += arg2 * _fee / 100
                                                            if balanceOf[address(msg.sender)] < arg2:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(msg.sender)] -= arg2
                                                            if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                revert with 'NH{q', 17
                                                            balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                            emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                            if arg2 * _fee / 100 > 0:
                                                                emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                        else:
                                                            if not arg2:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if arg2 and _sellFee > -1 / arg2:
                                                                    revert with 'NH{q', 17
                                                                if not arg2:
                                                                    revert with 'NH{q', 18
                                                                if arg2 * _sellFee / arg2 != _sellFee:
                                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _sellFee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _sellFee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                if arg2 * _sellFee / 100 > 0:
                                                                    emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                        else:
                            require ext_code.size(stor24)
                            staticcall stor24.factory() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11766 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11861 = mem[_11766]
                            require mem[_11766] == mem[_11766 + 12 len 20]
                            require ext_code.size(stor24)
                            staticcall stor24.WETH() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12261 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12351 = mem[_12261]
                            require mem[_12261] == mem[_12261 + 12 len 20]
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(_12351)
                            require ext_code.size(address(_11861))
                            staticcall address(_11861).getPair(address arg1, address arg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_12351)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12710 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12770 = mem[_12710]
                            require mem[_12710] == mem[_12710 + 12 len 20]
                            if mem[_12710 + 12 len 20] != msg.sender:
                                if stor6[address(msg.sender)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[0] = arg1
                                    mem[32] = 6
                                    if stor6[address(arg1)]:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        mem[mem[64] + 32] = address(arg1)
                                        _13152 = mem[64]
                                        mem[mem[64]] = 20
                                        mem[64] = mem[64] + 52
                                        if sha3(mem[_13152 + 32 len mem[_13152]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg1 == this.address:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if msg.sender == address(_12770):
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if stor22:
                                                        if arg2 < 0:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -1:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if not arg2:
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if arg1 != ext_call.return_data[12 len 20]:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if not arg2:
                                                                    require arg2 <= _maxTxAmount
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.factory() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.WETH() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                            gas gas_remaining wei
                                                                           args address(this.address), address(ext_call.return_data[0])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    if ext_call.return_data[12 len 20] != arg1:
                                                                        stor23.length++
                                                                        stor23[stor23.length].field_0 = arg1
                                                                        stor23[stor23.length].field_256 = arg2
                                                                    if arg2 < 0:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[0] > -1:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[address(msg.sender)] < arg2:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(msg.sender)] -= arg2
                                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(arg1)] += arg2
                                                                    emit Transfer(arg2, msg.sender, arg1);
                                                                else:
                                                                    if arg2 and _sellFee > -1 / arg2:
                                                                        revert with 'NH{q', 17
                                                                    if not arg2:
                                                                        revert with 'NH{q', 18
                                                                    if arg2 * _sellFee / arg2 != _sellFee:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    require arg2 <= _maxTxAmount
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.factory() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.WETH() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                            gas gas_remaining wei
                                                                           args address(this.address), address(ext_call.return_data[0])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    if ext_call.return_data[12 len 20] != arg1:
                                                                        stor23.length++
                                                                        stor23[stor23.length].field_0 = arg1
                                                                        stor23[stor23.length].field_256 = arg2
                                                                    if arg2 < arg2 * _sellFee / 100:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[0] += arg2 * _sellFee / 100
                                                                    if balanceOf[address(msg.sender)] < arg2:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(msg.sender)] -= arg2
                                                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                    emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                    if arg2 * _sellFee / 100 > 0:
                                                                        emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                        else:
                                                            if arg2 and _fee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _fee / arg2 != _fee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if arg1 != ext_call.return_data[12 len 20]:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _fee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _fee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                                emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                                if arg2 * _fee / 100 > 0:
                                                                    emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                            else:
                                                                if not arg2:
                                                                    require arg2 <= _maxTxAmount
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.factory() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.WETH() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                            gas gas_remaining wei
                                                                           args address(this.address), address(ext_call.return_data[0])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    if ext_call.return_data[12 len 20] != arg1:
                                                                        stor23.length++
                                                                        stor23[stor23.length].field_0 = arg1
                                                                        stor23[stor23.length].field_256 = arg2
                                                                    if arg2 < 0:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[0] > -1:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[address(msg.sender)] < arg2:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(msg.sender)] -= arg2
                                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(arg1)] += arg2
                                                                    emit Transfer(arg2, msg.sender, arg1);
                                                                else:
                                                                    if arg2 and _sellFee > -1 / arg2:
                                                                        revert with 'NH{q', 17
                                                                    if not arg2:
                                                                        revert with 'NH{q', 18
                                                                    if arg2 * _sellFee / arg2 != _sellFee:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    require arg2 <= _maxTxAmount
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.factory() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.WETH() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                            gas gas_remaining wei
                                                                           args address(this.address), address(ext_call.return_data[0])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    if ext_call.return_data[12 len 20] != arg1:
                                                                        stor23.length++
                                                                        stor23[stor23.length].field_0 = arg1
                                                                        stor23[stor23.length].field_256 = arg2
                                                                    if arg2 < arg2 * _sellFee / 100:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[0] += arg2 * _sellFee / 100
                                                                    if balanceOf[address(msg.sender)] < arg2:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(msg.sender)] -= arg2
                                                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                    emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                    if arg2 * _sellFee / 100 > 0:
                                                                        emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                            else:
                                if stor6[address(msg.sender)]:
                                    if arg2 < 0:
                                        revert with 'NH{q', 17
                                    if balanceOf[0] > -1:
                                        revert with 'NH{q', 17
                                    if balanceOf[address(msg.sender)] < arg2:
                                        revert with 'NH{q', 17
                                    balanceOf[address(msg.sender)] -= arg2
                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                        revert with 'NH{q', 17
                                    balanceOf[address(arg1)] += arg2
                                    emit Transfer(arg2, msg.sender, arg1);
                                else:
                                    mem[0] = arg1
                                    mem[32] = 6
                                    if stor6[address(arg1)]:
                                        if arg2 < 0:
                                            revert with 'NH{q', 17
                                        if balanceOf[0] > -1:
                                            revert with 'NH{q', 17
                                        if balanceOf[address(msg.sender)] < arg2:
                                            revert with 'NH{q', 17
                                        balanceOf[address(msg.sender)] -= arg2
                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                            revert with 'NH{q', 17
                                        balanceOf[address(arg1)] += arg2
                                        emit Transfer(arg2, msg.sender, arg1);
                                    else:
                                        mem[mem[64] + 32] = address(arg1)
                                        _13176 = mem[64]
                                        mem[mem[64]] = 20
                                        mem[64] = mem[64] + 52
                                        if sha3(mem[_13176 + 32 len mem[_13176]]) == 0x4342ccd4d128d764dd8019fa67e2a1577991c665a74d1acfdc2ccdcae89bd2ba:
                                            if arg2 < 0:
                                                revert with 'NH{q', 17
                                            if balanceOf[0] > -1:
                                                revert with 'NH{q', 17
                                            if balanceOf[address(msg.sender)] < arg2:
                                                revert with 'NH{q', 17
                                            balanceOf[address(msg.sender)] -= arg2
                                            if balanceOf[address(arg1)] > -arg2 - 1:
                                                revert with 'NH{q', 17
                                            balanceOf[address(arg1)] += arg2
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            if arg1 == this.address:
                                                if arg2 < 0:
                                                    revert with 'NH{q', 17
                                                if balanceOf[0] > -1:
                                                    revert with 'NH{q', 17
                                                if balanceOf[address(msg.sender)] < arg2:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(msg.sender)] -= arg2
                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                    revert with 'NH{q', 17
                                                balanceOf[address(arg1)] += arg2
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                if stor6[address(arg1)]:
                                                    if arg2 < 0:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[0] > -1:
                                                        revert with 'NH{q', 17
                                                    if balanceOf[address(msg.sender)] < arg2:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(msg.sender)] -= arg2
                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                        revert with 'NH{q', 17
                                                    balanceOf[address(arg1)] += arg2
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    if stor22:
                                                        if arg2 < 0:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[0] > -1:
                                                            revert with 'NH{q', 17
                                                        if balanceOf[address(msg.sender)] < arg2:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(msg.sender)] -= arg2
                                                        if balanceOf[address(arg1)] > -arg2 - 1:
                                                            revert with 'NH{q', 17
                                                        balanceOf[address(arg1)] += arg2
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        if not arg2:
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if arg1 != ext_call.return_data[12 len 20]:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < 0:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -1:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] += arg2
                                                                emit Transfer(arg2, msg.sender, arg1);
                                                            else:
                                                                if not arg2:
                                                                    require arg2 <= _maxTxAmount
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.factory() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.WETH() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                            gas gas_remaining wei
                                                                           args address(this.address), address(ext_call.return_data[0])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    if ext_call.return_data[12 len 20] != arg1:
                                                                        stor23.length++
                                                                        stor23[stor23.length].field_0 = arg1
                                                                        stor23[stor23.length].field_256 = arg2
                                                                    if arg2 < 0:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[0] > -1:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[address(msg.sender)] < arg2:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(msg.sender)] -= arg2
                                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(arg1)] += arg2
                                                                    emit Transfer(arg2, msg.sender, arg1);
                                                                else:
                                                                    if arg2 and _sellFee > -1 / arg2:
                                                                        revert with 'NH{q', 17
                                                                    if not arg2:
                                                                        revert with 'NH{q', 18
                                                                    if arg2 * _sellFee / arg2 != _sellFee:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    require arg2 <= _maxTxAmount
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.factory() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.WETH() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                            gas gas_remaining wei
                                                                           args address(this.address), address(ext_call.return_data[0])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    if ext_call.return_data[12 len 20] != arg1:
                                                                        stor23.length++
                                                                        stor23[stor23.length].field_0 = arg1
                                                                        stor23[stor23.length].field_256 = arg2
                                                                    if arg2 < arg2 * _sellFee / 100:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[0] += arg2 * _sellFee / 100
                                                                    if balanceOf[address(msg.sender)] < arg2:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(msg.sender)] -= arg2
                                                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                    emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                    if arg2 * _sellFee / 100 > 0:
                                                                        emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
                                                        else:
                                                            if arg2 and _fee > -1 / arg2:
                                                                revert with 'NH{q', 17
                                                            if not arg2:
                                                                revert with 'NH{q', 18
                                                            if arg2 * _fee / arg2 != _fee:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.factory() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(stor24)
                                                            staticcall stor24.WETH() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            require ext_code.size(address(ext_call.return_data[0]))
                                                            staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), address(ext_call.return_data[0])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            if arg1 != ext_call.return_data[12 len 20]:
                                                                require arg2 <= _maxTxAmount
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.factory() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(stor24)
                                                                staticcall stor24.WETH() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                require ext_code.size(address(ext_call.return_data[0]))
                                                                staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                        gas gas_remaining wei
                                                                       args address(this.address), address(ext_call.return_data[0])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                if ext_call.return_data[12 len 20] != arg1:
                                                                    stor23.length++
                                                                    stor23[stor23.length].field_0 = arg1
                                                                    stor23[stor23.length].field_256 = arg2
                                                                if arg2 < arg2 * _fee / 100:
                                                                    revert with 'NH{q', 17
                                                                if balanceOf[0] > -(arg2 * _fee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[0] += arg2 * _fee / 100
                                                                if balanceOf[address(msg.sender)] < arg2:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(msg.sender)] -= arg2
                                                                if balanceOf[address(arg1)] > -arg2 + (arg2 * _fee / 100) - 1:
                                                                    revert with 'NH{q', 17
                                                                balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _fee / 100)
                                                                emit Transfer((arg2 - (arg2 * _fee / 100)), msg.sender, arg1);
                                                                if arg2 * _fee / 100 > 0:
                                                                    emit Transfer((arg2 * _fee / 100), msg.sender, 0);
                                                            else:
                                                                if not arg2:
                                                                    require arg2 <= _maxTxAmount
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.factory() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.WETH() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                            gas gas_remaining wei
                                                                           args address(this.address), address(ext_call.return_data[0])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    if ext_call.return_data[12 len 20] != arg1:
                                                                        stor23.length++
                                                                        stor23[stor23.length].field_0 = arg1
                                                                        stor23[stor23.length].field_256 = arg2
                                                                    if arg2 < 0:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[0] > -1:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[address(msg.sender)] < arg2:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(msg.sender)] -= arg2
                                                                    if balanceOf[address(arg1)] > -arg2 - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(arg1)] += arg2
                                                                    emit Transfer(arg2, msg.sender, arg1);
                                                                else:
                                                                    if arg2 and _sellFee > -1 / arg2:
                                                                        revert with 'NH{q', 17
                                                                    if not arg2:
                                                                        revert with 'NH{q', 18
                                                                    if arg2 * _sellFee / arg2 != _sellFee:
                                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                                    require arg2 <= _maxTxAmount
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.factory() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(stor24)
                                                                    staticcall stor24.WETH() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    require ext_code.size(address(ext_call.return_data[0]))
                                                                    staticcall address(ext_call.return_data[0]).getPair(address arg1, address arg2) with:
                                                                            gas gas_remaining wei
                                                                           args address(this.address), address(ext_call.return_data[0])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    if ext_call.return_data[12 len 20] != arg1:
                                                                        stor23.length++
                                                                        stor23[stor23.length].field_0 = arg1
                                                                        stor23[stor23.length].field_256 = arg2
                                                                    if arg2 < arg2 * _sellFee / 100:
                                                                        revert with 'NH{q', 17
                                                                    if balanceOf[0] > -(arg2 * _sellFee / 100) - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[0] += arg2 * _sellFee / 100
                                                                    if balanceOf[address(msg.sender)] < arg2:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(msg.sender)] -= arg2
                                                                    if balanceOf[address(arg1)] > -arg2 + (arg2 * _sellFee / 100) - 1:
                                                                        revert with 'NH{q', 17
                                                                    balanceOf[address(arg1)] = balanceOf[address(arg1)] + arg2 - (arg2 * _sellFee / 100)
                                                                    emit Transfer((arg2 - (arg2 * _sellFee / 100)), msg.sender, arg1);
                                                                    if arg2 * _sellFee / 100 > 0:
                                                                        emit Transfer((arg2 * _sellFee / 100), msg.sender, 0);
    return 1
}



}
